import '@nomiclabs/hardhat-ethers';
import { ethers, network } from 'hardhat';
import { TempleTeamPayments, TempleTeamPayments__factory } from '../../../typechain';
import { deployAndMine, DeployedContracts, DEPLOYED_CONTRACTS, expectAddressWithPrivateKey, fromAtto, mine, toAtto } from '../helpers';


async function main() {
  expectAddressWithPrivateKey();
  const [owner] = await ethers.getSigners();

  let DEPLOYED: DeployedContracts;

  if (DEPLOYED_CONTRACTS[network.name] === undefined) {
    console.log(`No contracts configured for ${network.name}`)
    return;
  } else {
    DEPLOYED = DEPLOYED_CONTRACTS[network.name];
  }
  const ONE_MONTH_IN_SECONDS = 2629800;
  const templeTeamPaymentsFactory = new TempleTeamPayments__factory(owner);
  const templeTeamFixedPayments: TempleTeamPayments = await deployAndMine(
    'TEMPLE_TEAM_EPOCH_3', templeTeamPaymentsFactory, templeTeamPaymentsFactory.deploy,
    DEPLOYED.TEMPLE,
    ONE_MONTH_IN_SECONDS * 2,
    Math.round(Date.now()/1000 - ONE_MONTH_IN_SECONDS)
  )

  const allocs : [string, number][] = [
    ["0x0238d3e5c71e9441e6A07292b535F66762FC9E9D",115385],
    ["0x967Bc81B28Ea8287F03E7f50974C356183FbF534",27692],
    ["0x35093a15f7310459821e597b074443b6afc3d8c2",30769],
    ["0x35df342eBD5dc7706497350b297852DFeA927Ebb",30769],
    ["0x54120e6f4379A525AcC5aE7DBbf6758c271b8b15",107692],
    ["0xAEABd740C58921Fe0C2d0Dc8F7f202f345d7D7FB",76923],
    ["0xeDD7C21b308f78373F5A5D8ebB844717d1cCb6f5",10769],
    ["0x3C1E397d428281F156F8fa733Ba160Faa2baB946",76923],
    ["0x73E29Bb563592610a4DdDfbeEFC0259E3A27e410",18462],
    ["0xe64BF764E42A03D54685aCf32379C0f0B7B0a625",19231],
    ["0x02DdD68E1A4bba3C263718A381C03BAD4a97beC1",61538],
    ["0x1c079e7fc9d8a75e4055cbf6a83f9bbfa13f7103",7692],
    ["0xc74fE043A56f29B647033E3CD1a8044b3e79B151",7385],
    ["0xaa64cfdc7188246e12e023260cf05a21e13567a4",7692],
    ["0x3AC87eD1BEDB341f97656d5f24EDDEf7Fc810811",61538],
    ["0xe345e9605391c13Fd2502e7141D54b752AaDB184",53846],
    ["0x0F511FE5Dcdb54b0b19A5A2a57E76977Ae728C15",30769],
    ["0x62f1A7F06268D3a0993E4eA552322AfF14E6BB64",34615],
    ["0x774E9010cBbB1C5B07D6Dd443939305707Cc8dA7",92308],
    ["0xDE3bCABA48665CBF76969AFC6388fD2872E38954",10769],
    ["0x15B746e7C8ddeE0f857772A70275fFA326072B02",26154],
    ["0xf9dd7ea0fc45148e89c817e7956ab141652ca9a8",30769],
    ["0x90E23D451a716bF25987F055E3E57c1384337fDe",15385],
    ["0x93c0824cdEB2675317f05D4DB08c1F90fdb1D8ea",7692],
    ["0x1a856a0e6A63e289582FaF9b96E05Ab1406e6b07",30769],
    ["0x70b953b65945fc5fe4b0142b73eed1cf1d54277d",38462],
    ["0xC086c55FDd80418e62e1789d9174AA2A639A6B1F",7692],
    ["0xE241e9c5ad983dF9e97cF342F6fC891bE0DE2169",10256],
    ["0xd53db76369fbb6584e0bec45d4e8d62eb46e5700",7692],
    ["0x0d3F6d1d55C6D9C5B81F5CC517F259332C79df60",30769],
    ["0x45A7c62f2ba4a31D07B28f81BF63c67968b0eFB9",3077],
    ["0x7DaE5d7aA1abb5EcFA8BE12D0C5E9A84F0e5C7CA",3077],
    ["0xcc66308c7fF2C5A317D384C770F6A5B7b5D97B0D",76923],
    ["0x3515A9541253C528a63b4Ca2d98Bca21d7b076B3",26923],
    ["0x6A666E17Bcc5Bf585266F49E321261788B69DfDd",7692],
    ["0xd50Df43803DD8ff6c268103794fa9E061Fee487b",7692],
    ["0x588282ADA5B9D872d0eBF506c5C1b541e2a60BBa",12308],
    ["0x5819F444ef13844Ac5974A318E3dFC305d79e398",10000],
    ["0x4A19A34F1a1aE76A659f8ae4A9c76F270De84e45",15385],
    ["0xF94A14fdEbf75007329E50f0aC9f459fF566B157",34615],
    ["0xF9B4De4bB735ACE677813ac8E24B6530B2D595E9",10256],
    ["0xE0bb475Ef181168dFF18D2BD7d1C147d4dc502F9",38462],
    ["0xF20F4bdb88fFB71b68A8103AB82C6Ae1D653F6dc",92308],
    ["0x2d9d668999090f56ed4ca46738e51e56885f67b4",7692],
    ["0x4e67a556cc3d397996020077393ad4b2e0b71020",18462],
    ["0x5dfD6240980D53F9B0A301d2A315B9E670Ef6516",61538],
    ["0x87975bee94788afd62e7ad772db2953696f870a5",12308],
    ["0x2627Bf1fB61A231A0640e8b93C474379337f37E9",92308],
    ["0xf494b693d210990dcE061bfcA03dF49Ec1ffFd17",115385],
    ["0xf3a9C596F0245b3010ACA1cF842A1822C236917A",4923],
    ["0xD07449b3D4aD58CfB55B68FbAE783C71d847C4a3",15385],
    ["0xa4Cfd19f426b503a6A412476e1Fa75786f9eECac",7692],
    ["0xCD57b2cdC5ACaBB8CD3Ab08a40e4eEdAaf3eE762",20000],
    ["0x853f5d623ee095e680e5b73ee4912e1356bac5f1",53846],
    ["0xB122F96F40203ed018E0F17126dDdD0D79855c8a",15384],
    ["0xD7E2622dFe0D8e4fC19fd3DF34BDCab6B6BBa383",30769],
    ["0xf2e1a88af3d6cddd60b9c43cee53d655cba40b2c",38462],
    ["0x9A130433D06434D79005b6bEFebdc0f65eF2e811",7692],
    ["0x476CD7244A63D547E072C79298DF9D9f48cbC5D4",46154],
    ["0xcB8E497B186932DBaDF55e65A4225173F0d35222",38462],
    ["0x08e19c5B9667FA2d49A6709482aa5aC0C4a7b198",46154],
    ["0x79858B89CE5BDF407049D56D7648afFB90234Aa1",8615],
    ["0x547ABB8aDC1C6505c467e9D27a647f0037883E71",115385],
    ["0x5993babe0fc029e1de368ed3c831f0dbb914b010",3846],
    ["0x2239452c923932082F6ebfBA01ABbA34c5eDa312",61538],
  ]

  await mine(templeTeamFixedPayments.setAllocations(
    allocs.map(a => a[0]),
    allocs.map(a => toAtto(a[1])),
  ));

  await mine(templeTeamFixedPayments.transferOwnership(DEPLOYED.MULTISIG))
}

// We recommend this pattern to be able to use async/await everywhere
// and properly handle errors.
main()
  .then(() => process.exit(0))
  .catch(error => {
    console.error(error);
    process.exit(1);
  });