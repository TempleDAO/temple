/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestTreasuryAllocation,
  TestTreasuryAllocationInterface,
} from "../TestTreasuryAllocation";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_STABLEC",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ba5380380610ba583398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100be578081fd5b81516001600160a01b03811681146100d4578182fd5b9392505050565b610abb806100ea6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100af578063a9059cbb146100d7578063f2fde38b146100ea57600080fd5b806339509351146100775780633f3a0c5b1461008c578063715018a6146100a7575b600080fd5b61008a61008536600461094e565b6100fd565b005b610094610125565b6040519081526020015b60405180910390f35b61008a6101cc565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161009e565b61008a6100e536600461094e565b61025e565b61008a6100f8366004610934565b610282565b6001546101219073ffffffffffffffffffffffffffffffffffffffff1683836103b2565b5050565b6001546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561018f57600080fd5b505afa1580156101a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c79190610997565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff163314610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61025c6000610543565b565b6001546101219073ffffffffffffffffffffffffffffffffffffffff1683836105b8565b60005473ffffffffffffffffffffffffffffffffffffffff163314610303576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610249565b73ffffffffffffffffffffffffffffffffffffffff81166103a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610249565b6103af81610543565b50565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561042457600080fd5b505afa158015610438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045c9190610997565b6104669190610a1c565b60405173ffffffffffffffffffffffffffffffffffffffff851660248201526044810182905290915061053d9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610613565b50505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261060e9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016104bb565b505050565b6000610675826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661071f9092919063ffffffff16565b80519091501561060e57808060200190518101906106939190610977565b61060e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610249565b606061072e8484600085610738565b90505b9392505050565b6060824710156107ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610249565b843b610832576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610249565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161085b91906109af565b60006040518083038185875af1925050503d8060008114610898576040519150601f19603f3d011682016040523d82523d6000602084013e61089d565b606091505b50915091506108ad8282866108b8565b979650505050505050565b606083156108c7575081610731565b8251156108d75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024991906109cb565b803573ffffffffffffffffffffffffffffffffffffffff8116811461092f57600080fd5b919050565b600060208284031215610945578081fd5b6107318261090b565b60008060408385031215610960578081fd5b6109698361090b565b946020939093013593505050565b600060208284031215610988578081fd5b81518015158114610731578182fd5b6000602082840312156109a8578081fd5b5051919050565b600082516109c1818460208701610a59565b9190910192915050565b60208152600082518060208401526109ea816040850160208701610a59565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008219821115610a54577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500190565b60005b83811015610a74578181015183820152602001610a5c565b8381111561053d575050600091015256fea264697066735822122093319d3d2f778ac95be657211a1cbab3172d8a9947f80ca8f25a401ab6decf3f64736f6c63430008040033";

export class TestTreasuryAllocation__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _STABLEC: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestTreasuryAllocation> {
    return super.deploy(
      _STABLEC,
      overrides || {}
    ) as Promise<TestTreasuryAllocation>;
  }
  getDeployTransaction(
    _STABLEC: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_STABLEC, overrides || {});
  }
  attach(address: string): TestTreasuryAllocation {
    return super.attach(address) as TestTreasuryAllocation;
  }
  connect(signer: Signer): TestTreasuryAllocation__factory {
    return super.connect(signer) as TestTreasuryAllocation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTreasuryAllocationInterface {
    return new utils.Interface(_abi) as TestTreasuryAllocationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestTreasuryAllocation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestTreasuryAllocation;
  }
}
