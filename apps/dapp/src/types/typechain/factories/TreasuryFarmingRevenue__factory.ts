/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TreasuryFarmingRevenue,
  TreasuryFarmingRevenueInterface,
} from "../TreasuryFarmingRevenue";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Exposure",
        name: "_exposure",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DecreaseShares",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "IncreaseShares",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "revenueClaimed",
        type: "uint256",
      },
    ],
    name: "RevenueClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "revenueEarned",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lifetimeAccRevenueScaledByShare",
        type: "uint256",
      },
    ],
    name: "RevenueEarned",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "revenueEarned",
        type: "uint256",
      },
    ],
    name: "addRevenue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "claimFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimedByScaled",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exposure",
    outputs: [
      {
        internalType: "contract Exposure",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lifetimeAccRevenueScaledByShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c65380380610c6583398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100be578081fd5b81516001600160a01b03811681146100d4578182fd5b9392505050565b610b7b806100ea6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638da5cb5b11610081578063de5e63301161005b578063de5e6330146101ca578063ebf7a41e146101d3578063f2fde38b146101f357600080fd5b80638da5cb5b14610158578063ce7c2ac214610197578063ddeae033146101b757600080fd5b8063715018a6116100b2578063715018a61461012a57806386c011db1461013257806387983d131461014557600080fd5b806326603b95146100d95780633a98ef391461010c57806363ec512d14610115575b600080fd5b6100f96100e7366004610a0f565b60046020526000908152604090205481565b6040519081526020015b60405180910390f35b6100f960035481565b610128610123366004610a59565b610206565b005b610128610301565b610128610140366004610a30565b61038e565b610128610153366004610a30565b610506565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610103565b6100f96101a5366004610a0f565b60026020526000908152604090205481565b6101286101c5366004610a0f565b610676565b6100f960055481565b6001546101729073ffffffffffffffffffffffffffffffffffffffff1681565b610128610201366004610a0f565b610841565b60005473ffffffffffffffffffffffffffffffffffffffff16331461028c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6003546102a1670de0b6b3a764000083610ac2565b6102ab9190610a89565b600560008282546102bc9190610a71565b90915550506005546040805183815260208101929092527f44c8e79be0ba50742684a585db3a9db56735a204cfa14b6d54fadc2b141ebd89910160405180910390a150565b60005473ffffffffffffffffffffffffffffffffffffffff163314610382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610283565b61038c6000610971565b565b60005473ffffffffffffffffffffffffffffffffffffffff16331461040f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610283565b61041882610676565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600260205260408120805483929061044d908490610a71565b9250508190555080600360008282546104669190610a71565b90915550506005546104789082610ac2565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260046020526040812080549091906104ad908490610a71565b90915550506040805173ffffffffffffffffffffffffffffffffffffffff84168152602081018390527f50de8324aee226699209f9c49e31220e9e7e4f7a3d2d76060d913995cd11148e91015b60405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610283565b61059082610676565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260026020526040812080548392906105c5908490610aff565b9250508190555080600360008282546105de9190610aff565b90915550506005546105f09082610ac2565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604081208054909190610625908490610aff565b90915550506040805173ffffffffffffffffffffffffffffffffffffffff84168152602081018390527f7f057847ef731c18392c410072b87537e1ebd5fc3ca97d90d44e23f10010e29191016104fa565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260026020526040902054156106a45750565b60055473ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604081205490916106d891610ac2565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600460205260408120549192509061070c9083610aff565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152600460205260409020849055600154919250166340c10f1984610754670de0b6b3a764000085610a89565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b1580156107bf57600080fd5b505af11580156107d3573d6000803e3d6000fd5b505050507fc15f451120b13b6b40c6ad6203614ab3088308bef9150c0d6f46ea79bf46422483670de0b6b3a76400008361080d9190610a89565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835260208301919091520160405180910390a1505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610283565b73ffffffffffffffffffffffffffffffffffffffff8116610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610283565b61096e81610971565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a0a57600080fd5b919050565b600060208284031215610a20578081fd5b610a29826109e6565b9392505050565b60008060408385031215610a42578081fd5b610a4b836109e6565b946020939093013593505050565b600060208284031215610a6a578081fd5b5035919050565b60008219821115610a8457610a84610b16565b500190565b600082610abd577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610afa57610afa610b16565b500290565b600082821015610b1157610b11610b16565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212206012ad93f43612436fcc42b96d7c8a298d64244300024fc487505ed0ac6a7e5a64736f6c63430008040033";

type TreasuryFarmingRevenueConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryFarmingRevenueConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasuryFarmingRevenue__factory extends ContractFactory {
  constructor(...args: TreasuryFarmingRevenueConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TreasuryFarmingRevenue";
  }

  deploy(
    _exposure: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TreasuryFarmingRevenue> {
    return super.deploy(
      _exposure,
      overrides || {}
    ) as Promise<TreasuryFarmingRevenue>;
  }
  getDeployTransaction(
    _exposure: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_exposure, overrides || {});
  }
  attach(address: string): TreasuryFarmingRevenue {
    return super.attach(address) as TreasuryFarmingRevenue;
  }
  connect(signer: Signer): TreasuryFarmingRevenue__factory {
    return super.connect(signer) as TreasuryFarmingRevenue__factory;
  }
  static readonly contractName: "TreasuryFarmingRevenue";
  public readonly contractName: "TreasuryFarmingRevenue";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryFarmingRevenueInterface {
    return new utils.Interface(_abi) as TreasuryFarmingRevenueInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasuryFarmingRevenue {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TreasuryFarmingRevenue;
  }
}
