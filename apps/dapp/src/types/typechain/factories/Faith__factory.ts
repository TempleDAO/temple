/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Faith, FaithInterface } from "../Faith";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Gain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Loose",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "gain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61092f8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063715018a6116100765780639fe5491c1161005b5780639fe5491c1461013c578063ac18de431461014f578063f2fde38b1461016257600080fd5b8063715018a61461010c5780638da5cb5b1461011457600080fd5b806318160ddd146100a857806319b71cc7146100c457806327e235e3146100d95780632d06177a146100f9575b600080fd5b6100b160035481565b6040519081526020015b60405180910390f35b6100d76100d2366004610872565b610175565b005b6100b16100e7366004610851565b60016020526000908152604090205481565b6100d7610107366004610851565b610318565b6100d76103e8565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100bb565b6100d761014a366004610872565b610475565b6100d761015d366004610851565b6105b6565b6100d7610170366004610851565b610683565b3360009081526002602052604090205460ff16151560011461021e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f46616974683a2063616c6c65722063616e6e6f74206d616e616765206661697460448201527f680000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040902054811115610273575073ffffffffffffffffffffffffffffffffffffffff81166000908152600160205260409020545b806003600082825461028591906108b3565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040812080548392906102bf9084906108b3565b90915550506040805173ffffffffffffffffffffffffffffffffffffffff84168152602081018390527fe055ae8faf25eafc77d79a58434a4a72a90571abf61e48a8e051d62547f783a591015b60405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610215565b73ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610215565b61047360006107b3565b565b3360009081526002602052604090205460ff161515600114610519576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f46616974683a2063616c6c65722063616e6e6f74206d616e616765206661697460448201527f68000000000000000000000000000000000000000000000000000000000000006064820152608401610215565b806003600082825461052b919061089b565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000908152600160205260408120805483929061056590849061089b565b90915550506040805173ffffffffffffffffffffffffffffffffffffffff84168152602081018390527fd2ff26b9fa2e246942febada60f642d2d8338bd3c40ca9f3e65d01a24eb57009910161030c565b60005473ffffffffffffffffffffffffffffffffffffffff163314610637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610215565b73ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610704576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610215565b73ffffffffffffffffffffffffffffffffffffffff81166107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610215565b6107b0816107b3565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461084c57600080fd5b919050565b600060208284031215610862578081fd5b61086b82610828565b9392505050565b60008060408385031215610884578081fd5b61088d83610828565b946020939093013593505050565b600082198211156108ae576108ae6108ca565b500190565b6000828210156108c5576108c56108ca565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122069e63b518783f7a3695d4e3bec92593e14cd8c39f8fa4da5e7ee8b14c4612b4964736f6c63430008040033";

export class Faith__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Faith> {
    return super.deploy(overrides || {}) as Promise<Faith>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Faith {
    return super.attach(address) as Faith;
  }
  connect(signer: Signer): Faith__factory {
    return super.connect(signer) as Faith__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaithInterface {
    return new utils.Interface(_abi) as FaithInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faith {
    return new Contract(address, _abi, signerOrProvider) as Faith;
  }
}
