/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Faith, FaithInterface } from "../Faith";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Gain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Loose",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint112",
        name: "lifeTimeFaith",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "usableFaith",
        type: "uint112",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint112",
        name: "amount",
        type: "uint112",
      },
    ],
    name: "gain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint112",
        name: "amount",
        type: "uint112",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a336100c9565b60016003600082825461002d9190610144565b9091555050306000908152600160208190526040822080549192909161005d9084906001600160701b0316610119565b82546101009290920a6001600160701b0381810219909316918316021790915530600090815260016020819052604082208054919450926100a091859116610119565b92506101000a8154816001600160701b0302191690836001600160701b03160217905550610172565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160701b0382811684821680830382111561013b5761013b61015c565b01949350505050565b600082198211156101575761015761015c565b500190565b634e487b7160e01b600052601160045260246000fd5b6109eb806101816000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806364a3bc57116100765780638da5cb5b1161005b5780638da5cb5b14610174578063ac18de431461019c578063f2fde38b146101af57600080fd5b806364a3bc5714610159578063715018a61461016c57600080fd5b806318160ddd146100a857806327e235e3146100c45780632d06177a146101315780633a847cb214610146575b600080fd5b6100b160035481565b6040519081526020015b60405180910390f35b61010a6100d23660046108bc565b6001602052600090815260409020546dffffffffffffffffffffffffffff808216916e01000000000000000000000000000090041682565b604080516dffffffffffffffffffffffffffff9384168152929091166020830152016100bb565b61014461013f3660046108bc565b6101c2565b005b6101446101543660046108dd565b610219565b6101446101673660046108dd565b61045a565b61014461067e565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100bb565b6101446101aa3660046108bc565b610692565b6101446101bd3660046108bc565b6106e6565b6101ca61079d565b73ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b3360009081526002602052604090205460ff1615156001146102c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f46616974683a2063616c6c65722063616e6e6f74206d616e616765206661697460448201527f680000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600160205260409020546dffffffffffffffffffffffffffff6e0100000000000000000000000000009091048116908216811015610378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4275726e206578636565647320616c6c6f77616e63650000000000000000000060448201526064016102b9565b816dffffffffffffffffffffffffffff166003600082825461039a919061096f565b909155505073ffffffffffffffffffffffffffffffffffffffff831660008181526001602090815260409182902080547fffffffff0000000000000000000000000000ffffffffffffffffffffffffffff81166e010000000000000000000000000000918290046dffffffffffffffffffffffffffff90811689900381169092021790915582519384528516908301527fe055ae8faf25eafc77d79a58434a4a72a90571abf61e48a8e051d62547f783a5910160405180910390a1505050565b3360009081526002602052604090205460ff1615156001146104fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f46616974683a2063616c6c65722063616e6e6f74206d616e616765206661697460448201527f680000000000000000000000000000000000000000000000000000000000000060648201526084016102b9565b806dffffffffffffffffffffffffffff16600360008282546105209190610957565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000908152600160205260408120805483929061056a9084906dffffffffffffffffffffffffffff16610925565b82546101009290920a6dffffffffffffffffffffffffffff81810219909316918316021790915573ffffffffffffffffffffffffffffffffffffffff8416600090815260016020526040902080548493509091600e916105de9185916e010000000000000000000000000000900416610925565b92506101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff1602179055507fd2ff26b9fa2e246942febada60f642d2d8338bd3c40ca9f3e65d01a24eb57009828260405161067292919073ffffffffffffffffffffffffffffffffffffffff9290921682526dffffffffffffffffffffffffffff16602082015260400190565b60405180910390a15050565b61068661079d565b610690600061081e565b565b61069a61079d565b73ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6106ee61079d565b73ffffffffffffffffffffffffffffffffffffffff8116610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102b9565b61079a8161081e565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610690576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b9565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff811681146108b757600080fd5b919050565b6000602082840312156108cd578081fd5b6108d682610893565b9392505050565b600080604083850312156108ef578081fd5b6108f883610893565b915060208301356dffffffffffffffffffffffffffff8116811461091a578182fd5b809150509250929050565b60006dffffffffffffffffffffffffffff80831681851680830382111561094e5761094e610986565b01949350505050565b6000821982111561096a5761096a610986565b500190565b60008282101561098157610981610986565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212203a7fa1c0ce05184effbd960962eecf43b7d9f0773e94067deebc710bd524078f64736f6c63430008040033";

type FaithConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FaithConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Faith__factory extends ContractFactory {
  constructor(...args: FaithConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Faith";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Faith> {
    return super.deploy(overrides || {}) as Promise<Faith>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Faith {
    return super.attach(address) as Faith;
  }
  connect(signer: Signer): Faith__factory {
    return super.connect(signer) as Faith__factory;
  }
  static readonly contractName: "Faith";
  public readonly contractName: "Faith";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaithInterface {
    return new utils.Interface(_abi) as FaithInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faith {
    return new Contract(address, _abi, signerOrProvider) as Faith;
  }
}
