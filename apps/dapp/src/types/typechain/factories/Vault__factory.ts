/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vault, VaultInterface, RationalStruct } from "../Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "contract IERC20",
        name: "_templeToken",
        type: "address",
      },
      {
        internalType: "contract Exposure",
        name: "_templeExposureToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vaultedTempleAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_periodDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_enterExitWindowDuration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "p",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "q",
            type: "uint256",
          },
        ],
        internalType: "struct Rational",
        name: "_shareBoostFactory",
        type: "tuple",
      },
      {
        internalType: "contract JoiningFee",
        name: "_joiningFee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_firstPeriodStartTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ENTER_EXIT_WINDOW_BUFFER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WITHDRAW_FOR_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "p",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "q",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
    ],
    name: "decreaseStartTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enterExitWindowDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "firstPeriodStartTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inEnterExitWindow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "joiningFee",
    outputs: [
      {
        internalType: "contract JoiningFee",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Exposure[]",
        name: "exposures",
        type: "address[]",
      },
    ],
    name: "redeemExposures",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "shareBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shareBoostFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "p",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "q",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetRevenueShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "templeExposureToken",
    outputs: [
      {
        internalType: "contract Exposure",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "templeToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "toSharesAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "sharesAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sharesAmount",
        type: "uint256",
      },
    ],
    name: "toTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultedTempleAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "withdrawFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040527fb64cd1c65a9d91dac94ce350ef50c7a70ddbc5f0d1deb9c993efa7daa3686038610140523480156200003757600080fd5b5060405162003197380380620031978339810160408190526200005a91620003ba565b60408051808201825260018152603160f81b6020918201528b518c82012060e08190527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66101008190524660a081815285517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81870181905281880195909552606081810194909452608080820193909352308183018190528751808303909301835260c09182019097528151919095012090529290921b90526101205289896200012533620001c5565b81516200013a90600490602085019062000215565b5080516200015090600590602084019062000215565b5050600980546001600160a01b03199081166001600160a01b039b8c1617909155600a80548216998b169990991790985550600b8054881696891696909617909555600d93909355600e919091558051600f5560200151601055601180549093169316929092179055600c5550620005249050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200022390620004d1565b90600052602060002090601f01602090048101928262000247576000855562000292565b82601f106200026257805160ff191683800117855562000292565b8280016001018555821562000292579182015b828111156200029257825182559160200191906001019062000275565b50620002a0929150620002a4565b5090565b5b80821115620002a05760008155600101620002a5565b80516001600160a01b0381168114620002d357600080fd5b919050565b600082601f830112620002e9578081fd5b81516001600160401b038111156200030557620003056200050e565b60206200031b601f8301601f191682016200049e565b82815285828487010111156200032f578384fd5b835b838110156200034e57858101830151828201840152820162000331565b838111156200035f57848385840101525b5095945050505050565b6000604082840312156200037b578081fd5b604080519081016001600160401b0381118282101715620003a057620003a06200050e565b604052825181526020928301519281019290925250919050565b6000806000806000806000806000806101608b8d031215620003da578586fd5b8a516001600160401b0380821115620003f1578788fd5b620003ff8e838f01620002d8565b9b5060208d015191508082111562000415578788fd5b50620004248d828e01620002d8565b9950506200043560408c01620002bb565b97506200044560608c01620002bb565b96506200045560808c01620002bb565b955060a08b0151945060c08b01519350620004748c60e08d0162000369565b9250620004856101208c01620002bb565b91506101408b015190509295989b9194979a5092959850565b604051601f8201601f191681016001600160401b0381118282101715620004c957620004c96200050e565b604052919050565b600181811c90821680620004e657607f821691505b602082108114156200050857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160a05160c05160601c60e051610100516101205161014051612c0e62000589600039600081816104b201526106b501526000611d9201526000611de101526000611dbc01526000611d1501526000611d3f01526000611d690152612c0e6000f3fe608060405234801561001057600080fd5b50600436106102c85760003560e01c8063715018a61161017b578063b0ff1106116100d8578063bca8371f1161008c578063e1eda8f911610071578063e1eda8f914610606578063f2fde38b14610626578063fc1d3de21461063957600080fd5b8063bca8371f146105b7578063dd62ed3e146105c057600080fd5b8063b470aade116100bd578063b470aade1461057b578063b6b55f2514610584578063b9844d8d1461059757600080fd5b8063b0ff110614610548578063b1a9069c1461055b57600080fd5b80638da5cb5b1161012f578063981fc37211610114578063981fc3721461051a578063a457c2d714610522578063a9059cbb1461053557600080fd5b80638da5cb5b146104f457806395d89b411461051257600080fd5b80637ecebe00116101605780637ecebe001461049a57806381771329146104ad57806382dad8ac146104d457600080fd5b8063715018a61461048a5780637c5a227c1461049257600080fd5b80633644e5151161022957806363ceec65116101dd5780636b2f1417116101c25780636b2f14171461042a5780636eeeaaa51461043257806370a082311461047757600080fd5b806363ceec651461040e5780636823920a1461041757600080fd5b80633a98ef391161020e5780633a98ef39146103d25780633c58c877146103db5780634473ad52146103ee57600080fd5b80633644e515146103b757806339509351146103bf57600080fd5b806323b872dd116102805780632f4f21e2116102655780632f4f21e214610372578063313ce56714610385578063341533d91461039457600080fd5b806323b872dd1461034c5780632e1a7d4d1461035f57600080fd5b8063095ea7b3116102b1578063095ea7b314610300578063174e4ea61461032357806318160ddd1461034457600080fd5b8063061e5844146102cd57806306fdde03146102e2575b600080fd5b6102e06102db3660046127fe565b610642565b005b6102ea610800565b6040516102f791906129af565b60405180910390f35b61031361030e3660046127d3565b610892565b60405190151581526020016102f7565b610336610331366004612963565b6108a8565b6040519081526020016102f7565b6103366108d7565b61031361035a366004612793565b6108e9565b6102e061036d366004612963565b6109d1565b6102e06103803660046127d3565b6109df565b604051601281526020016102f7565b600f546010546103a2919082565b604080519283526020830191909152016102f7565b610336610d0d565b6103136103cd3660046127d3565b610d17565b61033660065481565b6102e06103e9366004612963565b610d60565b6103366103fc36600461273f565b60076020526000908152604090205481565b610336600c5481565b6102e061042536600461285e565b610dfb565b610313610f52565b6011546104529073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102f7565b61033661048536600461273f565b610fc0565b6102e0610ff5565b6103a2611082565b6103366104a836600461273f565b611149565b6103367f000000000000000000000000000000000000000000000000000000000000000081565b600a546104529073ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16610452565b6102ea611174565b610336611183565b6103136105303660046127d3565b611241565b6103136105433660046127d3565b611319565b610336610556366004612963565b611326565b6009546104529073ffffffffffffffffffffffffffffffffffffffff1681565b610336600d5481565b6102e0610592366004612963565b611343565b6103366105a536600461273f565b60086020526000908152604090205481565b61033661012c81565b6103366105ce36600461275b565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205490565b600b546104529073ffffffffffffffffffffffffffffffffffffffff1681565b6102e061063436600461273f565b61134d565b610336600e5481565b834211156106b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5661756c743a206578706972656420646561646c696e6500000000000000000060448201526064015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000008787876106e08b61147a565b60408051602081019690965273ffffffffffffffffffffffffffffffffffffffff909416938501939093526060840191909152608083015260a082015260c0016040516020818303038152906040528051906020012090506000610743826114af565b9050600061075382878787611518565b90508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f5661756c743a20696e76616c6964207369676e6174757265000000000000000060448201526064016106a8565b6107f589338a611540565b505050505050505050565b60606004805461080f90612ad1565b80601f016020809104026020016040519081016040528092919081815260200182805461083b90612ad1565b80156108885780601f1061085d57610100808354040283529160200191610888565b820191906000526020600020905b81548152906001019060200180831161086b57829003601f168201915b5050505050905090565b600061089f3384846116c3565b50600192915050565b60008060006108b5611082565b9092509050806108c58386612a51565b6108cf9190612a18565b949350505050565b60006108e46006546108a8565b905090565b60006108f6848484611877565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054828110156109b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084016106a8565b6109c485338584036116c3565b60019150505b9392505050565b6109dc333383611540565b50565b6109e7610f52565b610a73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f5661756c743a2043616e6e6f74206a6f696e207661756c74207768656e206f7560448201527f7473696465206f6620656e7465722f657869742077696e646f7700000000000060648201526084016106a8565b601154600c54600d546040517f07e7cc270000000000000000000000000000000000000000000000000000000081526004810192909252602482015230604482015260009173ffffffffffffffffffffffffffffffffffffffff16906307e7cc279060640160206040518083038186803b158015610af057600080fd5b505afa158015610b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b28919061297b565b90506000670de0b6b3a7640000610b3f8385612a51565b610b499190612a18565b9050808311610bda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f5661756c743a2043616e6e6f74206a6f696e207768656e20666565206973206860448201527f6967686572207468616e20616d6f756e7400000000000000000000000000000060648201526084016106a8565b6000610be68285612a8e565b90508315610caf57610bf88582611b3a565b600954600b54610c249173ffffffffffffffffffffffffffffffffffffffff9081169133911687611c60565b600a546040517f40c10f190000000000000000000000000000000000000000000000000000000081523060048201526024810186905273ffffffffffffffffffffffffffffffffffffffff909116906340c10f1990604401600060405180830381600087803b158015610c9657600080fd5b505af1158015610caa573d6000803e3d6000fd5b505050505b6040805173ffffffffffffffffffffffffffffffffffffffff87168152602081018690529081018290527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060600160405180910390a15050505050565b60006108e4611cfb565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161089f918590610d5b908690612a00565b6116c3565b60005473ffffffffffffffffffffffffffffffffffffffff163314610de1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a8565b80600c6000828254610df39190612a8e565b909155505050565b610e03610f52565b610e8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5661756c743a2043616e6e6f742072656465656d207768656e206f757473696460448201527f65206f6620656e7465722f657869742077696e646f770000000000000000000060648201526084016106a8565b60005b8151811015610f4e57818181518110610ed4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663be040fb06040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f2357600080fd5b505af1158015610f37573d6000803e3d6000fd5b505050508080610f4690612b1f565b915050610e92565b5050565b6000600c54421015610f645750600090565b6000600d54600c5442610f779190612a8e565b610f819190612a18565b90504261012c600e54600c54600d5485610f9b9190612a51565b610fa59190612a00565b610faf9190612a00565b610fb99190612a00565b1191505090565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260076020526040812054610fef906108a8565b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611076576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a8565b6110806000611e2f565b565b600a546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600091829173ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b1580156110f057600080fd5b505afa158015611104573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611128919061297b565b91506006549050816000141561113d57600191505b806111455750805b9091565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260086020526040812054610fef565b60606005805461080f90612ad1565b601054600f54600a546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600093929173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b1580156111f557600080fd5b505afa158015611209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122d919061297b565b6112379190612a51565b6108e49190612a18565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205482811015611302576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016106a8565b61130f33858584036116c3565b5060019392505050565b600061089f338484611877565b6000806000611333611082565b9092509050816108c58286612a51565b6109dc33826109df565b60005473ffffffffffffffffffffffffffffffffffffffff1633146113ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a8565b73ffffffffffffffffffffffffffffffffffffffff8116611471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106a8565b6109dc81611e2f565b73ffffffffffffffffffffffffffffffffffffffff811660009081526008602052604090208054600181018255905b50919050565b6000610fef6114bc611cfb565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061152987878787611ea4565b9150915061153681611fbc565b5095945050505050565b611548610f52565b6115d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f5661756c743a2043616e6e6f742065786974207661756c74207768656e206f7560448201527f7473696465206f6620656e7465722f657869742077696e646f7700000000000060648201526084016106a8565b80156115e4576115e483826122d8565b600a546040517f982755930000000000000000000000000000000000000000000000000000000081526004810183905233602482015273ffffffffffffffffffffffffffffffffffffffff90911690639827559390604401600060405180830381600087803b15801561165657600080fd5b505af115801561166a573d6000803e3d6000fd5b50506040805173ffffffffffffffffffffffffffffffffffffffff87168152602081018590527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364935001905060405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff8316611765576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016106a8565b73ffffffffffffffffffffffffffffffffffffffff8216611808576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016106a8565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661191a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106a8565b73ffffffffffffffffffffffffffffffffffffffff82166119bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016106a8565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260076020526040812054906119ed83611326565b905080821015611a7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016106a8565b73ffffffffffffffffffffffffffffffffffffffff8086166000908152600760205260408082208054859003905591861681529081208054839290611ac5908490612a00565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051611b2b91815260200190565b60405180910390a35050505050565b73ffffffffffffffffffffffffffffffffffffffff8216611bb7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106a8565b6000611bc282611326565b90508060066000828254611bd69190612a00565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526007602052604081208054839290611c10908490612a00565b909155505060405182815273ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161186a565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611cf59085906124d2565b50505050565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148015611d6157507f000000000000000000000000000000000000000000000000000000000000000046145b15611d8b57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611edb5750600090506003611fb3565b8460ff16601b14158015611ef357508460ff16601c14155b15611f045750600090506004611fb3565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611f58573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611fac57600060019250925050611fb3565b9150600090505b94509492505050565b6000816004811115611ff7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156120005750565b600181600481111561203b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156120a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106a8565b60028160048111156120de577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415612146576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106a8565b6003816004811115612181577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561220f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016106a8565b600481600481111561224a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156109dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016106a8565b73ffffffffffffffffffffffffffffffffffffffff821661237b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016106a8565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260076020526040812054906123ab83611326565b90508082101561243d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016106a8565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600760205260408120828403905560068054839290612479908490612a8e565b909155505060405183815260009073ffffffffffffffffffffffffffffffffffffffff8616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350505050565b6000612534826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166125e39092919063ffffffff16565b8051909150156125de57808060200190518101906125529190612943565b6125de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016106a8565b505050565b60606108cf848460008585843b612656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106a8565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161267f9190612993565b60006040518083038185875af1925050503d80600081146126bc576040519150601f19603f3d011682016040523d82523d6000602084013e6126c1565b606091505b50915091506126d18282866126dc565b979650505050505050565b606083156126eb5750816109ca565b8251156126fb5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a891906129af565b803561273a81612bb6565b919050565b600060208284031215612750578081fd5b81356109ca81612bb6565b6000806040838503121561276d578081fd5b823561277881612bb6565b9150602083013561278881612bb6565b809150509250929050565b6000806000606084860312156127a7578081fd5b83356127b281612bb6565b925060208401356127c281612bb6565b929592945050506040919091013590565b600080604083850312156127e5578182fd5b82356127f081612bb6565b946020939093013593505050565b60008060008060008060c08789031215612816578182fd5b863561282181612bb6565b95506020870135945060408701359350606087013560ff81168114612844578283fd5b9598949750929560808101359460a0909101359350915050565b60006020808385031215612870578182fd5b823567ffffffffffffffff80821115612887578384fd5b818501915085601f83011261289a578384fd5b8135818111156128ac576128ac612b87565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811085821117156128ef576128ef612b87565b604052828152858101935084860182860187018a101561290d578788fd5b8795505b83861015612936576129228161272f565b855260019590950194938601938601612911565b5098975050505050505050565b600060208284031215612954578081fd5b815180151581146109ca578182fd5b600060208284031215612974578081fd5b5035919050565b60006020828403121561298c578081fd5b5051919050565b600082516129a5818460208701612aa5565b9190910192915050565b60208152600082518060208401526129ce816040850160208701612aa5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008219821115612a1357612a13612b58565b500190565b600082612a4c577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612a8957612a89612b58565b500290565b600082821015612aa057612aa0612b58565b500390565b60005b83811015612ac0578181015183820152602001612aa8565b83811115611cf55750506000910152565b600181811c90821680612ae557607f821691505b602082108114156114a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612b5157612b51612b58565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff811681146109dc57600080fdfea26469706673582212208bb630fa6771c78df7d2a6f243fbf97555607f28638c2500db643bccca55ed8564736f6c63430008040033";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Vault";
  }

  deploy(
    _name: string,
    _symbol: string,
    _templeToken: string,
    _templeExposureToken: string,
    _vaultedTempleAccount: string,
    _periodDuration: BigNumberish,
    _enterExitWindowDuration: BigNumberish,
    _shareBoostFactory: RationalStruct,
    _joiningFee: string,
    _firstPeriodStartTimestamp: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vault> {
    return super.deploy(
      _name,
      _symbol,
      _templeToken,
      _templeExposureToken,
      _vaultedTempleAccount,
      _periodDuration,
      _enterExitWindowDuration,
      _shareBoostFactory,
      _joiningFee,
      _firstPeriodStartTimestamp,
      overrides || {}
    ) as Promise<Vault>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _templeToken: string,
    _templeExposureToken: string,
    _vaultedTempleAccount: string,
    _periodDuration: BigNumberish,
    _enterExitWindowDuration: BigNumberish,
    _shareBoostFactory: RationalStruct,
    _joiningFee: string,
    _firstPeriodStartTimestamp: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _templeToken,
      _templeExposureToken,
      _vaultedTempleAccount,
      _periodDuration,
      _enterExitWindowDuration,
      _shareBoostFactory,
      _joiningFee,
      _firstPeriodStartTimestamp,
      overrides || {}
    );
  }
  attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }
  static readonly contractName: "Vault";
  public readonly contractName: "Vault";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}
