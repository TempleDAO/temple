/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LockedOGTemple,
  LockedOGTempleInterface,
} from "../../../contracts/deprecated/LockedOGTemple";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract OGTemple",
        name: "_OG_TEMPLE",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_lockedUntil",
        type: "uint256",
      },
    ],
    name: "OGTempleLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "OGTempleWithdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "OG_TEMPLE",
    outputs: [
      {
        internalType: "contract OGTemple",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountOGTemple",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockedUntilTimestamp",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountOGTemple",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockedUntilTimestamp",
        type: "uint256",
      },
    ],
    name: "lockFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "locked",
    outputs: [
      {
        internalType: "uint256",
        name: "BalanceOGTemple",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "LockedUntilTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "numLocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_idx",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_idx",
        type: "uint256",
      },
    ],
    name: "withdrawFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cf7380380610cf783398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610c66806100916000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638f1284aa1161005b5780638f1284aa146100bd578063b9ef083014610107578063bf7bab731461014b578063db518db21461017357600080fd5b80631338736f146100825780632e1a7d4d1461009757806383e25f8a146100aa575b600080fd5b610095610090366004610b3a565b610186565b005b6100956100a5366004610b22565b610195565b6100956100b8366004610ad0565b6101a2565b6001546100dd9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61013d610115366004610a8d565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6040519081526020016100fe565b61015e610159366004610aa7565b61026c565b604080519283526020830191909152016100fe565b610095610181366004610aa7565b6102a8565b6101913383836101a2565b5050565b61019f33826102a8565b50565b604080518082018252838152602080820184815273ffffffffffffffffffffffffffffffffffffffff80881660009081528084529485208054600181810183559187529390952084516002909402019283559051918401919091559154909161020e9116333086610619565b6040805173ffffffffffffffffffffffffffffffffffffffff86168152602081018590529081018390527faeba50e43ba4efe965d916ca4acb966022f5da3097e03c782578df36df61c59d906060015b60405180910390a150505050565b6000602052816000526040600020818154811061028857600080fd5b600091825260209091206002909102018054600190910154909250905082565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902080548210610361576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4e6f206c6f636b20656e7472792061742074686520737065636966696564206960448201527f6e6465780000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b4281838154811061039b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016001015410610414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f53706563696669656420656e747279206973207374696c6c206c6f636b6564006044820152606401610358565b600081838154811061044f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050905081600183805490506104909190610bc8565b815481106104c7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020182848154811061050e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912082546002909202019081556001918201549101558154829080610564577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60008281526020812060027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9093019283020181815560019081019190915591555481516105ca9173ffffffffffffffffffffffffffffffffffffffff169086906106fb565b80516040805173ffffffffffffffffffffffffffffffffffffffff8716815260208101929092527f0c2301a118e6f0843fbd110920bbe9b409fc9330867e8b9c4f4637a7633ada83910161025e565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526106f59085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610756565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107519084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610673565b505050565b60006107b8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108629092919063ffffffff16565b80519091501561075157808060200190518101906107d69190610b02565b610751576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610358565b6060610871848460008561087b565b90505b9392505050565b60608247101561090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610358565b73ffffffffffffffffffffffffffffffffffffffff85163b61098b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610358565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516109b49190610b5b565b60006040518083038185875af1925050503d80600081146109f1576040519150601f19603f3d011682016040523d82523d6000602084013e6109f6565b606091505b5091509150610a06828286610a11565b979650505050505050565b60608315610a20575081610874565b825115610a305782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103589190610b77565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a8857600080fd5b919050565b600060208284031215610a9e578081fd5b61087482610a64565b60008060408385031215610ab9578081fd5b610ac283610a64565b946020939093013593505050565b600080600060608486031215610ae4578081fd5b610aed84610a64565b95602085013595506040909401359392505050565b600060208284031215610b13578081fd5b81518015158114610874578182fd5b600060208284031215610b33578081fd5b5035919050565b60008060408385031215610b4c578182fd5b50508035926020909101359150565b60008251610b6d818460208701610c04565b9190910192915050565b6020815260008251806020840152610b96816040850160208701610c04565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600082821015610bff577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500390565b60005b83811015610c1f578181015183820152602001610c07565b838111156106f5575050600091015256fea2646970667358221220b2b284301314457ecf23d97e1c1106b5d9732b10812f7a5bcd9c7ebe284a790f64736f6c63430008040033";

type LockedOGTempleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockedOGTempleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LockedOGTemple__factory extends ContractFactory {
  constructor(...args: LockedOGTempleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _OG_TEMPLE: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LockedOGTemple> {
    return super.deploy(_OG_TEMPLE, overrides || {}) as Promise<LockedOGTemple>;
  }
  override getDeployTransaction(
    _OG_TEMPLE: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_OG_TEMPLE, overrides || {});
  }
  override attach(address: string): LockedOGTemple {
    return super.attach(address) as LockedOGTemple;
  }
  override connect(signer: Signer): LockedOGTemple__factory {
    return super.connect(signer) as LockedOGTemple__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockedOGTempleInterface {
    return new utils.Interface(_abi) as LockedOGTempleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LockedOGTemple {
    return new Contract(address, _abi, signerOrProvider) as LockedOGTemple;
  }
}
