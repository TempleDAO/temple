/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ElderElection,
  ElderElectionInterface,
} from "../../../contracts/governance/ElderElection";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Templar",
        name: "_templars",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lateBy",
        type: "uint256",
      },
    ],
    name: "DeadlineExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "InvalidNonce",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "discordId",
        type: "uint256",
      },
    ],
    name: "NotCandidate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "discordId",
        type: "uint256",
      },
    ],
    name: "NotFromTemplar",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyEndorsements",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "discordIds",
        type: "uint256[]",
      },
    ],
    name: "UpdateEndorsements",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "discordId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isNominated",
        type: "bool",
      },
    ],
    name: "UpdateNomination",
    type: "event",
  },
  {
    inputs: [],
    name: "CAN_NOMINATE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "candidates",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "endorsementsBy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "discordId",
        type: "uint256",
      },
    ],
    name: "nominate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numCandidates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "discordIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct ElderElection.EndorsementReq",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "relayedSetEndorsementsFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "discordId",
        type: "uint256",
      },
    ],
    name: "resign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "discordIds",
        type: "uint256[]",
      },
    ],
    name: "setEndorsements",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "templars",
    outputs: [
      {
        internalType: "contract Templar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001b8038038062001b808339810160408190526200003491620001bb565b600480546001600160a01b0319166001600160a01b0383161790556200005c6000336200011a565b506040805160a08082018352600d60608084019182526c22b63232b922b632b1ba34b7b760991b6080808601919091529184528451808601865260018152603160f81b6020808301918252808701839052468789018190529651805190820120925190912087517fc2f8787176b8ac6bf7215b4adcc1e069bf4ab82d9ab1df05a57a91d425935b6e818401528089019390935292820192909252808301949094528451808503830181529390920190935281519101209052620001eb565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620001b7576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001763390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600060208284031215620001cd578081fd5b81516001600160a01b0381168114620001e4578182fd5b9392505050565b60805161197962000207600039600061075201526119796000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806374446bc9116100b2578063b03d48ca11610081578063d547741f11610066578063d547741f146102de578063f6d3c3b8146102f1578063ff58984f1461030457600080fd5b8063b03d48ca146102a4578063c5f28e49146102cb57600080fd5b806374446bc9146102255780637ecebe001461023857806391d1485414610258578063a217fddf1461029c57600080fd5b80633477ee2e116100ee5780633477ee2e146101a157806336568abe146101c45780635216509a146101d757806362475fe4146101e057600080fd5b806301ffc9a71461012057806308d9801c14610148578063248a9ca31461015d5780632f2ff15d1461018e575b600080fd5b61013361012e36600461142a565b610317565b60405190151581526020015b60405180910390f35b61015b6101563660046113e7565b6103b0565b005b61018061016b3660046113e7565b60009081526020819052604090206001015490565b60405190815260200161013f565b61015b61019c3660046113ff565b6104fc565b6101336101af3660046113e7565b60016020526000908152604090205460ff1681565b61015b6101d23660046113ff565b610526565b61018060025481565b6004546102009073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161013f565b61015b610233366004611377565b6105da565b610180610246366004611334565b60056020526000908152604090205481565b6101336102663660046113ff565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b610180600081565b6101807ff30641a45a85a618e8a3f2baf155ecb1f3eca7bbc05f237c578245d02c78e0c981565b61015b6102d93660046113e7565b6105e5565b61015b6102ec3660046113ff565b610729565b61015b6102ff36600461146a565b61074e565b61018061031236600461134e565b610a1a565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806103aa57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b7ff30641a45a85a618e8a3f2baf155ecb1f3eca7bbc05f237c578245d02c78e0c96103da81610a4b565b600480546040517f0e2e44e800000000000000000000000000000000000000000000000000000000815291820184905273ffffffffffffffffffffffffffffffffffffffff1690630e2e44e89060240160006040518083038186803b15801561044257600080fd5b505afa158015610456573d6000803e3d6000fd5b50505060008381526001602052604090205460ff161590506104f8576000828152600160208190526040822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905560028054919290916104bb908490611790565b90915550506040516000815282907f2a11c0b7ccdfbb01ac9ecc8ebe438d26f017e861fcca878abc936f48fec18f52906020015b60405180910390a25b5050565b60008281526020819052604090206001015461051781610a4b565b6105218383610a58565b505050565b73ffffffffffffffffffffffffffffffffffffffff811633146105d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b6104f88282610b48565b6104f8338383610bff565b7ff30641a45a85a618e8a3f2baf155ecb1f3eca7bbc05f237c578245d02c78e0c961060f81610a4b565b600480546040517f0e2e44e800000000000000000000000000000000000000000000000000000000815291820184905273ffffffffffffffffffffffffffffffffffffffff1690630e2e44e89060240160006040518083038186803b15801561067757600080fd5b505afa15801561068b573d6000803e3d6000fd5b50505060008381526001602052604090205460ff1690506104f8576000828152600160208190526040822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168217905560028054919290916106f190849061173b565b90915550506040516001815282907f2a11c0b7ccdfbb01ac9ecc8ebe438d26f017e861fcca878abc936f48fec18f52906020016104ef565b60008281526020819052604090206001015461074481610a4b565b6105218383610b48565b60007f000000000000000000000000000000000000000000000000000000000000000061078261077d866117a7565b610cc1565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281019290925260428201526062016040516020818303038152906040528051906020012090506000806108168386868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d5d92505050565b90925090506000816004811115610856577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146108b3576108686020870187611334565b6040517fd855c4f400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201526024016105c7565b8560400135421115610902576108cd604087013542611790565b6040517fbc3088ef0000000000000000000000000000000000000000000000000000000081526004016105c791815260200190565b61090f6020870187611334565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461094e576108686020870187611334565b60608601356109936109636020890189611334565b73ffffffffffffffffffffffffffffffffffffffff16600090815260056020526040902080546001810190915590565b146109f0576109a56020870187611334565b6040517fc9c7838300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201526024016105c7565b610a12610a006020880188611334565b610a0d602089018961165d565b610bff565b505050505050565b60036020528160005260406000208181548110610a3657600080fd5b90600052602060002001600091509150505481565b610a558133610da3565b50565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166104f85760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610aea3390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16156104f85760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600254811115610c3b576040517fa300300000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260409020610c6b9083836112ab565b508273ffffffffffffffffffffffffffffffffffffffff167fe1e033370be28bdd2a7b73796f5a1b4f4e7c27ca8b94d610c1f0387ef5a6d7898383604051610cb49291906115b9565b60405180910390a2505050565b60007f71a639611fdf3926d8551959b78369e0a6216ef5034c5825ed44494b2f8ff9cf8260000151610cf68460200151610e73565b6040808601516060808801518351602081019790975273ffffffffffffffffffffffffffffffffffffffff9095169286019290925290840191909152608083015260a082015260c0015b604051602081830303815290604052805190602001209050919050565b600080825160411415610d945760208301516040840151606085015160001a610d8887828585610e86565b94509450505050610d9c565b506000905060025b9250929050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166104f857610df98173ffffffffffffffffffffffffffffffffffffffff166014610f9e565b610e04836020610f9e565b604051602001610e15929190611538565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526105c79160040161160c565b600081604051602001610d409190611502565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610ebd5750600090506003610f95565b8460ff16601b14158015610ed557508460ff16601c14155b15610ee65750600090506004610f95565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610f3a573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116610f8e57600060019250925050610f95565b9150600090505b94509492505050565b60606000610fad836002611753565b610fb890600261173b565b67ffffffffffffffff811115610ff7577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611021576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061107f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611109577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000611145846002611753565b61115090600161173b565b90505b600181111561123b577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106111b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b8282815181106111f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93611234816118b0565b9050611153565b5083156112a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105c7565b9392505050565b8280548282559060005260206000209081019282156112e6579160200282015b828111156112e65782358255916020019190600101906112cb565b506112f29291506112f6565b5090565b5b808211156112f257600081556001016112f7565b803573ffffffffffffffffffffffffffffffffffffffff8116811461132f57600080fd5b919050565b600060208284031215611345578081fd5b6112a48261130b565b60008060408385031215611360578081fd5b6113698361130b565b946020939093013593505050565b60008060208385031215611389578182fd5b823567ffffffffffffffff808211156113a0578384fd5b818501915085601f8301126113b3578384fd5b8135818111156113c1578485fd5b8660208260051b85010111156113d5578485fd5b60209290920196919550909350505050565b6000602082840312156113f8578081fd5b5035919050565b60008060408385031215611411578182fd5b823591506114216020840161130b565b90509250929050565b60006020828403121561143b578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146112a4578182fd5b60008060006040848603121561147e578081fd5b833567ffffffffffffffff80821115611495578283fd5b90850190608082880312156114a8578283fd5b909350602085013590808211156114bd578283fd5b818601915086601f8301126114d0578283fd5b8135818111156114de578384fd5b8760208285010111156114ef578384fd5b6020830194508093505050509250925092565b815160009082906020808601845b8381101561152c57815185529382019390820190600101611510565b50929695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611570816017850160208801611880565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516115ad816028840160208801611880565b01602801949350505050565b6020815281602082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156115f1578081fd5b8260051b808560408501379190910160400190815292915050565b602081526000825180602084015261162b816040850160208701611880565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611691578283fd5b83018035915067ffffffffffffffff8211156116ab578283fd5b6020019150600581901b3603821315610d9c57600080fd5b6040516080810167ffffffffffffffff811182821017156116e6576116e6611914565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561173357611733611914565b604052919050565b6000821982111561174e5761174e6118e5565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561178b5761178b6118e5565b500290565b6000828210156117a2576117a26118e5565b500390565b6000608082360312156117b8578081fd5b6117c06116c3565b6117c98361130b565b815260208084013567ffffffffffffffff808211156117e6578485fd5b9085019036601f8301126117f8578485fd5b81358181111561180a5761180a611914565b8060051b915061181b8483016116ec565b818152848101908486013685870188011115611835578889fd5b8895505b83861015611857578035835260019590950194918601918601611839565b508086880152505050505050604083013560408201526060830135606082015280915050919050565b60005b8381101561189b578181015183820152602001611883565b838111156118aa576000848401525b50505050565b6000816118bf576118bf6118e5565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122029a23b8148ff595eb26e32cb6be26c13b9e2575efd573114ab665153b1a6084e64736f6c63430008040033";

type ElderElectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ElderElectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ElderElection__factory extends ContractFactory {
  constructor(...args: ElderElectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _templars: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ElderElection> {
    return super.deploy(_templars, overrides || {}) as Promise<ElderElection>;
  }
  override getDeployTransaction(
    _templars: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_templars, overrides || {});
  }
  override attach(address: string): ElderElection {
    return super.attach(address) as ElderElection;
  }
  override connect(signer: Signer): ElderElection__factory {
    return super.connect(signer) as ElderElection__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ElderElectionInterface {
    return new utils.Interface(_abi) as ElderElectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ElderElection {
    return new Contract(address, _abi, signerOrProvider) as ElderElection;
  }
}
