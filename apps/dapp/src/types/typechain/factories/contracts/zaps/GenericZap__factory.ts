/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GenericZap,
  GenericZapInterface,
} from "../../../contracts/zaps/GenericZap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "SetContractState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "ZappedIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "ZappedLPCurve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    name: "ZappedLPUniV2",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "maxAmountsIn",
        type: "uint256[]",
      },
    ],
    name: "ZappedLiquidityBalancerPool",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "contract IUniswapV2Pair",
        name: "pair",
        type: "address",
      },
    ],
    name: "addLiquidityGetMinAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvedTargets",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "getAmountToSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userIn",
        type: "uint256",
      },
    ],
    name: "getSwapInAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "recoverToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_targets",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "_isApproved",
        type: "bool[]",
      },
    ],
    name: "setApprovedTargets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleContractActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fromToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_swapTarget",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_swapData",
        type: "bytes",
      },
    ],
    name: "zapIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapTarget",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "swapData",
        type: "bytes",
      },
    ],
    name: "zapInFor",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fromToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_swapTarget",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_swapData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint248",
            name: "firstSwapMinAmountOut",
            type: "uint248",
          },
          {
            internalType: "bool",
            name: "useAltFunction",
            type: "bool",
          },
          {
            internalType: "uint248",
            name: "poolSwapMinAmountOut",
            type: "uint248",
          },
          {
            internalType: "bool",
            name: "isOneSidedLiquidityAddition",
            type: "bool",
          },
          {
            internalType: "address",
            name: "otherToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldTransferResidual",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "minLiquidityOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uniAmountAMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uniAmountBMin",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "poolSwapData",
            type: "bytes",
          },
        ],
        internalType: "struct GenericZap.ZapLiquidityRequest",
        name: "_zapLiqRequest",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract IERC20[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "maxAmountsIn",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IBalancerVault.JoinPoolRequest",
        name: "_request",
        type: "tuple",
      },
    ],
    name: "zapLiquidityBalancerPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fromToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapTarget",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_swapData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint248",
            name: "firstSwapMinAmountOut",
            type: "uint248",
          },
          {
            internalType: "bool",
            name: "useAltFunction",
            type: "bool",
          },
          {
            internalType: "uint248",
            name: "poolSwapMinAmountOut",
            type: "uint248",
          },
          {
            internalType: "bool",
            name: "isOneSidedLiquidityAddition",
            type: "bool",
          },
          {
            internalType: "address",
            name: "otherToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldTransferResidual",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "minLiquidityOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uniAmountAMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uniAmountBMin",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "poolSwapData",
            type: "bytes",
          },
        ],
        internalType: "struct GenericZap.ZapLiquidityRequest",
        name: "_zapLiqRequest",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract IERC20[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "maxAmountsIn",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IBalancerVault.JoinPoolRequest",
        name: "_request",
        type: "tuple",
      },
    ],
    name: "zapLiquidityBalancerPoolFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fromToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapTarget",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_swapData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint248",
            name: "firstSwapMinAmountOut",
            type: "uint248",
          },
          {
            internalType: "bool",
            name: "useAltFunction",
            type: "bool",
          },
          {
            internalType: "uint248",
            name: "poolSwapMinAmountOut",
            type: "uint248",
          },
          {
            internalType: "bool",
            name: "isOneSidedLiquidityAddition",
            type: "bool",
          },
          {
            internalType: "address",
            name: "otherToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldTransferResidual",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "minLiquidityOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uniAmountAMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uniAmountBMin",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "poolSwapData",
            type: "bytes",
          },
        ],
        internalType: "struct GenericZap.ZapLiquidityRequest",
        name: "_zapLiqRequest",
        type: "tuple",
      },
    ],
    name: "zapLiquidityCurvePool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fromToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapTarget",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_swapData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint248",
            name: "firstSwapMinAmountOut",
            type: "uint248",
          },
          {
            internalType: "bool",
            name: "useAltFunction",
            type: "bool",
          },
          {
            internalType: "uint248",
            name: "poolSwapMinAmountOut",
            type: "uint248",
          },
          {
            internalType: "bool",
            name: "isOneSidedLiquidityAddition",
            type: "bool",
          },
          {
            internalType: "address",
            name: "otherToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldTransferResidual",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "minLiquidityOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uniAmountAMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uniAmountBMin",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "poolSwapData",
            type: "bytes",
          },
        ],
        internalType: "struct GenericZap.ZapLiquidityRequest",
        name: "_zapLiqRequest",
        type: "tuple",
      },
    ],
    name: "zapLiquidityCurvePoolFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fromToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapTarget",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_swapData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint248",
            name: "firstSwapMinAmountOut",
            type: "uint248",
          },
          {
            internalType: "bool",
            name: "useAltFunction",
            type: "bool",
          },
          {
            internalType: "uint248",
            name: "poolSwapMinAmountOut",
            type: "uint248",
          },
          {
            internalType: "bool",
            name: "isOneSidedLiquidityAddition",
            type: "bool",
          },
          {
            internalType: "address",
            name: "otherToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldTransferResidual",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "minLiquidityOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uniAmountAMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uniAmountBMin",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "poolSwapData",
            type: "bytes",
          },
        ],
        internalType: "struct GenericZap.ZapLiquidityRequest",
        name: "_zapLiqRequest",
        type: "tuple",
      },
    ],
    name: "zapLiquidityUniV2",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fromToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "_for",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapTarget",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_swapData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint248",
            name: "firstSwapMinAmountOut",
            type: "uint248",
          },
          {
            internalType: "bool",
            name: "useAltFunction",
            type: "bool",
          },
          {
            internalType: "uint248",
            name: "poolSwapMinAmountOut",
            type: "uint248",
          },
          {
            internalType: "bool",
            name: "isOneSidedLiquidityAddition",
            type: "bool",
          },
          {
            internalType: "address",
            name: "otherToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldTransferResidual",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "minLiquidityOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uniAmountAMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uniAmountBMin",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "poolSwapData",
            type: "bytes",
          },
        ],
        internalType: "struct GenericZap.ZapLiquidityRequest",
        name: "_zapLiqRequest",
        type: "tuple",
      },
    ],
    name: "zapLiquidityUniV2For",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040527fb9fc157394af804a3578134a6585c0dc9cc990d400000000000000000000000060a0527fba12222222228d8ba445958a75a0704d566bf2c800000000000000000000000060c0523480156200005957600080fd5b5060405162005e5a38038062005e5a8339810160408190526200007c91620000ed565b62000087336200009d565b60601b6001600160601b0319166080526200011d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000ff578081fd5b81516001600160a01b038116811462000116578182fd5b9392505050565b60805160601c60a05160601c60c05160601c615cb7620001a360003960008181610ca201528181610f0501528181610f2f015281816112e40152611392015260008181611c1c0152611ce2015260008181610271015281816107ad015281816107d8015281816136440152818161446e01528181614497015261477b0152615cb76000f3fe6080604052600436106101635760003560e01c80635c975abb116100c05780638f47fd3d11610074578063caa6c81b11610059578063caa6c81b14610469578063deb6513d1461047c578063f2fde38b1461048f57600080fd5b80638f47fd3d14610436578063a7229fd91461044957600080fd5b8063630c02e1116100a5578063630c02e1146103d6578063715018a6146103f65780638da5cb5b1461040b57600080fd5b80635c975abb1461036f578063602aae33146103a157600080fd5b806327e8f38f116101175780632ae04ed3116100fc5780632ae04ed314610336578063477cdaf2146103495780634d3ff2f91461035c57600080fd5b806327e8f38f146103035780632a7b194b1461031657600080fd5b806314a949e91161014857806314a949e91461022c5780631694505e1461025f5780631cab1fcc146102b857600080fd5b8063010a68c6146102045780631385d24c1461021757600080fd5b366101ff57333214156101fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5a6170426173653a20446f206e6f742073656e6420455448206469726563746c60448201527f790000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b005b600080fd5b6101fd61021236600461509a565b6104af565b34801561022357600080fd5b506101fd610828565b34801561023857600080fd5b5061024c6102473660046156a0565b6108c2565b6040519081526020015b60405180910390f35b34801561026b57600080fd5b506102937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610256565b3480156102c457600080fd5b506102f36102d3366004615022565b600160209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610256565b6101fd6103113660046153bc565b6108d7565b34801561032257600080fd5b506101fd61033136600461546a565b6108f0565b61024c61034436600461527a565b610b11565b6101fd61035736600461514f565b610b2d565b6101fd61036a3660046152f2565b610b44565b34801561037b57600080fd5b506000546102f39074010000000000000000000000000000000000000000900460ff1681565b3480156103ad57600080fd5b506103c16103bc3660046156e4565b611464565b60408051928352602083019190915201610256565b3480156103e257600080fd5b5061024c6103f136600461505a565b6115a4565b34801561040257600080fd5b506101fd6115bb565b34801561041757600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff16610293565b61024c6104443660046151f0565b6115cf565b34801561045557600080fd5b506101fd61046436600461505a565b611832565b6101fd61047736600461509a565b611a74565b6101fd61048a36600461514f565b61297e565b34801561049b57600080fd5b506101fd6104aa366004614fea565b61298d565b60005474010000000000000000000000000000000000000000900460ff1615610534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5a6170426173653a20506175736564000000000000000000000000000000000060448201526064016101f4565b73ffffffffffffffffffffffffffffffffffffffff808816600090815260016020818152604080842094881684529390529190205460ff161515146105fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f47656e657269635a6170733a20556e737570706f7274656420746f6b656e2f7460448201527f617267657400000000000000000000000000000000000000000000000000000060648201526084016101f4565b6106058787612a44565b5060008060008061061589612bb6565b915091508173ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff161415801561068157508073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1614155b15610768578173ffffffffffffffffffffffffffffffffffffffff16856080015173ffffffffffffffffffffffffffffffffffffffff16146106c357816106c5565b805b93506106d48b8b868a8a612cc4565b85519093507effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16831015610763576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4e6f7420656e6f75676820746f6b656e73206f7574000000000000000000000060448201526064016101f4565b61076f565b8a93508992505b6000806107a38b87878a604001517effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff166130a5565b915091506107d2837f000000000000000000000000000000000000000000000000000000000000000083613317565b6107fd847f000000000000000000000000000000000000000000000000000000000000000084613317565b6108198b8b84848b60e001518c61010001518d60a001516134a8565b50505050505050505050505050565b61083061374d565b6000805460ff7401000000000000000000000000000000000000000080830482161581027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff90931692909217928390556040517f54ff2e67f1c514eb0a8c5471a009f041bbb5874dcd07f4efba73da5ac02f62a1936108b89390049091161515815260200190565b60405180910390a1565b60006108ce83836137ce565b90505b92915050565b6108e78787873388888888610b44565b50505050505050565b6108f861374d565b80838114801561090757508581145b61096d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f5a6170426173653a20496e76616c696420496e707574206c656e67746800000060448201526064016101f4565b60005b81811015610b07578383828181106109b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906109c69190615602565b600160008a8a85818110610a03577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610a189190614fea565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888885818110610a8d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610aa29190614fea565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905580610aff81615bba565b915050610970565b5050505050505050565b6000610b22878787873388886115cf565b979650505050505050565b610b3c86868633878787611a74565b505050505050565b60005474010000000000000000000000000000000000000000900460ff1615610bc9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5a6170426173653a20506175736564000000000000000000000000000000000060448201526064016101f4565b73ffffffffffffffffffffffffffffffffffffffff808916600090815260016020818152604080842094891684529390529190205460ff16151514610c90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f47656e657269635a6170733a20556e737570706f7274656420746f6b656e2f7460448201527f617267657400000000000000000000000000000000000000000000000000000060648201526084016101f4565b610c9a8888612a44565b5060008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f94d46688a6040518263ffffffff1660e01b8152600401610cfb91815260200190565b60006040518083038186803b158015610d1357600080fd5b505afa158015610d27573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d6d9190810190615500565b505090506000805b8251811015610e0657828181518110610db7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168d73ffffffffffffffffffffffffffffffffffffffff161415610dfe5760019150809450610e06565b600101610d75565b81610ea957610e188d8d858c8c613829565b885191965094507effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16841015610ea9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e73756666696369656e7420746f6b656e73206f757400000000000000000060448201526064016101f4565b86606001516110b55760006002850490508085039450610f2a848781518110610efb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000083613317565b610f5b7f000000000000000000000000000000000000000000000000000000000000000060008a6101200151613cc3565b5060808801516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015610fc757600080fd5b505afa158015610fdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fff9190615688565b88604001517effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1611156110b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f496e73756666696369656e742073776170206f757470757420666f72206f746860448201527f657220746f6b656e00000000000000000000000000000000000000000000000060648201526084016101f4565b505b5060005b825181101561135557600086602001518281518110611101577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151111561134d578560200151818151811061114c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015183828151811061118d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910101516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b1580156111fe57600080fd5b505afa158015611212573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112369190615688565b101561129e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e73756666696369656e7420617373657420746f6b656e730000000000000060448201526064016101f4565b61134d8382815181106112da577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000088602001518481518110611340577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151613317565b6001016110b9565b6040517fb95cac2800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063b95cac28906113cd908e9030908f908c90600401615897565b600060405180830381600087803b1580156113e757600080fd5b505af11580156113fb573d6000803e3d6000fd5b505050508973ffffffffffffffffffffffffffffffffffffffff167fb467c05168414fcfba3f1fac6458967ed77de69c5736d013b154cb4250fc1e988e8e896020015160405161144d939291906157de565b60405180910390a250505050505050505050505050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156114b057600080fd5b505afa1580156114c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e8919061563a565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915081600014801561151b575080155b1561152b5786935085925061159a565b6000611538888484613db6565b905086811161154c57879450925082611598565b6000611559888486613db6565b905088811115611592577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b94508693505b505b5050935093915050565b60006115b1848484613e42565b90505b9392505050565b6115c361374d565b6115cd6000613fb3565b565b6000805474010000000000000000000000000000000000000000900460ff1615611655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5a6170426173653a20506175736564000000000000000000000000000000000060448201526064016101f4565b73ffffffffffffffffffffffffffffffffffffffff808916600090815260016020818152604080842094881684529390529190205460ff1615151461171c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f47656e657269635a6170733a20556e737570706f7274656420746f6b656e2f7460448201527f617267657400000000000000000000000000000000000000000000000000000060648201526084016101f4565b6117268888612a44565b506117348888888686612cc4565b9050848110156117c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f47656e657269635a6170733a204e6f7420656e6f75676820746f6b656e73206f60448201527f757400000000000000000000000000000000000000000000000000000000000060648201526084016101f4565b6040805173ffffffffffffffffffffffffffffffffffffffff8a81168252602082018a905288168183015260608101839052905133917f432f459cfc12eaad14e3ad0fce539d6c62c74677074d608d3819a4a01395ce53919081900360800190a2610b22868583614028565b61183a61374d565b73ffffffffffffffffffffffffffffffffffffffff82166118b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f496e76616c69642072656365697665720000000000000000000000000000000060448201526064016101f4565b73ffffffffffffffffffffffffffffffffffffffff8316611a0c578047101561193c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016101f4565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611996576040519150601f19603f3d011682016040523d82523d6000602084013e61199b565b606091505b5050905080611a06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20756e61626c6520746f2073656e642076616c756500000060448201526064016101f4565b50611a17565b611a17838383614083565b6040805173ffffffffffffffffffffffffffffffffffffffff8086168252841660208201529081018290527f879f92dded0f26b83c3e00b12e0395dc72cfc3077343d1854ed6988edd1f90969060600160405180910390a1505050565b60005474010000000000000000000000000000000000000000900460ff1615611af9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5a6170426173653a20506175736564000000000000000000000000000000000060448201526064016101f4565b73ffffffffffffffffffffffffffffffffffffffff808816600090815260016020818152604080842094881684529390529190205460ff16151514611bc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f47656e657269635a6170733a20556e737570706f7274656420746f6b656e2f7460448201527f617267657400000000000000000000000000000000000000000000000000000060648201526084016101f4565b611bca8787612a44565b506000816020015115611c9d576040517feb73f37d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063eb73f37d90602401604080518083038186803b158015611c5d57600080fd5b505afa158015611c71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9591906156c1565b509050611d5f565b6040517f940494f100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063940494f19060240160206040518083038186803b158015611d2457600080fd5b505afa158015611d38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5c9190615688565b90505b60008167ffffffffffffffff811115611da1577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611dca578160200160208202803683370190505b509050818060005b84811015611feb576040517fc66106570000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff8b169063c66106579060240160206040518083038186803b158015611e4057600080fd5b505afa158015611e54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e789190615006565b848281518110611eb1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050838181518110611f24577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff161415611f6757809250611fe3565b856080015173ffffffffffffffffffffffffffffffffffffffff16848281518110611fbb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415611fe3578091505b600101611dd2565b818314158015611ffb5750848214155b612061576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c696420746f6b656e20696e6469636573000000000000000000000060448201526064016101f4565b8483141561212e576120768c8c868b8b613829565b8751909c509093507effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff168b101561212e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f46696c6c51756f74653a20496e73756666696369656e7420746f6b656e73206f60448201527f757400000000000000000000000000000000000000000000000000000000000060648201526084016101f4565b60008567ffffffffffffffff811115612170577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015612199578160200160208202803683370190505b509050866060015115612329578b8185815181106121e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505060016000868681518110612229577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff90811683528282019390935260409182016000908120938f16815292905290205460ff1615156001146122d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f506f6f6c206e6f7420617070726f76656400000000000000000000000000000060448201526064016101f4565b612324858581518110612315577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518c8e613317565b612903565b600060028d049050808d039c5060016000878781518110612373577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515600115151461246d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f506f6f6c206e6f7420617070726f76656400000000000000000000000000000060448201526064016101f4565b6124b88686815181106124a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518d83613317565b60008685815181106124f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910101516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b15801561256457600080fd5b505afa158015612578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061259c9190615688565b905060006125b18e60008c6101200151613cc3565b9050808060200190518101906125c79190615688565b9250828a604001517effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16111561267e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f496e73756666696369656e742073776170206f757470757420666f72206f746860448201527f657220746f6b656e00000000000000000000000000000000000000000000000060648201526084016101f4565b82828988815181106126b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910101516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b15801561272a57600080fd5b505afa15801561273e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127629190615688565b61276c9190615b77565b11156127d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f496e73756666696369656e7420746f6b656e730000000000000000000000000060448201526064016101f4565b87518f908f90612826908b908b908110612817577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518284613317565b6128718a8981518110612862577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518287613317565b81868a815181106128ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050848689815181106128f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505050505050505b600061291a8c8c8a60c001518b602001518661419a565b90508a73ffffffffffffffffffffffffffffffffffffffff167ff11c3c89619d4f8f8a5f43174e984e906a7382900df7986b6b9977bff1ae341d8f8385604051612966939291906157de565b60405180910390a25050505050505050505050505050565b610b3c868686338787876104af565b61299561374d565b73ffffffffffffffffffffffffffffffffffffffff8116612a38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101f4565b612a4181613fb3565b50565b600073ffffffffffffffffffffffffffffffffffffffff8316612ad25760003411612acb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5a6170426173653a204e6f204554482073656e7400000000000000000000000060448201526064016101f4565b50346108d1565b60008211612b3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f5a6170426173653a20496e76616c696420746f6b656e20616d6f756e7400000060448201526064016101f4565b3415612ba4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f5a6170426173653a204554482073656e74207769746820746f6b656e0000000060448201526064016101f4565b612bb0833330856143cd565b50919050565b60008060008390508073ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015612c0457600080fd5b505afa158015612c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c3c9190615006565b92508073ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b158015612c8457600080fd5b505afa158015612c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cbc9190615006565b915050915091565b600073ffffffffffffffffffffffffffffffffffffffff831673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21415612ea35773ffffffffffffffffffffffffffffffffffffffff861673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc214612db1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f537761703a20496e76616c69642066726f6d20746f6b656e20616e642057455460448201527f482074617267657400000000000000000000000000000000000000000000000060648201526084016101f4565b600085118015612dc057508434145b612e26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f537761703a20496e70757420455448206d69736d61746368000000000000000060448201526064016101f4565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b158015612e8257600080fd5b505af1158015612e96573d6000803e3d6000fd5b505050505084905061309c565b60008073ffffffffffffffffffffffffffffffffffffffff8816612f3d57600087118015612ed057508634145b612f36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f537761703a20496e70757420455448206d69736d61746368000000000000000060448201526064016101f4565b5085612f48565b612f48888689613317565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8816906370a082319060240160206040518083038186803b158015612fb057600080fd5b505afa158015612fc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fe89190615688565b9050612ff5868387613cc3565b506040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152819073ffffffffffffffffffffffffffffffffffffffff8916906370a082319060240160206040518083038186803b15801561305d57600080fd5b505afa158015613071573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130959190615688565b0393505050505b95945050505050565b600080600086905060008173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156130f557600080fd5b505afa158015613109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061312d9190615006565b905060008273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561317757600080fd5b505afa15801561318b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131af9190615006565b90506000808473ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156131fa57600080fd5b505afa15801561320e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613232919061563a565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508373ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614156132cc576000613297838b6137ce565b9050806132ac576132a960028b615b01565b90505b6132b88b85838c61442b565b96506132c4818b615b77565b975050613309565b60006132d8828b6137ce565b9050806132ed576132ea60028b615b01565b90505b6132f98b86838c61442b565b9750613305818b615b77565b9650505b505050505094509492505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561338957600080fd5b505afa15801561339d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133c19190615688565b6133cb9190615ae9565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506134a29085907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152614913565b50505050565b60008773ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156134f057600080fd5b505afa158015613504573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135289190615006565b905060008873ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561357257600080fd5b505afa158015613586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135aa9190615006565b6040517fe8e3370000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301528281166024830152604482018a9052606482018990526084820188905260a482018790528a811660c48301527ff00000000000000000000000000000000000000000000000000000000000000060e48301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063e8e337009061010401606060405180830381600087803b15801561368b57600080fd5b505af115801561369f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136c39190615711565b506040805173ffffffffffffffffffffffffffffffffffffffff86811682528581166020830152918101849052606081018390529297509095508916907f55e7612157ce92c025a7e9df919652eab1c923e7bf47e4885a575da61663854a9060800160405180910390a28215613742576137428883838a8a8a8a614a1f565b505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146115cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101f4565b60006107ca6137df846107cd615b3a565b6138156137ef86623cda29615b3a565b6137fc86623cda20615b3a565b6138069190615ae9565b6138109087615b3a565b614a52565b61381f9190615b77565b6108ce9190615b01565b6000808073ffffffffffffffffffffffffffffffffffffffff88166138ea5760008711801561385757508634145b6138e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f496e76616c6964205f616d6f756e743a20496e70757420455448206d69736d6160448201527f746368000000000000000000000000000000000000000000000000000000000060648201526084016101f4565b50856138f5565b6138f5888689613317565b855160008167ffffffffffffffff811115613939577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015613962578160200160208202803683370190505b50905060005b82811015613a9e578881815181106139a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910101516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015613a1a57600080fd5b505afa158015613a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a529190615688565b828281518110613a8b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020908102919091010152600101613968565b613aa9888589613cc3565b506000905082815b84831015613bf8578a8381518110613af2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910101516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015613b6357600080fd5b505afa158015613b77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b9b9190615688565b9050838381518110613bd6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151811115613bed57829150613bf8565b600190920191613ab1565b84821415613c62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f496e76616c69642073776170000000000000000000000000000000000000000060448201526064016101f4565b81848381518110613c9c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015182613caf9190615b77565b975097505050505050509550959350505050565b60606000808573ffffffffffffffffffffffffffffffffffffffff168585604051613cee91906157c2565b60006040518083038185875af1925050503d8060008114613d2b576040519150601f19603f3d011682016040523d82523d6000602084013e613d30565b606091505b50915091508115613d445791506115b49050565b805115613d545780518082602001fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f457865637574653a20556e6b6e6f776e206661696c757265000000000000000060448201526064016101f4565b60008083118015613dc75750600082115b613e2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f537761703a20496e73756666696369656e74206c69717569646974790000000060448201526064016101f4565b82613e388386615b3a565b6115b19190615b01565b6000808373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015613e8b57600080fd5b505afa158015613e9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ec39190615006565b90506000808573ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015613f0e57600080fd5b505afa158015613f22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f46919061563a565b509150915060008773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614613f865781613f88565b825b6dffffffffffffffffffffffffffff1690506000613fa682886137ce565b9998505050505050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261407e9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401613420565b505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a082319060240160206040518083038186803b1580156140eb57600080fd5b505afa1580156140ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141239190615688565b90508082111561418f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5a6170426173653a206e6f7420656e6f75676820746f6b656e7300000000000060448201526064016101f4565b6134a2848484614028565b6000806060841561427957630b4c7e4d848760008a6040516024016141c29493929190615852565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508773ffffffffffffffffffffffffffffffffffffffff1660008260405161422c91906157c2565b60006040518083038185875af1925050503d8060008114614269576040519150601f19603f3d011682016040523d82523d6000602084013e61426e565b606091505b509092509050614346565b63ad6d8c4a84878960405160240161429393929190615813565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508773ffffffffffffffffffffffffffffffffffffffff166000826040516142fd91906157c2565b60006040518083038185875af1925050503d806000811461433a576040519150601f19603f3d011682016040523d82523d6000602084013e61433f565b606091505b5090925090505b816143ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4661696c656420616464696e67206c697175696469747900000000000000000060448201526064016101f4565b808060200190518101906143c19190615688565b98975050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526134a29085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401613420565b60008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561446857508161490b565b614493857f000000000000000000000000000000000000000000000000000000000000000085613317565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156144fb57600080fd5b505afa15801561450f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145339190615006565b6040517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152878116602483015291925060009183169063e6a439059060440160206040518083038186803b1580156145a857600080fd5b505afa1580156145bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145e09190615006565b905073ffffffffffffffffffffffffffffffffffffffff811661465f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f205377617020417661696c61626c6500000000000000000000000000000060448201526064016101f4565b60408051600280825260608201835260009260208301908036833701905050905087816000815181106146bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508681600181518110614730577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff92831660209182029290920101526040517f38ed17390000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000909116906338ed1739906147da9089908990869030907ff0000000000000000000000000000000000000000000000000000000000000009060040161599f565b600060405180830381600087803b1580156147f457600080fd5b505af1158015614808573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261484e91908101906155cf565b6001825161485c9190615b77565b81518110614893577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151935084841015614907576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4572726f72205377617070696e6720546f6b656e73203200000000000000000060448201526064016101f4565b5050505b949350505050565b6000614975826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16614abc9092919063ffffffff16565b80519091501561407e5780806020019051810190614993919061561e565b61407e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016101f4565b81841115614a3b57614a3b8688614a368588615b77565b614083565b808311156108e7576108e78588614a368487615b77565b60006003821115614aad5750806000614a6c600283615b01565b614a77906001615ae9565b90505b81811015612bb057905080600281614a928186615b01565b614a9c9190615ae9565b614aa69190615b01565b9050614a7a565b8115614ab7575060015b919050565b60606115b184846000858573ffffffffffffffffffffffffffffffffffffffff85163b614b45576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101f4565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051614b6e91906157c2565b60006040518083038185875af1925050503d8060008114614bab576040519150601f19603f3d011682016040523d82523d6000602084013e614bb0565b606091505b5091509150610b2282828660608315614bca5750816115b4565b825115614bda5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f4919061598c565b8035614ab781615c51565b60008083601f840112614c2a578182fd5b50813567ffffffffffffffff811115614c41578182fd5b6020830191508360208260051b8501011115614c5c57600080fd5b9250929050565b600082601f830112614c73578081fd5b81356020614c88614c8383615ac5565b615a76565b80838252828201915082860187848660051b8901011115614ca7578586fd5b855b85811015614cce578135614cbc81615c51565b84529284019290840190600101614ca9565b5090979650505050505050565b600082601f830112614ceb578081fd5b81356020614cfb614c8383615ac5565b80838252828201915082860187848660051b8901011115614d1a578586fd5b855b85811015614cce57813584529284019290840190600101614d1c565b600082601f830112614d48578081fd5b81516020614d58614c8383615ac5565b80838252828201915082860187848660051b8901011115614d77578586fd5b855b85811015614cce57815184529284019290840190600101614d79565b8035614ab781615c73565b600082601f830112614db0578081fd5b813567ffffffffffffffff811115614dca57614dca615c22565b614dfb60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601615a76565b818152846020838601011115614e0f578283fd5b816020850160208301379081016020019190915292915050565b600060808284031215614e3a578081fd5b614e42615a29565b9050813567ffffffffffffffff80821115614e5c57600080fd5b614e6885838601614c63565b83526020840135915080821115614e7e57600080fd5b614e8a85838601614cdb565b60208401526040840135915080821115614ea357600080fd5b50614eb084828501614da0565b604083015250614ec260608301614d95565b606082015292915050565b60006101408284031215614edf578081fd5b614ee7615a52565b9050614ef282614fbb565b8152614f0060208301614d95565b6020820152614f1160408301614fbb565b6040820152614f2260608301614d95565b6060820152614f3360808301614c0e565b6080820152614f4460a08301614d95565b60a082015260c082013560c082015260e082013560e08201526101008083013581830152506101208083013567ffffffffffffffff811115614f8557600080fd5b614f9185828601614da0565b82840152505092915050565b80516dffffffffffffffffffffffffffff81168114614ab757600080fd5b80357effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81168114614ab757600080fd5b600060208284031215614ffb578081fd5b81356115b481615c51565b600060208284031215615017578081fd5b81516115b481615c51565b60008060408385031215615034578081fd5b823561503f81615c51565b9150602083013561504f81615c51565b809150509250929050565b60008060006060848603121561506e578081fd5b833561507981615c51565b9250602084013561508981615c51565b929592945050506040919091013590565b600080600080600080600060e0888a0312156150b4578485fd5b87356150bf81615c51565b96506020880135955060408801356150d681615c51565b945060608801356150e681615c51565b935060808801356150f681615c51565b925060a088013567ffffffffffffffff80821115615112578384fd5b61511e8b838c01614da0565b935060c08a0135915080821115615133578283fd5b506151408a828b01614ecd565b91505092959891949750929550565b60008060008060008060c08789031215615167578384fd5b863561517281615c51565b955060208701359450604087013561518981615c51565b9350606087013561519981615c51565b9250608087013567ffffffffffffffff808211156151b5578384fd5b6151c18a838b01614da0565b935060a08901359150808211156151d6578283fd5b506151e389828a01614ecd565b9150509295509295509295565b600080600080600080600060e0888a03121561520a578081fd5b873561521581615c51565b965060208801359550604088013561522c81615c51565b945060608801359350608088013561524381615c51565b925060a088013561525381615c51565b915060c088013567ffffffffffffffff81111561526e578182fd5b6151408a828b01614da0565b60008060008060008060c08789031215615292578384fd5b863561529d81615c51565b95506020870135945060408701356152b481615c51565b93506060870135925060808701356152cb81615c51565b915060a087013567ffffffffffffffff8111156152e6578182fd5b6151e389828a01614da0565b600080600080600080600080610100898b03121561530e578182fd5b61531789614c0e565b9750602089013596506040890135955061533360608a01614c0e565b945061534160808a01614c0e565b935060a089013567ffffffffffffffff8082111561535d578384fd5b6153698c838d01614da0565b945060c08b013591508082111561537e578384fd5b61538a8c838d01614ecd565b935060e08b013591508082111561539f578283fd5b506153ac8b828c01614e29565b9150509295985092959890939650565b600080600080600080600060e0888a0312156153d6578081fd5b87356153e181615c51565b9650602088013595506040880135945060608801356153ff81615c51565b9350608088013567ffffffffffffffff8082111561541b578283fd5b6154278b838c01614da0565b945060a08a013591508082111561543c578283fd5b6154488b838c01614ecd565b935060c08a013591508082111561545d578283fd5b506151408a828b01614e29565b60008060008060008060608789031215615482578384fd5b863567ffffffffffffffff80821115615499578586fd5b6154a58a838b01614c19565b909850965060208901359150808211156154bd578586fd5b6154c98a838b01614c19565b909650945060408901359150808211156154e1578384fd5b506154ee89828a01614c19565b979a9699509497509295939492505050565b600080600060608486031215615514578081fd5b835167ffffffffffffffff8082111561552b578283fd5b818601915086601f83011261553e578283fd5b8151602061554e614c8383615ac5565b8083825282820191508286018b848660051b890101111561556d578788fd5b8796505b8487101561559857805161558481615c51565b835260019690960195918301918301615571565b50918901519197509093505050808211156155b1578283fd5b506155be86828701614d38565b925050604084015190509250925092565b6000602082840312156155e0578081fd5b815167ffffffffffffffff8111156155f6578182fd5b61490b84828501614d38565b600060208284031215615613578081fd5b81356115b481615c73565b60006020828403121561562f578081fd5b81516115b481615c73565b60008060006060848603121561564e578081fd5b61565784614f9d565b925061566560208501614f9d565b9150604084015163ffffffff8116811461567d578182fd5b809150509250925092565b600060208284031215615699578081fd5b5051919050565b600080604083850312156156b2578182fd5b50508035926020909101359150565b600080604083850312156156d3578182fd5b505080516020909101519092909150565b6000806000606084860312156156f8578081fd5b8335925060208401359150604084013561567d81615c51565b600080600060608486031215615725578081fd5b8351925060208401519150604084015190509250925092565b6000815180845260208085019450808401835b8381101561576d57815187529582019590820190600101615751565b509495945050505050565b60008151808452615790816020860160208601615b8e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516157d4818460208701615b8e565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff8416815282602082015260606040820152600061309c606083018461573e565b606081526000615826606083018661573e565b905083602083015273ffffffffffffffffffffffffffffffffffffffff83166040830152949350505050565b608081526000615865608083018761573e565b602083019590955250911515604083015273ffffffffffffffffffffffffffffffffffffffff16606090910152919050565b8481526000602073ffffffffffffffffffffffffffffffffffffffff80871682850152808616604085015260806060850152610100840185516080808701528181518084526101208801915085830193508692505b8083101561590e578351851682529285019260019290920191908501906158ec565b508488015194507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff809350838782030160a088015261594c818661573e565b94505050506040850151818584030160c086015261596a8382615778565b92505050606084015161598160e085018215159052565b509695505050505050565b6020815260006108ce6020830184615778565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b818110156159fb57845173ffffffffffffffffffffffffffffffffffffffff16835293830193918301916001016159c9565b505073ffffffffffffffffffffffffffffffffffffffff969096166060850152505050608001529392505050565b6040516080810167ffffffffffffffff81118282101715615a4c57615a4c615c22565b60405290565b604051610140810167ffffffffffffffff81118282101715615a4c57615a4c615c22565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715615abd57615abd615c22565b604052919050565b600067ffffffffffffffff821115615adf57615adf615c22565b5060051b60200190565b60008219821115615afc57615afc615bf3565b500190565b600082615b35577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615615b7257615b72615bf3565b500290565b600082821015615b8957615b89615bf3565b500390565b60005b83811015615ba9578181015183820152602001615b91565b838111156134a25750506000910152565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415615bec57615bec615bf3565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114612a4157600080fd5b8015158114612a4157600080fdfea2646970667358221220497be195cff553f21a18356a925bba2fc703235df6d0c95413470f70c66b86c664736f6c63430008040033";

type GenericZapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenericZapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenericZap__factory extends ContractFactory {
  constructor(...args: GenericZapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GenericZap> {
    return super.deploy(_router, overrides || {}) as Promise<GenericZap>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  override attach(address: string): GenericZap {
    return super.attach(address) as GenericZap;
  }
  override connect(signer: Signer): GenericZap__factory {
    return super.connect(signer) as GenericZap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenericZapInterface {
    return new utils.Interface(_abi) as GenericZapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GenericZap {
    return new Contract(address, _abi, signerOrProvider) as GenericZap;
  }
}
