/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  JoiningFee,
  JoiningFeeInterface,
} from "../../../contracts/core/JoiningFee";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_defaultHourlyJoiningFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SetJoiningFee",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "firstPeriodStartTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "periodDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "calc",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultHourlyJoiningFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hourlyJoiningFeeFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setHourlyJoiningFeeFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161067238038061067283398101604081905261002f91610090565b61003833610040565b6001556100a8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100a1578081fd5b5051919050565b6105bb806100b76000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638530a9761161005b5780638530a976146100c55780638da5cb5b146100ce578063cb7d6e44146100f6578063f2fde38b1461011657600080fd5b806307e7cc2714610082578063715018a6146100a85780637cb30b21146100b2575b600080fd5b610095610090366004610495565b610129565b6040519081526020015b60405180910390f35b6100b06101b3565b005b6100b06100c036600461046c565b6101c7565b61009560015481565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161009f565b61009561010436600461044b565b60026020526000908152604090205481565b6100b061012436600461044b565b610270565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600260205260408120548061015957506001545b600084610166874261053f565b61017091906104c9565b905081610e10876101818885610502565b61018b904261053f565b610195919061053f565b61019f91906104c9565b6101a99190610502565b9695505050505050565b6101bb61032c565b6101c560006103ad565b565b6101cf61032c565b73ffffffffffffffffffffffffffffffffffffffff82166101f457600181905561021d565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090208190555b6040805173ffffffffffffffffffffffffffffffffffffffff84168152602081018390527fdbc1891aa43b25d34c9e91ae51cf4bdd4cee6562180419a686d464e7514aced1910160405180910390a15050565b61027861032c565b73ffffffffffffffffffffffffffffffffffffffff8116610320576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610329816103ad565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610317565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461044657600080fd5b919050565b60006020828403121561045c578081fd5b61046582610422565b9392505050565b6000806040838503121561047e578081fd5b61048783610422565b946020939093013593505050565b6000806000606084860312156104a9578081fd5b83359250602084013591506104c060408501610422565b90509250925092565b6000826104fd577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561053a5761053a610556565b500290565b60008282101561055157610551610556565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220e80aeaa71e60fba66aa820138607606360a98654bc4a546ca8e8bb52fd6c2bd764736f6c63430008040033";

type JoiningFeeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JoiningFeeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JoiningFee__factory extends ContractFactory {
  constructor(...args: JoiningFeeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _defaultHourlyJoiningFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JoiningFee> {
    return super.deploy(
      _defaultHourlyJoiningFee,
      overrides || {}
    ) as Promise<JoiningFee>;
  }
  override getDeployTransaction(
    _defaultHourlyJoiningFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _defaultHourlyJoiningFee,
      overrides || {}
    );
  }
  override attach(address: string): JoiningFee {
    return super.attach(address) as JoiningFee;
  }
  override connect(signer: Signer): JoiningFee__factory {
    return super.connect(signer) as JoiningFee__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JoiningFeeInterface {
    return new utils.Interface(_abi) as JoiningFeeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JoiningFee {
    return new Contract(address, _abi, signerOrProvider) as JoiningFee;
  }
}
