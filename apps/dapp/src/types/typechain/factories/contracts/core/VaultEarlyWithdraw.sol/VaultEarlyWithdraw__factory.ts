/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  VaultEarlyWithdraw,
  VaultEarlyWithdrawInterface,
} from "../../../../contracts/core/VaultEarlyWithdraw.sol/VaultEarlyWithdraw";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_templeTokenAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_validVaults",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExpectedNonZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vaultAddress",
        type: "address",
      },
    ],
    name: "InvalidVault",
    type: "error",
  },
  {
    inputs: [],
    name: "SendFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EarlyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "recoverToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "templeToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "validVaults",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_templeAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200105938038062001059833981016040819052620000349162000152565b6000805460ff191690556200004933620000dc565b6001600160601b0319606083901b1660805260005b8151811015620000d35760018060008484815181106200008e57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055620000cb816200023d565b90506200005e565b5050506200027b565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b80516001600160a01b03811681146200014d57600080fd5b919050565b6000806040838503121562000165578182fd5b620001708362000135565b602084810151919350906001600160401b03808211156200018f578384fd5b818601915086601f830112620001a3578384fd5b815181811115620001b857620001b862000265565b8060051b604051601f19603f83011681018181108582111715620001e057620001e062000265565b604052828152858101935084860182860187018b1015620001ff578788fd5b8795505b838610156200022c57620002178162000135565b85526001959095019493860193860162000203565b508096505050505050509250929050565b60006000198214156200025e57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b60805160601c610db8620002a16000396000818161017801526104c20152610db86000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80638da5cb5b11610076578063b1a9069c1161005b578063b1a9069c14610173578063f2fde38b1461019a578063f3fef3a3146101ad57600080fd5b80638da5cb5b1461011c578063a7229fd91461016057600080fd5b80636657fc67116100a75780636657fc67146100e9578063715018a61461010c5780638456cb591461011457600080fd5b80633f4ba83a146100c35780635c975abb146100cd575b600080fd5b6100cb6101c0565b005b60005460ff165b60405190151581526020015b60405180910390f35b6100d46100f7366004610c4b565b60016020526000908152604090205460ff1681565b6100cb6101d2565b6100cb6101e4565b600054610100900473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e0565b6100cb61016e366004610c65565b6101f4565b61013b7f000000000000000000000000000000000000000000000000000000000000000081565b6100cb6101a8366004610c4b565b6102f3565b6100cb6101bb366004610ca0565b6103aa565b6101c8610522565b6101d06105a9565b565b6101da610522565b6101d06000610626565b6101ec610522565b6101d06106a3565b6101fc610522565b73ffffffffffffffffffffffffffffffffffffffff8216610266576040517f8e4c8aa600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b61028773ffffffffffffffffffffffffffffffffffffffff841683836106fe565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f879f92dded0f26b83c3e00b12e0395dc72cfc3077343d1854ed6988edd1f9096836040516102e691815260200190565b60405180910390a3505050565b6102fb610522565b73ffffffffffffffffffffffffffffffffffffffff811661039e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161025d565b6103a781610626565b50565b6103b26107d7565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205460ff16610429576040517faf7301ae00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260240161025d565b80610460576040517f54db0c8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104a83361048960005473ffffffffffffffffffffffffffffffffffffffff6101009091041690565b73ffffffffffffffffffffffffffffffffffffffff8516919084610844565b6104e973ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633836106fe565b60405181815233907f79273e16333ddc825a0d0ac202d9e533b62bc03870b7f8c978b30afad47efeca9060200160405180910390a25050565b60005473ffffffffffffffffffffffffffffffffffffffff6101009091041633146101d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025d565b6105b16108a8565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b6000805473ffffffffffffffffffffffffffffffffffffffff8381166101008181027fffffffffffffffffffffff0000000000000000000000000000000000000000ff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6106ab6107d7565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586105fc3390565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107d29084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610914565b505050565b60005460ff16156101d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161025d565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526108a29085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401610750565b50505050565b60005460ff166101d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161025d565b6000610976826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610a209092919063ffffffff16565b8051909150156107d257808060200190518101906109949190610cc9565b6107d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161025d565b6060610a2f8484600085610a39565b90505b9392505050565b606082471015610acb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161025d565b73ffffffffffffffffffffffffffffffffffffffff85163b610b49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161025d565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610b729190610ce9565b60006040518083038185875af1925050503d8060008114610baf576040519150601f19603f3d011682016040523d82523d6000602084013e610bb4565b606091505b5091509150610bc4828286610bcf565b979650505050505050565b60608315610bde575081610a32565b825115610bee5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025d9190610d05565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c4657600080fd5b919050565b600060208284031215610c5c578081fd5b610a3282610c22565b600080600060608486031215610c79578182fd5b610c8284610c22565b9250610c9060208501610c22565b9150604084013590509250925092565b60008060408385031215610cb2578182fd5b610cbb83610c22565b946020939093013593505050565b600060208284031215610cda578081fd5b81518015158114610a32578182fd5b60008251610cfb818460208701610d56565b9190910192915050565b6020815260008251806020840152610d24816040850160208701610d56565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60005b83811015610d71578181015183820152602001610d59565b838111156108a2575050600091015256fea2646970667358221220370dde21746272cb9be784428e1b49b1d8e16f779fd47dd5d52e4fc7958d29ea64736f6c63430008040033";

type VaultEarlyWithdrawConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultEarlyWithdrawConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultEarlyWithdraw__factory extends ContractFactory {
  constructor(...args: VaultEarlyWithdrawConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _templeTokenAddress: PromiseOrValue<string>,
    _validVaults: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VaultEarlyWithdraw> {
    return super.deploy(
      _templeTokenAddress,
      _validVaults,
      overrides || {}
    ) as Promise<VaultEarlyWithdraw>;
  }
  override getDeployTransaction(
    _templeTokenAddress: PromiseOrValue<string>,
    _validVaults: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _templeTokenAddress,
      _validVaults,
      overrides || {}
    );
  }
  override attach(address: string): VaultEarlyWithdraw {
    return super.attach(address) as VaultEarlyWithdraw;
  }
  override connect(signer: Signer): VaultEarlyWithdraw__factory {
    return super.connect(signer) as VaultEarlyWithdraw__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultEarlyWithdrawInterface {
    return new utils.Interface(_abi) as VaultEarlyWithdrawInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultEarlyWithdraw {
    return new Contract(address, _abi, signerOrProvider) as VaultEarlyWithdraw;
  }
}
