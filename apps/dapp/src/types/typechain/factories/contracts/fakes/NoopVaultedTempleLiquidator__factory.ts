/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NoopVaultedTempleLiquidator,
  NoopVaultedTempleLiquidatorInterface,
} from "../NoopVaultedTempleLiquidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract TempleERC20Token",
        name: "_templeToken",
        type: "address",
      },
      {
        internalType: "contract VaultedTemple",
        name: "_vaultedTemple",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "toTemple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161021438038061021483398101604081905261002f91610060565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100b1565b60008060408385031215610072578182fd5b825161007d81610099565b602084015190925061008e81610099565b809150509250929050565b6001600160a01b03811681146100ae57600080fd5b50565b610154806100c06000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634d4c23a814610030575b600080fd5b61004361003e3660046100d7565b610045565b005b6000546001546040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152602481018590529116906340c10f1990604401600060405180830381600087803b1580156100bb57600080fd5b505af11580156100cf573d6000803e3d6000fd5b505050505050565b600080604083850312156100e9578182fd5b82359150602083013573ffffffffffffffffffffffffffffffffffffffff81168114610113578182fd5b80915050925092905056fea264697066735822122040741adfe03a8b920d9945141ebb674ce20dc6c6fd54b8e5f27f74774dc921b164736f6c63430008040033";

type NoopVaultedTempleLiquidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NoopVaultedTempleLiquidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NoopVaultedTempleLiquidator__factory extends ContractFactory {
  constructor(...args: NoopVaultedTempleLiquidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NoopVaultedTempleLiquidator";
  }

  deploy(
    _templeToken: string,
    _vaultedTemple: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NoopVaultedTempleLiquidator> {
    return super.deploy(
      _templeToken,
      _vaultedTemple,
      overrides || {}
    ) as Promise<NoopVaultedTempleLiquidator>;
  }
  getDeployTransaction(
    _templeToken: string,
    _vaultedTemple: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _templeToken,
      _vaultedTemple,
      overrides || {}
    );
  }
  attach(address: string): NoopVaultedTempleLiquidator {
    return super.attach(address) as NoopVaultedTempleLiquidator;
  }
  connect(signer: Signer): NoopVaultedTempleLiquidator__factory {
    return super.connect(signer) as NoopVaultedTempleLiquidator__factory;
  }
  static readonly contractName: "NoopVaultedTempleLiquidator";
  public readonly contractName: "NoopVaultedTempleLiquidator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NoopVaultedTempleLiquidatorInterface {
    return new utils.Interface(_abi) as NoopVaultedTempleLiquidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NoopVaultedTempleLiquidator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NoopVaultedTempleLiquidator;
  }
}
