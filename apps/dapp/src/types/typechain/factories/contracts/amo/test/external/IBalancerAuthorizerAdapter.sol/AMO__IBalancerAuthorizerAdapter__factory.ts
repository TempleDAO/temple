/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  AMO__IBalancerAuthorizerAdapter,
  AMO__IBalancerAuthorizerAdapterInterface,
} from "../../../../../../contracts/amo/test/external/IBalancerAuthorizerAdapter.sol/AMO__IBalancerAuthorizerAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "performAction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

export class AMO__IBalancerAuthorizerAdapter__factory {
  static readonly abi = _abi;
  static createInterface(): AMO__IBalancerAuthorizerAdapterInterface {
    return new utils.Interface(
      _abi
    ) as AMO__IBalancerAuthorizerAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AMO__IBalancerAuthorizerAdapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AMO__IBalancerAuthorizerAdapter;
  }
}
