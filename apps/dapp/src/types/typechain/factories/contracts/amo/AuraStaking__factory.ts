/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AuraStaking,
  AuraStakingInterface,
} from "../../../contracts/amo/AuraStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_bptToken",
        type: "address",
      },
      {
        internalType: "contract AMO__IAuraBooster",
        name: "_booster",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_rewardTokens",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotOperator",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOperatorOrOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RecoveredToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "pId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewards",
        type: "address",
      },
    ],
    name: "SetAuraPoolInfo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "SetOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "SetRewardsRecipient",
    type: "event",
  },
  {
    inputs: [],
    name: "auraPoolInfo",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewards",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pId",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "booster",
    outputs: [
      {
        internalType: "contract AMO__IAuraBooster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bptToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositAndStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "earnedRewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "claimExtras",
        type: "bool",
      },
    ],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "recoverToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_pId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewards",
        type: "address",
      },
    ],
    name: "setAuraPoolInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipeint",
        type: "address",
      },
    ],
    name: "setRewardsRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "showPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "staked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "earned",
            type: "uint256",
          },
        ],
        internalType: "struct AuraStaking.Position",
        name: "position",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "claim",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "sendToOperator",
        type: "bool",
      },
    ],
    name: "withdrawAllAndUnwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claim",
        type: "bool",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001b4f38038062001b4f833981016040819052620000349162000179565b6200003f3362000096565b600180546001600160a01b0386166001600160a01b03199091161790556001600160601b0319606084811b821660805283901b1660a05280516200008b906005906020840190620000e6565b5050505050620002be565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200013e579160200282015b828111156200013e57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000107565b506200014c92915062000150565b5090565b5b808211156200014c576000815560010162000151565b80516200017481620002a5565b919050565b600080600080608085870312156200018f578384fd5b84516200019c81620002a5565b80945050602080860151620001b181620002a5565b6040870151909450620001c481620002a5565b60608701519093506001600160401b0380821115620001e1578384fd5b818801915088601f830112620001f5578384fd5b8151818111156200020a576200020a6200028f565b8060051b604051601f19603f830116810181811085821117156200023257620002326200028f565b604052828152858101935084860182860187018d101562000251578788fd5b8795505b838610156200027e57620002698162000167565b85526001959095019493860193860162000255565b50989b979a50959850505050505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620002bb57600080fd5b50565b60805160601c60a05160601c6118426200030d600039600081816102e00152818161066601526106e8015260008181610219015281816105ad015281816106440152610e8801526118426000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c80639fb4a611116100cd578063d6f1926211610081578063f1a726d411610066578063f1a726d41461038b578063f2fde38b1461039e578063ff2a7d30146103b157600080fd5b8063d6f1926214610302578063da94e0f41461030a57600080fd5b8063a7229fd9116100b2578063a7229fd9146102b5578063b3ab15fb146102c8578063c6def076146102db57600080fd5b80639fb4a6111461027f578063a4698feb146102a257600080fd5b8063715018a6116101245780637bb7bed1116101095780637bb7bed11461023b5780637bbf44271461024e5780638da5cb5b1461026157600080fd5b8063715018a61461020c5780637b3a47591461021457600080fd5b8063570ca73511610155578063570ca7351461019957806359fe8539146101e35780635b9f0016146101f657600080fd5b80631a54259c146101715780633b912eda14610186575b600080fd5b61018461017f36600461157e565b6103d1565b005b610184610194366004611673565b610453565b6001546101b99073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101846101f1366004611643565b6105d9565b6101fe61077d565b6040519081526020016101da565b610184610825565b6101b97f000000000000000000000000000000000000000000000000000000000000000081565b6101b9610249366004611643565b610839565b61018461025c3660046116b0565b610870565b60005473ffffffffffffffffffffffffffffffffffffffff166101b9565b610287610951565b604080518251815260209283015192810192909252016101da565b6101846102b03660046115d3565b61097f565b6101846102c3366004611598565b610bde565b6101846102d636600461157e565b610c64565b6101b97f000000000000000000000000000000000000000000000000000000000000000081565b6101fe610cdf565b6002546003546103529173ffffffffffffffffffffffffffffffffffffffff908116919081169074010000000000000000000000000000000000000000900463ffffffff1683565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815293909216602084015263ffffffff16908201526060016101da565b61018461039936600461160b565b610d34565b6101846103ac36600461157e565b610eb1565b6004546101b99073ffffffffffffffffffffffffffffffffffffffff1681565b6103d9610f6a565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f122d4d57de43dcf4f26f6f4c52b422bcc5f2ec4e09f94356ec81b2c1b7359c45906020015b60405180910390a150565b60015473ffffffffffffffffffffffffffffffffffffffff163314801590610493575060005473ffffffffffffffffffffffffffffffffffffffff163314155b156104ca576040517ff20fc9eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546040517fc32e720200000000000000000000000000000000000000000000000000000000815260048101859052831515602482015273ffffffffffffffffffffffffffffffffffffffff9091169063c32e720290604401602060405180830381600087803b15801561053e57600080fd5b505af1158015610552573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057691906115ef565b5073ffffffffffffffffffffffffffffffffffffffff8116156105d4576105d473ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168285610feb565b505050565b60015473ffffffffffffffffffffffffffffffffffffffff16331461062a576040517f7c214f0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61068b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836110bf565b6003546040517f43a0d0660000000000000000000000000000000000000000000000000000000081527401000000000000000000000000000000000000000090910463ffffffff16600482015260248101829052600160448201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906343a0d06690606401602060405180830381600087803b15801561074157600080fd5b505af1158015610755573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077991906115ef565b5050565b6003546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a08231906024015b60206040518083038186803b1580156107e857600080fd5b505afa1580156107fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610820919061165b565b905090565b61082d610f6a565b61083760006111d2565b565b6005818154811061084957600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b610878610f6a565b600380546002805473ffffffffffffffffffffffffffffffffffffffff8681167fffffffffffffffffffffffff00000000000000000000000000000000000000009283168117909355851663ffffffff88167401000000000000000000000000000000000000000081029092167fffffffffffffffff0000000000000000000000000000000000000000000000009094169390931783179093556040805191825260208201929092527f8fe015ff86fc8c729ae9adf675a63baffda7a5194637e32a2d5a93693c698221910160405180910390a2505050565b604080518082019091526000808252602082015261096d61077d565b8152610977610cdf565b602082015290565b6003546040517f7050ccd9000000000000000000000000000000000000000000000000000000008152306004820152821515602482015273ffffffffffffffffffffffffffffffffffffffff90911690637050ccd990604401602060405180830381600087803b1580156109f257600080fd5b505af1158015610a06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2a91906115ef565b5060045473ffffffffffffffffffffffffffffffffffffffff1615610bdb5760005b60055481101561077957600060058281548110610a92577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015610b0457600080fd5b505afa158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3c919061165b565b9050610bc8600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260058581548110610b9f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169190610feb565b5080610bd381611796565b915050610a4c565b50565b610be6610f6a565b610c0773ffffffffffffffffffffffffffffffffffffffff84168383610feb565b6040805173ffffffffffffffffffffffffffffffffffffffff8086168252841660208201529081018290527f76fb5f9555be8170fef33d7b413bcbe740a6a96cd162b1234b602329b0c84e329060600160405180910390a1505050565b610c6c610f6a565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fdbebfba65bd6398fb722063efc10c99f624f9cd8ba657201056af918a676d5ee90602001610448565b6003546040517e8cc26200000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff1690628cc262906024016107d0565b610d3c610f6a565b6003546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015610da657600080fd5b505afa158015610dba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dde919061165b565b6003546040517f49f039a2000000000000000000000000000000000000000000000000000000008152851515600482015291925073ffffffffffffffffffffffffffffffffffffffff16906349f039a290602401600060405180830381600087803b158015610e4c57600080fd5b505af1158015610e60573d6000803e3d6000fd5b5050505081156105d4576001546105d49073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911683610feb565b610eb9610f6a565b73ffffffffffffffffffffffffffffffffffffffff8116610f61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610bdb816111d2565b60005473ffffffffffffffffffffffffffffffffffffffff163314610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610f58565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526105d49084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611247565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561113157600080fd5b505afa158015611145573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611169919061165b565b6111739190611752565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506111cc9085907f095ea7b3000000000000000000000000000000000000000000000000000000009060640161103d565b50505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006112a9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113539092919063ffffffff16565b8051909150156105d457808060200190518101906112c791906115ef565b6105d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610f58565b6060611362848460008561136c565b90505b9392505050565b6060824710156113fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610f58565b73ffffffffffffffffffffffffffffffffffffffff85163b61147c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610f58565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516114a591906116e5565b60006040518083038185875af1925050503d80600081146114e2576040519150601f19603f3d011682016040523d82523d6000602084013e6114e7565b606091505b50915091506114f7828286611502565b979650505050505050565b60608315611511575081611365565b8251156115215782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f589190611701565b803573ffffffffffffffffffffffffffffffffffffffff8116811461157957600080fd5b919050565b60006020828403121561158f578081fd5b61136582611555565b6000806000606084860312156115ac578182fd5b6115b584611555565b92506115c360208501611555565b9150604084013590509250925092565b6000602082840312156115e4578081fd5b8135611365816117fe565b600060208284031215611600578081fd5b8151611365816117fe565b6000806040838503121561161d578182fd5b8235611628816117fe565b91506020830135611638816117fe565b809150509250929050565b600060208284031215611654578081fd5b5035919050565b60006020828403121561166c578081fd5b5051919050565b600080600060608486031215611687578283fd5b833592506020840135611699816117fe565b91506116a760408501611555565b90509250925092565b6000806000606084860312156116c4578283fd5b833563ffffffff811681146116d7578384fd5b925061169960208501611555565b600082516116f781846020870161176a565b9190910192915050565b602081526000825180602084015261172081604085016020870161176a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008219821115611765576117656117cf565b500190565b60005b8381101561178557818101518382015260200161176d565b838111156111cc5750506000910152565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117c8576117c86117cf565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8015158114610bdb57600080fdfea26469706673582212207859c0d911412254a017aaa50a4177f7a9f18f0a1f3da4b98b4adfb748051ea164736f6c63430008040033";

type AuraStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuraStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuraStaking__factory extends ContractFactory {
  constructor(...args: AuraStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _operator: PromiseOrValue<string>,
    _bptToken: PromiseOrValue<string>,
    _booster: PromiseOrValue<string>,
    _rewardTokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AuraStaking> {
    return super.deploy(
      _operator,
      _bptToken,
      _booster,
      _rewardTokens,
      overrides || {}
    ) as Promise<AuraStaking>;
  }
  override getDeployTransaction(
    _operator: PromiseOrValue<string>,
    _bptToken: PromiseOrValue<string>,
    _booster: PromiseOrValue<string>,
    _rewardTokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _operator,
      _bptToken,
      _booster,
      _rewardTokens,
      overrides || {}
    );
  }
  override attach(address: string): AuraStaking {
    return super.attach(address) as AuraStaking;
  }
  override connect(signer: Signer): AuraStaking__factory {
    return super.connect(signer) as AuraStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuraStakingInterface {
    return new utils.Interface(_abi) as AuraStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AuraStaking {
    return new Contract(address, _abi, signerOrProvider) as AuraStaking;
  }
}
