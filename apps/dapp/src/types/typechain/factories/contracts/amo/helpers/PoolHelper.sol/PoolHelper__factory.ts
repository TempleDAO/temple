/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PoolHelper,
  PoolHelperInterface,
} from "../../../../../contracts/amo/helpers/PoolHelper.sol/PoolHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_balancerVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_temple",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stable",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bptToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_amo",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_templeIndexInPool",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "_balancerPoolId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "HighSlippage",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRebalanceDown",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRebalanceUp",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAMO",
    type: "error",
  },
  {
    inputs: [],
    name: "TPF_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balancerPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balancerVault",
    outputs: [
      {
        internalType: "contract AMO__IBalancerVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bptToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bptAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rebalancePercentageBoundLow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rebalancePercentageBoundUp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "postRebalanceSlippage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exitTokenIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "templePriceFloorNumerator",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "exitPoolToken",
        type: "address",
      },
    ],
    name: "exitPool",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalances",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spotPriceBeforeScaled",
        type: "uint256",
      },
    ],
    name: "getSlippage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSpotPriceScaled",
    outputs: [
      {
        internalType: "uint256",
        name: "spotPriceScaled",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTempleStableBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "templeBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stableBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "templePriceFloorNumerator",
        type: "uint256",
      },
    ],
    name: "isSpotPriceAboveTPF",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slippage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "templePriceFloorNumerator",
        type: "uint256",
      },
    ],
    name: "isSpotPriceAboveTPF",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rebalancePercentageBoundUp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "templePriceFloorNumerator",
        type: "uint256",
      },
    ],
    name: "isSpotPriceAboveTPFUpperBound",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "templePriceFloorNumerator",
        type: "uint256",
      },
    ],
    name: "isSpotPriceBelowTPF",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slippage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "templePriceFloorNumerator",
        type: "uint256",
      },
    ],
    name: "isSpotPriceBelowTPF",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rebalancePercentageBoundLow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "templePriceFloorNumerator",
        type: "uint256",
      },
    ],
    name: "isSpotPriceBelowTPFLowerBound",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBptOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rebalancePercentageBoundUp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rebalancePercentageBoundLow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "templePriceFloorNumerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "postRebalanceSlippage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "joinTokenIndex",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "joinPoolToken",
        type: "address",
      },
    ],
    name: "joinPool",
    outputs: [
      {
        internalType: "uint256",
        name: "bptOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stable",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "temple",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "templeIndexInBalancerPool",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rebalancePercentageBoundUp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "templePriceFloorNumerator",
        type: "uint256",
      },
    ],
    name: "willExitTakePriceAboveTPFUpperBound",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rebalancePercentageBoundLow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "templePriceFloorNumerator",
        type: "uint256",
      },
    ],
    name: "willJoinTakePriceBelowTPFLowerBound",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rebalancePercentageBoundLow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "templePriceFloorNumerator",
        type: "uint256",
      },
    ],
    name: "willStableExitTakePriceBelowTPFLowerBound",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rebalancePercentageBoundUp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "templePriceFloorNumerator",
        type: "uint256",
      },
    ],
    name: "willStableJoinTakePriceAboveTPFUpperBound",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040516200298d3803806200298d8339810160408190526200003591620000a3565b61014052606095861b6001600160601b031990811660805294861b851660c090815293861b851660e05291851b841660a05290931b909116610100521b6001600160c01b031916610120526200013d565b80516001600160a01b03811681146200009e57600080fd5b919050565b600080600080600080600060e0888a031215620000be578283fd5b620000c98862000086565b9650620000d96020890162000086565b9550620000e96040890162000086565b9450620000f96060890162000086565b9350620001096080890162000086565b60a08901519093506001600160401b038116811462000126578283fd5b8092505060c0880151905092959891949750929550565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205160c01c610140516126e0620002ad600039600081816103ca01528181610474015281816105ca01528181610bb401528181610ebe01526114f001526000818161027f015281816106af015281816106f401528181610847015281816108d001528181610d3101528181610fa301528181611037015281816110f00152818161112a015281816117b00152611b1d01526000818161042a015281816109c4015261124c01526000818161022e015281816117d70152818161183f01528181611b440152611bac01526000818161037d01528181610a1d015281816112a501528181611324015281816117f80152818161181e01528181611b650152611b8b015260008181610326015281816113e801526115800152600081816101e20152818161049d0152818161060b01528181610b8701528181610eff0152818161139201526114c301526126e06000f3fe608060405234801561001057600080fd5b50600436106101975760003560e01c80637a23bf60116100e3578063a4710a901161008c578063e456968e11610066578063e456968e146103ff578063ee67822914610412578063fa7065521461042557600080fd5b8063a4710a90146103b2578063dbbb64b9146103c5578063e3da5a29146103ec57600080fd5b80638c710d79116100bd5780638c710d791461036557806397cd9a3414610378578063a0bd1f0b1461039f57600080fd5b80637a23bf601461030e5780637b3a4759146103215780638b5d2a601461034857600080fd5b80633c4d2781116101455780635f44c1ce1161011f5780635f44c1ce146102d55780635ff40be0146102e85780636c33a890146102fb57600080fd5b80633c4d27811461027a57806346c0dc93146102ba57806355e16a69146102cd57600080fd5b806322be3de11161017657806322be3de1146102295780632f27cac81461025057806339d8be6f1461026757600080fd5b8062113e081461019c5780630a516c7a146101ba578063158274a5146101dd575b600080fd5b6101a461044c565b6040516101b1919061239f565b60405180910390f35b6101cd6101c836600461224a565b610555565b60405190151581526020016101b1565b6102047f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b1565b6102047f000000000000000000000000000000000000000000000000000000000000000081565b61025961271081565b6040519081526020016101b1565b6101cd61027536600461221a565b610568565b6102a17f000000000000000000000000000000000000000000000000000000000000000081565b60405167ffffffffffffffff90911681526020016101b1565b6101cd6102c836600461226b565b61057a565b6102596107d4565b6101cd6102e336600461226b565b610804565b6101cd6102f636600461224a565b610961565b6101cd61030936600461221a565b610998565b61025961031c366004612296565b6109aa565b6102047f000000000000000000000000000000000000000000000000000000000000000081565b610350610d17565b604080519283526020830191909152016101b1565b6101cd61037336600461226b565b610e6e565b6102047f000000000000000000000000000000000000000000000000000000000000000081565b6101cd6103ad36600461226b565b6110ad565b6102596103c036600461221a565b6111ef565b6102597f000000000000000000000000000000000000000000000000000000000000000081565b6102596103fa366004612296565b611232565b6101cd61040d36600461224a565b611621565b6101cd61042036600461224a565b611629565b6102047f000000000000000000000000000000000000000000000000000000000000000081565b6040517ff94d46680000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060048201526060907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063f94d46689060240160006040518083038186803b1580156104f457600080fd5b505afa158015610508573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261054e919081019061212b565b5092915050565b60006105618383610961565b9392505050565b6000816105736107d4565b1192915050565b60008061271061058a85856125a7565b610594919061256e565b905060006105a282856125e4565b6040517ff94d46680000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000600482015290915060009073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063f94d46689060240160006040518083038186803b15801561064d57600080fd5b505afa158015610661573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106a7919081019061212b565b5091505060007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166000146106e65760006106e9565b60015b60ff169050600088837f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1681518110610754577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516107669190612556565b90506000816127108585815181106107a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516107b991906125a7565b6107c3919061256e565b949094109998505050505050505050565b60008060006107e1610d17565b9092509050816107f3826127106125a7565b6107fd919061256e565b9250505090565b60008061271061081485856125a7565b61081e919061256e565b9050600061082c8483612556565b9050600061083861044c565b9050600067ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001615610873576000610876565b60015b60ff1690506000888383815181106108b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516108c99190612556565b90506000837f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1681518110610930577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516127108361094691906125a7565b610950919061256e565b949094119998505050505050505050565b60008061271061097184866125a7565b61097b919061256e565b90506109878184612556565b61098f6107d4565b11949350505050565b6000816109a36107d4565b1092915050565b60003373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610a1b576040517f1ae67f6800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610a7f57610a7a88878986611660565b610a8b565b610a8b888789866116e8565b6000610a988a8a87611733565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8516906370a082319060240160206040518083038186803b158015610b0357600080fd5b505afa158015610b17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3b9190612232565b90506000610b476107d4565b6040517f8bdb391300000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690638bdb391390610be2907f0000000000000000000000000000000000000000000000000000000000000000903090339089906004016123b2565b600060405180830381600087803b158015610bfc57600080fd5b505af1158015610c10573d6000803e3d6000fd5b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000925073ffffffffffffffffffffffffffffffffffffffff881691506370a082319060240160206040518083038186803b158015610c7c57600080fd5b505afa158015610c90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb49190612232565b9050828103945088610cc5836111ef565b67ffffffffffffffff161115610d07576040517f4c9b2c5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505098975050505050505050565b6000806000610d2461044c565b905067ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001615610ddf5780600181518110610d90577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015181600081518110610dd2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610e64565b80600081518110610e19577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015181600181518110610e5b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101515b9094909350915050565b600080612710610e7e85856125a7565b610e88919061256e565b90506000610e9682856125e4565b6040517ff94d46680000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000600482015290915060009073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063f94d46689060240160006040518083038186803b158015610f4157600080fd5b505afa158015610f55573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f9b919081019061212b565b5091505060007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16600014610fda576000610fdd565b60015b60ff16905060008883838151811061101e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015161103091906125e4565b90506000837f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1681518110611097577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151612710836107b991906125a7565b6000806127106110bd85856125a7565b6110c7919061256e565b905060006110d58483612556565b905060006110e161044c565b9050600067ffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161561111c57600061111f565b60015b60ff169050600088837f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff168151811061118a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015161119c91906125e4565b90506000816127108585815181106111dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015161094691906125a7565b6000806111fa6107d4565b9050600083821161120d57818403611211565b8382035b905083611220612710836125a7565b61122a919061256e565b949350505050565b60003373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146112a3576040517f1ae67f6800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146113075761130289888888611a0a565b611313565b61131389888888611a55565b60006113208a858b611aa0565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113b7576113b773ffffffffffffffffffffffffffffffffffffffff84167f00000000000000000000000000000000000000000000000000000000000000008c611d24565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561143f57600080fd5b505afa158015611453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114779190612232565b905060006114836107d4565b6040517fb95cac2800000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063b95cac289061151e907f0000000000000000000000000000000000000000000000000000000000000000903090339089906004016123b2565b600060405180830381600087803b15801561153857600080fd5b505af115801561154c573d6000803e3d6000fd5b50506040517f70a08231000000000000000000000000000000000000000000000000000000008152336004820152600092507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1691506370a082319060240160206040518083038186803b1580156115d857600080fd5b505afa1580156115ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116109190612232565b9050828103945087610cc5836111ef565b600061056183835b60008061271061163984866125a7565b611643919061256e565b905061164f81846125e4565b6116576107d4565b10949350505050565b61166a8382610555565b6116a0576040517ffab904b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116ab848383610e6e565b156116e2576040517f4c9b2c5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6116f28282611621565b611728576040517fb9e2326b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116ab8484836110ad565b61176060405180608001604052806060815260200160608152602001606081526020016000151581525090565b60408051600280825260608201835260009260208301908036833750506040805160028082526060820183529394506000939092509060208301908036833701905050905067ffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161561181c577f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061185f565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000005b83600081518110611899577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101846001815181106118da577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff938416602091820292909201015291169052831561190f57600085611913565b8460005b8260008151811061194d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018360018151811061198e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181019290925291909152604080516000928101839052908101889052606081018690526080015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815293855260208501929092525090820152600060608201529392505050565b611a148282611621565b611a4a576040517fb9e2326b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116ab848483610804565b611a5f8382610555565b611a95576040517ffab904b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116ab84838361057a565b611acd60405180608001604052806060815260200160608152602001606081526020016000151581525090565b60408051600280825260608201835260009260208301908036833750506040805160028082526060820183529394506000939092509060208301908036833701905050905067ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001615611b89577f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611bcc565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000005b83600081518110611c06577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010184600181518110611c47577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff9384166020918202929092010152911690528415611c7c57600086611c80565b8560005b82600081518110611cba577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010183600181518110611cfb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101828152508281525050506000600182866040516020016119be939291906124ba565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b158015611d9657600080fd5b505afa158015611daa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dce9190612232565b611dd89190612556565b6040805173ffffffffffffffffffffffffffffffffffffffff868116602483015260448083018590528351808403909101815260649092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401529293506116e2928792600091611ea691908516908490611f5a565b805190915015611f555780806020019051810190611ec491906121fa565b611f55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b505050565b606061122a84846000858573ffffffffffffffffffffffffffffffffffffffff85163b611fe3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611f4c565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161200c9190612383565b60006040518083038185875af1925050503d8060008114612049576040519150601f19603f3d011682016040523d82523d6000602084013e61204e565b606091505b509150915061205e828286612069565b979650505050505050565b60608315612078575081610561565b8251156120885782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f4c91906124a7565b600082601f8301126120cc578081fd5b815160206120e16120dc83612532565b6124e3565b80838252828201915082860187848660051b8901011115612100578586fd5b855b8581101561211e57815184529284019290840190600101612102565b5090979650505050505050565b60008060006060848603121561213f578283fd5b835167ffffffffffffffff80821115612156578485fd5b818601915086601f830112612169578485fd5b815160206121796120dc83612532565b8083825282820191508286018b848660051b890101111561219857898afd5b8996505b848710156121c35780516121af81612685565b83526001969096019591830191830161219c565b50918901519197509093505050808211156121dc578384fd5b506121e9868287016120bc565b925050604084015190509250925092565b60006020828403121561220b578081fd5b81518015158114610561578182fd5b60006020828403121561222b578081fd5b5035919050565b600060208284031215612243578081fd5b5051919050565b6000806040838503121561225c578182fd5b50508035926020909101359150565b60008060006060848603121561227f578283fd5b505081359360208301359350604090920135919050565b600080600080600080600080610100898b0312156122b2578384fd5b883597506020890135965060408901359550606089013594506080890135935060a0890135925060c0890135915060e08901356122ee81612685565b809150509295985092959890939650565b6000815180845260208085019450808401835b8381101561232e57815187529582019590820190600101612312565b509495945050505050565b600081518084526123518160208601602086016125fb565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516123958184602087016125fb565b9190910192915050565b60208152600061056160208301846122ff565b8481526000602073ffffffffffffffffffffffffffffffffffffffff80871682850152808616604085015260806060850152610100840185516080808701528181518084526101208801915085830193508692505b8083101561242957835185168252928501926001929092019190850190612407565b508488015194507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff809350838782030160a088015261246781866122ff565b94505050506040850151818584030160c08601526124858382612339565b92505050606084015161249c60e085018215159052565b509695505050505050565b6020815260006105616020830184612339565b8381526060602082015260006124d360608301856122ff565b9050826040830152949350505050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561252a5761252a612656565b604052919050565b600067ffffffffffffffff82111561254c5761254c612656565b5060051b60200190565b6000821982111561256957612569612627565b500190565b6000826125a2577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156125df576125df612627565b500290565b6000828210156125f6576125f6612627565b500390565b60005b838110156126165781810151838201526020016125fe565b838111156116e25750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff811681146126a757600080fd5b5056fea2646970667358221220e8206f190e5bce0b2dcc1b62c09c7a8a264ce826b5310c8617e8256bf1390fb964736f6c63430008040033";

type PoolHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolHelper__factory extends ContractFactory {
  constructor(...args: PoolHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _balancerVault: PromiseOrValue<string>,
    _temple: PromiseOrValue<string>,
    _stable: PromiseOrValue<string>,
    _bptToken: PromiseOrValue<string>,
    _amo: PromiseOrValue<string>,
    _templeIndexInPool: PromiseOrValue<BigNumberish>,
    _balancerPoolId: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolHelper> {
    return super.deploy(
      _balancerVault,
      _temple,
      _stable,
      _bptToken,
      _amo,
      _templeIndexInPool,
      _balancerPoolId,
      overrides || {}
    ) as Promise<PoolHelper>;
  }
  override getDeployTransaction(
    _balancerVault: PromiseOrValue<string>,
    _temple: PromiseOrValue<string>,
    _stable: PromiseOrValue<string>,
    _bptToken: PromiseOrValue<string>,
    _amo: PromiseOrValue<string>,
    _templeIndexInPool: PromiseOrValue<BigNumberish>,
    _balancerPoolId: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _balancerVault,
      _temple,
      _stable,
      _bptToken,
      _amo,
      _templeIndexInPool,
      _balancerPoolId,
      overrides || {}
    );
  }
  override attach(address: string): PoolHelper {
    return super.attach(address) as PoolHelper;
  }
  override connect(signer: Signer): PoolHelper__factory {
    return super.connect(signer) as PoolHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolHelperInterface {
    return new utils.Interface(_abi) as PoolHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolHelper {
    return new Contract(address, _abi, signerOrProvider) as PoolHelper;
  }
}
