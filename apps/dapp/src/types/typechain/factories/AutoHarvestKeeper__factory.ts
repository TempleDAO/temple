/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AutoHarvestKeeper,
  AutoHarvestKeeperInterface,
} from "../AutoHarvestKeeper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract TempleTreasury",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "contract TreasuryManagementProxy",
        name: "_treasuryManagementProxy",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_stablec",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "checkData",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161065e38038061065e83398101604081905261002f91610071565b600080546001600160a01b039485166001600160a01b0319918216179091556001805493851693821693909317909255600280549190931691161790556100d5565b600080600060608486031215610085578283fd5b8351610090816100bd565b60208501519093506100a1816100bd565b60408501519092506100b2816100bd565b809150509250925092565b6001600160a01b03811681146100d257600080fd5b50565b61057a806100e46000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634585e33b1461003b5780636e04ff0d14610050575b600080fd5b61004e610049366004610386565b61007a565b005b61006361005e366004610386565b610100565b60405161007192919061042e565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634641257d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100e457600080fd5b505af11580156100f8573d6000803e3d6000fd5b505050505050565b60008054604080517fa340bae20000000000000000000000000000000000000000000000000000000081528151606093859373ffffffffffffffffffffffffffffffffffffffff9091169263a340bae29260048083019392829003018186803b15801561016c57600080fd5b505afa158015610180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a4919061040b565b5090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7d93b5a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561021157600080fd5b505afa158015610225573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610249919061035f565b600254600080546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015293945090929116906370a082319060240160206040518083038186803b1580156102bc57600080fd5b505afa1580156102d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f491906103f3565b90508180156103195750606461030b8460666104e2565b61031591906104a9565b8110155b945086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250979a92995091975050505050505050565b600060208284031215610370578081fd5b8151801515811461037f578182fd5b9392505050565b60008060208385031215610398578081fd5b823567ffffffffffffffff808211156103af578283fd5b818501915085601f8301126103c2578283fd5b8135818111156103d0578384fd5b8660208285010111156103e1578384fd5b60209290920196919550909350505050565b600060208284031215610404578081fd5b5051919050565b6000806040838503121561041d578182fd5b505080516020909101519092909150565b8215158152600060206040818401528351806040850152825b8181101561046357858101830151858201606001528201610447565b818111156104745783606083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01692909201606001949350505050565b6000826104dd577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561053f577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50029056fea26469706673582212209d846807e6f0c8f34fecf8df978f68d03057a29bab8206814b45a5193e52d21b64736f6c63430008040033";

export class AutoHarvestKeeper__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _treasury: string,
    _treasuryManagementProxy: string,
    _stablec: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AutoHarvestKeeper> {
    return super.deploy(
      _treasury,
      _treasuryManagementProxy,
      _stablec,
      overrides || {}
    ) as Promise<AutoHarvestKeeper>;
  }
  getDeployTransaction(
    _treasury: string,
    _treasuryManagementProxy: string,
    _stablec: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasury,
      _treasuryManagementProxy,
      _stablec,
      overrides || {}
    );
  }
  attach(address: string): AutoHarvestKeeper {
    return super.attach(address) as AutoHarvestKeeper;
  }
  connect(signer: Signer): AutoHarvestKeeper__factory {
    return super.connect(signer) as AutoHarvestKeeper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutoHarvestKeeperInterface {
    return new utils.Interface(_abi) as AutoHarvestKeeperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutoHarvestKeeper {
    return new Contract(address, _abi, signerOrProvider) as AutoHarvestKeeper;
  }
}
