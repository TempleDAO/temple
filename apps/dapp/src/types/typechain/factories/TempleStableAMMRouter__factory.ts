/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TempleStableAMMRouter,
  TempleStableAMMRouterInterface,
} from "../TempleStableAMMRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract TempleERC20Token",
        name: "_templeToken",
        type: "address",
      },
      {
        internalType: "contract ITreasuryIV",
        name: "_templeTreasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_defendStable",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stable",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "addPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defendStable",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stable",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_defendStable",
        type: "address",
      },
    ],
    name: "setDefendStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITreasuryIV",
        name: "_templeTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stable",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactStableForTemple",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swapExactStableForTempleQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stable",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTempleForStable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swapExactTempleForStableQuote",
    outputs: [
      {
        internalType: "bool",
        name: "priceBelowIV",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "templeToken",
    outputs: [
      {
        internalType: "contract TempleERC20Token",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "templeTreasury",
    outputs: [
      {
        internalType: "contract ITreasuryIV",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenPair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620025e2380380620025e28339810160408190526200003491620000d5565b6200003f3362000085565b60609290921b6001600160601b031916608052600280546001600160a01b03199081166001600160a01b0393841617909155600380549091169190921617905562000141565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060608486031215620000ea578283fd5b8351620000f78162000128565b60208501519093506200010a8162000128565b60408501519092506200011d8162000128565b809150509250925092565b6001600160a01b03811681146200013e57600080fd5b50565b60805160601c61246d62000175600039600081816102dd015281816106e90152818161151b015261164b015261246d6000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80638da5cb5b116100cd578063c4b58a1e11610081578063e94e36b911610066578063e94e36b914610358578063f0f442601461036b578063f2fde38b1461037e57600080fd5b8063c4b58a1e14610332578063d9caed121461034557600080fd5b8063b1a9069c116100b2578063b1a9069c146102d8578063b272d5a2146102ff578063b6f3e0871461031f57600080fd5b80638da5cb5b146102a7578063ad615dec146102c557600080fd5b80632c908de5116101245780636727a70b116101095780636727a70b14610262578063715018a61461028a578063854f71061461029457600080fd5b80632c908de5146102255780634dfe82a51461023857600080fd5b8063054d50d41461015657806314e920981461017c5780631cc6391e146101aa57806328fef2a114610205575b600080fd5b61016961016436600461217e565b610391565b6040519081526020015b60405180910390f35b61018f61018a366004612206565b610511565b60408051938452602084019290925290820152606001610173565b6101e06101b8366004611fc5565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610173565b6002546101e09073ffffffffffffffffffffffffffffffffffffffff1681565b610169610233366004612059565b6107ce565b61024b610246366004612059565b61088a565b604080519215158352602083019190915201610173565b6102756102703660046121a9565b610a26565b60408051928352602083019190915201610173565b610292610d27565b005b6101696102a236600461212d565b610d3b565b60005473ffffffffffffffffffffffffffffffffffffffff166101e0565b6101696102d336600461217e565b610fa9565b6101e07f000000000000000000000000000000000000000000000000000000000000000081565b6003546101e09073ffffffffffffffffffffffffffffffffffffffff1681565b61029261032d366004611fe1565b6110f3565b610292610340366004611fc5565b61114e565b610292610353366004612019565b61119d565b61016961036636600461212d565b61131d565b610292610379366004611fc5565b611717565b61029261038c366004611fc5565b611766565b6000808411610427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201527f4e5055545f414d4f554e5400000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000831180156104375750600082115b6104c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c60448201527f4951554944495459000000000000000000000000000000000000000000000000606482015260840161041e565b60006104d1856103e361237d565b905060006104df848361237d565b90506000826104f0876103e861237d565b6104fa919061232c565b90506105068183612344565b979650505050505050565b60008060008342811015610581576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f54656d706c65537461626c65414d4d526f757465723a20455850495245440000604482015260640161041e565b73ffffffffffffffffffffffffffffffffffffffff8088166000908152600160205260409020541680610636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f54656d706c65537461626c65414d4d526f757465723a20554e535550504f525460448201527f45445f5041495200000000000000000000000000000000000000000000000000606482015260840161041e565b898c101580156106465750888b10155b6106d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f54656d706c65537461626c65414d4d526f757465723a204d45565f455854524160448201527f435441424c450000000000000000000000000000000000000000000000000000606482015260840161041e565b6106df8c8c8c8c8561181d565b90955093506107107f0000000000000000000000000000000000000000000000000000000000000000338388611a7f565b61071c88338387611a7f565b6040517f6a62784200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152821690636a62784290602401602060405180830381600087803b15801561078557600080fd5b505af1158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd91906120f2565b925050509750975097945050505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561081957600080fd5b505afa15801561082d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085191906120a4565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150610881848284610391565b95945050505050565b6000806000808573ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156108d657600080fd5b505afa1580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090e91906120a4565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a340bae26040518163ffffffff1660e01b8152600401604080518083038186803b15801561099d57600080fd5b505afa1580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d5919061210a565b9150915060006109e6888686610391565b90506000826109f5858b61237d565b6109ff9190612344565b905081811115610a155780965060019750610a19565b8196505b5050505050509250929050565b6000808242811015610a94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f54656d706c65537461626c65414d4d526f757465723a20455850495245440000604482015260640161041e565b73ffffffffffffffffffffffffffffffffffffffff8087166000908152600160205260409020541680610b49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f54656d706c65537461626c65414d4d526f757465723a20554e535550504f525460448201527f45445f5041495200000000000000000000000000000000000000000000000000606482015260840161041e565b610b558133838d611a7f565b6040517f89afcb4400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301528216906389afcb44906024016040805180830381600087803b158015610bbd57600080fd5b505af1158015610bd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf5919061210a565b909450925088841015610c8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f54656d706c65537461626c65414d4d526f757465723a20494e5355464649434960448201527f454e545f54454d504c4500000000000000000000000000000000000000000000606482015260840161041e565b87831015610d1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f54656d706c6546726178414d4d526f757465723a20494e53554646494349454e60448201527f545f465241580000000000000000000000000000000000000000000000000000606482015260840161041e565b5050965096945050505050565b610d2f611b5b565b610d396000611bdc565b565b60008142811015610da8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f54656d706c65537461626c65414d4d526f757465723a20455850495245440000604482015260640161041e565b73ffffffffffffffffffffffffffffffffffffffff8086166000908152600160205260409020541680610e5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f54656d706c65537461626c65414d4d526f757465723a20554e535550504f525460448201527f45445f5041495200000000000000000000000000000000000000000000000000606482015260840161041e565b6000610e69828a6107ce565b905087811015610efb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f54656d706c65537461626c65414d4d526f757465723a20494e5355464649434960448201527f454e545f4f55545055545f414d4f554e54000000000000000000000000000000606482015260840161041e565b610f078733848c611a7f565b60408051600080825260208201928390527f022c0d9f0000000000000000000000000000000000000000000000000000000090925273ffffffffffffffffffffffffffffffffffffffff84169163022c0d9f91610f6b9185918b90602481016122d4565b600060405180830381600087803b158015610f8557600080fd5b505af1158015610f99573d6000803e3d6000fd5b5050505050505095945050505050565b600080841161103a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4160448201527f4d4f554e54000000000000000000000000000000000000000000000000000000606482015260840161041e565b60008311801561104a5750600082115b6110d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c60448201527f4951554944495459000000000000000000000000000000000000000000000000606482015260840161041e565b826110e1838661237d565b6110eb9190612344565b949350505050565b6110fb611b5b565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055565b611156611b5b565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6111a5611b5b565b73ffffffffffffffffffffffffffffffffffffffff8216611222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f746f2061646472657373207a65726f0000000000000000000000000000000000604482015260640161041e565b73ffffffffffffffffffffffffffffffffffffffff831661130d5760008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611297576040519150601f19603f3d011682016040523d82523d6000602084013e61129c565b606091505b5050905080611307576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f73656e64206661696c6564000000000000000000000000000000000000000000604482015260640161041e565b50505050565b611318838383611c51565b505050565b6000814281101561138a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f54656d706c65537461626c65414d4d526f757465723a20455850495245440000604482015260640161041e565b73ffffffffffffffffffffffffffffffffffffffff808616600090815260016020526040902054168061143f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f54656d706c65537461626c65414d4d526f757465723a20554e535550504f525460448201527f45445f5041495200000000000000000000000000000000000000000000000000606482015260840161041e565b60008061144c838b61088a565b9150915081156115b657888110156114e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f54656d706c65537461626c65414d4d526f757465723a20494e5355464649434960448201527f454e545f4f55545055545f414d4f554e54000000000000000000000000000000606482015260840161041e565b6040517f79cc6790000000000000000000000000000000000000000000000000000000008152336004820152602481018b90527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906379cc679090604401600060405180830381600087803b15801561157457600080fd5b505af1158015611588573d6000803e3d6000fd5b50506003546115b1925073ffffffffffffffffffffffffffffffffffffffff1690508883611c51565b61170a565b88811015611646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f54656d706c65537461626c65414d4d526f757465723a20494e5355464649434960448201527f454e545f4f55545055545f414d4f554e54000000000000000000000000000000606482015260840161041e565b6116727f000000000000000000000000000000000000000000000000000000000000000033858d611a7f565b60408051600080825260208201928390527f022c0d9f0000000000000000000000000000000000000000000000000000000090925273ffffffffffffffffffffffffffffffffffffffff85169163022c0d9f916116d7919085908c90602481016122d4565b600060405180830381600087803b1580156116f157600080fd5b505af1158015611705573d6000803e3d6000fd5b505050505b9998505050505050505050565b61171f611b5b565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61176e611b5b565b73ffffffffffffffffffffffffffffffffffffffff8116611811576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161041e565b61181a81611bdc565b50565b6000806000808473ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561186957600080fd5b505afa15801561187d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a191906120a4565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508160001480156118d4575080155b156118e457889350879250611a73565b60006118f18a8484610fa9565b9050888111611995578681101561198a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f54656d706c65537461626c65414d4d526f757465723a20494e5355464649434960448201527f454e545f535441424c4500000000000000000000000000000000000000000000606482015260840161041e565b899450925082611a71565b60006119a28a8486610fa9565b90508a8111156119db577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b88811015611a6b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f54656d706c65537461626c65414d4d526f757465723a20494e5355464649434960448201527f454e545f54454d504c4500000000000000000000000000000000000000000000606482015260840161041e565b94508893505b505b50509550959350505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526113079085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611ca7565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161041e565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526113189084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611ad9565b6000611d09826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611db39092919063ffffffff16565b8051909150156113185780806020019051810190611d279190612084565b611318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161041e565b60606110eb8484600085611dc9565b9392505050565b606082471015611e5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161041e565b73ffffffffffffffffffffffffffffffffffffffff85163b611ed9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161041e565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611f0291906122b8565b60006040518083038185875af1925050503d8060008114611f3f576040519150601f19603f3d011682016040523d82523d6000602084013e611f44565b606091505b509150915061050682828660608315611f5e575081611dc2565b825115611f6e5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041e9190612319565b80516dffffffffffffffffffffffffffff81168114611fc057600080fd5b919050565b600060208284031215611fd6578081fd5b8135611dc281612415565b60008060408385031215611ff3578081fd5b8235611ffe81612415565b9150602083013561200e81612415565b809150509250929050565b60008060006060848603121561202d578081fd5b833561203881612415565b9250602084013561204881612415565b929592945050506040919091013590565b6000806040838503121561206b578182fd5b823561207681612415565b946020939093013593505050565b600060208284031215612095578081fd5b81518015158114611dc2578182fd5b6000806000606084860312156120b8578283fd5b6120c184611fa2565b92506120cf60208501611fa2565b9150604084015163ffffffff811681146120e7578182fd5b809150509250925092565b600060208284031215612103578081fd5b5051919050565b6000806040838503121561211c578182fd5b505080516020909101519092909150565b600080600080600060a08688031215612144578081fd5b8535945060208601359350604086013561215d81612415565b9250606086013561216d81612415565b949793965091946080013592915050565b600080600060608486031215612192578283fd5b505081359360208301359350604090920135919050565b60008060008060008060c087890312156121c1578081fd5b86359550602087013594506040870135935060608701356121e181612415565b925060808701356121f181612415565b8092505060a087013590509295509295509295565b600080600080600080600060e0888a031215612220578081fd5b87359650602088013595506040880135945060608801359350608088013561224781612415565b925060a088013561225781612415565b8092505060c0880135905092959891949750929550565b600081518084526122868160208601602086016123ba565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516122ca8184602087016123ba565b9190910192915050565b84815283602082015273ffffffffffffffffffffffffffffffffffffffff8316604082015260806060820152600061230f608083018461226e565b9695505050505050565b602081526000611dc2602083018461226e565b6000821982111561233f5761233f6123e6565b500190565b600082612378577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156123b5576123b56123e6565b500290565b60005b838110156123d55781810151838201526020016123bd565b838111156113075750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461181a57600080fdfea26469706673582212203a7653591b2bc70b78aae45651c166a9076f1a56236aef7408d9a4132acc53ca64736f6c63430008040033";

type TempleStableAMMRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TempleStableAMMRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TempleStableAMMRouter__factory extends ContractFactory {
  constructor(...args: TempleStableAMMRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TempleStableAMMRouter";
  }

  deploy(
    _templeToken: string,
    _templeTreasury: string,
    _defendStable: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TempleStableAMMRouter> {
    return super.deploy(
      _templeToken,
      _templeTreasury,
      _defendStable,
      overrides || {}
    ) as Promise<TempleStableAMMRouter>;
  }
  getDeployTransaction(
    _templeToken: string,
    _templeTreasury: string,
    _defendStable: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _templeToken,
      _templeTreasury,
      _defendStable,
      overrides || {}
    );
  }
  attach(address: string): TempleStableAMMRouter {
    return super.attach(address) as TempleStableAMMRouter;
  }
  connect(signer: Signer): TempleStableAMMRouter__factory {
    return super.connect(signer) as TempleStableAMMRouter__factory;
  }
  static readonly contractName: "TempleStableAMMRouter";
  public readonly contractName: "TempleStableAMMRouter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TempleStableAMMRouterInterface {
    return new utils.Interface(_abi) as TempleStableAMMRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TempleStableAMMRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TempleStableAMMRouter;
  }
}
