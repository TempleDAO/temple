/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LockedOGTemple,
  LockedOGTempleInterface,
} from "../LockedOGTemple";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract OGTemple",
        name: "_ogTempleToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "increasedByOgTemple",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalLockedOgTemple",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockedUntil",
        type: "uint256",
      },
    ],
    name: "Lock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unlock",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountOGTemple",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockedUntilTimestamp",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountOGTemple",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockDelaySeconds",
        type: "uint256",
      },
    ],
    name: "lockFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ogTempleLocked",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedUntilTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ogTempleToken",
    outputs: [
      {
        internalType: "contract OGTemple",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountOGTemple",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountOGTemple",
        type: "uint256",
      },
    ],
    name: "unlockFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610afb380380610afb83398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610a6a806100916000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063bc376bbe11610050578063bc376bbe146100b2578063ea3fa316146100c5578063fdf30edc1461010657600080fd5b80631338736f146100775780636198e3391461008c57806383e25f8a1461009f575b600080fd5b61008a61008536600461091c565b61014b565b005b61008a61009a366004610904565b61015a565b61008a6100ad3660046108b2565b610167565b61008a6100c0366004610889565b610258565b6100ec6100d336600461086f565b6000602081905290815260409020805460019091015482565b604080519283526020830191909152015b60405180910390f35b6001546101269073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100fd565b610156338383610167565b5050565b6101643382610258565b50565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604081208054909184918391906101a09084906109aa565b90915550600090506101b283426109aa565b905081600101548111156101c857600182018190555b6001546101ed9073ffffffffffffffffffffffffffffffffffffffff16863087610411565b815460018301546040805173ffffffffffffffffffffffffffffffffffffffff89168152602081018890529081019290925260608201527f0e31f07bae79135368ff475cf6c7f6abb31e0fd731e03c18ad425bd9406cf0c09060800160405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020600181015442116102ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4c6f636b65644f4754656d706c653a205374696c6c204c6f636b65640000000060448201526064015b60405180910390fd5b8054821115610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f4c6f636b65644f4754656d706c653a2063616e277420756e6c6f636b206d6f7260448201527f65207468616e206f726967696e616c6c79206c6f636b6564000000000000000060648201526084016102e6565b8181600001600082825461039491906109c2565b90915550506001546103bd9073ffffffffffffffffffffffffffffffffffffffff1684846104f3565b6040805173ffffffffffffffffffffffffffffffffffffffff85168152602081018490527f6381d9813cabeb57471b5a7e05078e64845ccdb563146a6911d536f24ce960f1910160405180910390a1505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526104ed9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261054e565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526105499084907fa9059cbb000000000000000000000000000000000000000000000000000000009060640161046b565b505050565b60006105b0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661065a9092919063ffffffff16565b80519091501561054957808060200190518101906105ce91906108e4565b610549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016102e6565b60606106698484600085610673565b90505b9392505050565b606082471015610705576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016102e6565b843b61076d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102e6565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610796919061093d565b60006040518083038185875af1925050503d80600081146107d3576040519150601f19603f3d011682016040523d82523d6000602084013e6107d8565b606091505b50915091506107e88282866107f3565b979650505050505050565b6060831561080257508161066c565b8251156108125782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e69190610959565b803573ffffffffffffffffffffffffffffffffffffffff8116811461086a57600080fd5b919050565b600060208284031215610880578081fd5b61066c82610846565b6000806040838503121561089b578081fd5b6108a483610846565b946020939093013593505050565b6000806000606084860312156108c6578081fd5b6108cf84610846565b95602085013595506040909401359392505050565b6000602082840312156108f5578081fd5b8151801515811461066c578182fd5b600060208284031215610915578081fd5b5035919050565b6000806040838503121561092e578182fd5b50508035926020909101359150565b6000825161094f8184602087016109d9565b9190910192915050565b60208152600082518060208401526109788160408501602087016109d9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600082198211156109bd576109bd610a05565b500190565b6000828210156109d4576109d4610a05565b500390565b60005b838110156109f45781810151838201526020016109dc565b838111156104ed5750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122027438dd5b18d67ff3d6f4f3da676c0b2fa63a540ec9ab2e98cfc6de0ad36bae464736f6c63430008040033";

type LockedOGTempleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockedOGTempleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LockedOGTemple__factory extends ContractFactory {
  constructor(...args: LockedOGTempleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LockedOGTemple";
  }

  deploy(
    _ogTempleToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LockedOGTemple> {
    return super.deploy(
      _ogTempleToken,
      overrides || {}
    ) as Promise<LockedOGTemple>;
  }
  getDeployTransaction(
    _ogTempleToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ogTempleToken, overrides || {});
  }
  attach(address: string): LockedOGTemple {
    return super.attach(address) as LockedOGTemple;
  }
  connect(signer: Signer): LockedOGTemple__factory {
    return super.connect(signer) as LockedOGTemple__factory;
  }
  static readonly contractName: "LockedOGTemple";
  public readonly contractName: "LockedOGTemple";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockedOGTempleInterface {
    return new utils.Interface(_abi) as LockedOGTempleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LockedOGTemple {
    return new Contract(address, _abi, signerOrProvider) as LockedOGTemple;
  }
}
