/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TempleIVSwap, TempleIVSwapInterface } from "../TempleIVSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract TempleERC20Token",
        name: "_templeToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_stablecToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "frax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "temple",
            type: "uint256",
          },
        ],
        internalType: "struct TempleIVSwap.Price",
        name: "_iv",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnTemple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "iv",
    outputs: [
      {
        internalType: "uint256",
        name: "frax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "temple",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "temple",
        type: "uint256",
      },
    ],
    name: "setIV",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTempleForIV",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "templeToken",
    outputs: [
      {
        internalType: "contract TempleERC20Token",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516110ce3803806110ce83398101604081905261002f916100b4565b61003833610064565b6001600160601b0319606093841b81166080529190921b1660a05280516001556020015160025561015c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600083850360808112156100c9578384fd5b84516100d481610144565b60208601519094506100e581610144565b92506040603f19820112156100f8578182fd5b50604080519081016001600160401b038111828210171561012757634e487b7160e01b83526041600452602483fd5b604090815285015181526060909401516020850152509093909250565b6001600160a01b038116811461015957600080fd5b50565b60805160601c60a05160601c610f3361019b6000396000818160c801526104ca01526000818161018a015281816103b301526104970152610f336000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063a53759c111610076578063c0a5b1461161005b578063c0a5b146146101ac578063d9caed12146101bf578063f2fde38b146101d257600080fd5b8063a53759c114610172578063b1a9069c1461018557600080fd5b80635f643358116100a75780635f64335814610129578063715018a61461014c5780638da5cb5b1461015457600080fd5b8063140ad597146100c3578063187c7ca214610114575b600080fd5b6100ea7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610127610122366004610da8565b6101e5565b005b600154600254610137919082565b6040805192835260208301919091520161010b565b610127610276565b60005473ffffffffffffffffffffffffffffffffffffffff166100ea565b610127610180366004610d6c565b610303565b6100ea7f000000000000000000000000000000000000000000000000000000000000000081565b6101276101ba366004610d84565b610427565b6101276101cd366004610d11565b61050c565b6101276101e0366004610cf7565b6106ff565b60005473ffffffffffffffffffffffffffffffffffffffff16331461026b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600191909155600255565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610262565b610301600061082f565b565b60005473ffffffffffffffffffffffffffffffffffffffff163314610384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610262565b6040517f42966c68000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906342966c6890602401600060405180830381600087803b15801561040c57600080fd5b505af1158015610420573d6000803e3d6000fd5b5050505050565b8042811015610492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f54656d706c654956537761703a204558504952454400000000000000000000006044820152606401610262565b6104be7f00000000000000000000000000000000000000000000000000000000000000003330876108a4565b600254600154610506917f0000000000000000000000000000000000000000000000000000000000000000918691906104f79089610e6f565b6105019190610e36565b610980565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461058d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610262565b73ffffffffffffffffffffffffffffffffffffffff821661060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f746f2061646472657373207a65726f00000000000000000000000000000000006044820152606401610262565b73ffffffffffffffffffffffffffffffffffffffff83166106ef5760008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461067f576040519150601f19603f3d011682016040523d82523d6000602084013e610684565b606091505b5050905080610506576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f73656e64206661696c65640000000000000000000000000000000000000000006044820152606401610262565b6106fa838383610980565b505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610780576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610262565b73ffffffffffffffffffffffffffffffffffffffff8116610823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610262565b61082c8161082f565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526105069085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526109d6565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526106fa9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016108fe565b6000610a38826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610ae29092919063ffffffff16565b8051909150156106fa5780806020019051810190610a569190610d4c565b6106fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610262565b6060610af18484600085610afb565b90505b9392505050565b606082471015610b8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610262565b843b610bf5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610262565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610c1e9190610dc9565b60006040518083038185875af1925050503d8060008114610c5b576040519150601f19603f3d011682016040523d82523d6000602084013e610c60565b606091505b5091509150610c70828286610c7b565b979650505050505050565b60608315610c8a575081610af4565b825115610c9a5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102629190610de5565b803573ffffffffffffffffffffffffffffffffffffffff81168114610cf257600080fd5b919050565b600060208284031215610d08578081fd5b610af482610cce565b600080600060608486031215610d25578182fd5b610d2e84610cce565b9250610d3c60208501610cce565b9150604084013590509250925092565b600060208284031215610d5d578081fd5b81518015158114610af4578182fd5b600060208284031215610d7d578081fd5b5035919050565b600080600060608486031215610d98578283fd5b83359250610d3c60208501610cce565b60008060408385031215610dba578182fd5b50508035926020909101359150565b60008251610ddb818460208701610ed1565b9190910192915050565b6020815260008251806020840152610e04816040850160208701610ed1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600082610e6a577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ecc577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500290565b60005b83811015610eec578181015183820152602001610ed4565b83811115610506575050600091015256fea264697066735822122082e20165e25f56c38d5a75d355e4bd814baa4099b2acc9a6b55989ba696b064164736f6c63430008040033";

type TempleIVSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TempleIVSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TempleIVSwap__factory extends ContractFactory {
  constructor(...args: TempleIVSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TempleIVSwap";
  }

  deploy(
    _templeToken: string,
    _stablecToken: string,
    _iv: TempleIVSwap.PriceStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TempleIVSwap> {
    return super.deploy(
      _templeToken,
      _stablecToken,
      _iv,
      overrides || {}
    ) as Promise<TempleIVSwap>;
  }
  getDeployTransaction(
    _templeToken: string,
    _stablecToken: string,
    _iv: TempleIVSwap.PriceStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _templeToken,
      _stablecToken,
      _iv,
      overrides || {}
    );
  }
  attach(address: string): TempleIVSwap {
    return super.attach(address) as TempleIVSwap;
  }
  connect(signer: Signer): TempleIVSwap__factory {
    return super.connect(signer) as TempleIVSwap__factory;
  }
  static readonly contractName: "TempleIVSwap";
  public readonly contractName: "TempleIVSwap";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TempleIVSwapInterface {
    return new utils.Interface(_abi) as TempleIVSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TempleIVSwap {
    return new Contract(address, _abi, signerOrProvider) as TempleIVSwap;
  }
}
