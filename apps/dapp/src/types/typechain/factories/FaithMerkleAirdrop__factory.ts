/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FaithMerkleAirdrop,
  FaithMerkleAirdropInterface,
} from "../FaithMerkleAirdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IFaith",
        name: "_faith",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "faith",
    outputs: [
      {
        internalType: "contract IFaith",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getClaimPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_claimEndTime",
        type: "uint256",
      },
    ],
    name: "setClaimEndTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_claimStartTime",
        type: "uint256",
      },
    ],
    name: "setClaimStartTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610c9a380380610c9a83398101604081905261002f9161005e565b60008054336001600160a01b031990911617905560609190911b6001600160601b03191660805260a052610096565b60008060408385031215610070578182fd5b82516001600160a01b0381168114610086578283fd5b6020939093015192949293505050565b60805160601c60a051610bcf6100cb6000396000818160e801526105b601526000818161012201526106d10152610bcf6000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80636e5640c6116100765780639a3aa7661161005b5780639a3aa766146101895780639e34070f1461019c578063a261dc9e146101bf57600080fd5b80636e5640c61461011d5780638da5cb5b1461016957600080fd5b806313af4035146100a85780632533a5f6146100bd5780632e7ba6ef146100d05780632eb4a7ab146100e3575b600080fd5b6100bb6100b6366004610a19565b6101da565b005b6100bb6100cb366004610a3a565b610324565b6100bb6100de366004610a52565b610414565b61010a7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101447f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610114565b6000546101449073ffffffffffffffffffffffffffffffffffffffff1681565b6100bb610197366004610a3a565b61078c565b6101af6101aa366004610a3a565b610888565b6040519015158152602001610114565b60015460025460408051928352602083019190915201610114565b60005473ffffffffffffffffffffffffffffffffffffffff163314610260576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f6e6f74206f776e6572000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166102dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f61646472657373207a65726f00000000000000000000000000000000000000006044820152606401610257565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f6e6f74206f776e657200000000000000000000000000000000000000000000006044820152606401610257565b4281101561040f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f696e76616c69642074696d6500000000000000000000000000000000000000006044820152606401610257565b600155565b6001544210158015610427575060025442105b61048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f696e76616c696420636c61696d20706572696f640000000000000000000000006044820152606401610257565b61049685610888565b15610523576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f4d65726b6c654469737472696275746f723a2044726f7020616c72656164792060448201527f636c61696d65642e0000000000000000000000000000000000000000000000006064820152608401610257565b60408051602081018790527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606087901b1691810191909152605481018490526000906074016040516020818303038152906040528051906020012090506105e18383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506108c99050565b61066d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f6660448201527f2e000000000000000000000000000000000000000000000000000000000000006064820152608401610257565b610676866108df565b6040517f64a3bc5700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301526dffffffffffffffffffffffffffff861660248301527f000000000000000000000000000000000000000000000000000000000000000016906364a3bc5790604401600060405180830381600087803b15801561071557600080fd5b505af1158015610729573d6000803e3d6000fd5b50506040805189815273ffffffffffffffffffffffffffffffffffffffff891660208201529081018790527f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed0269250606001905060405180910390a1505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461080d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f6e6f74206f776e657200000000000000000000000000000000000000000000006044820152606401610257565b8060015410801561081d57504281115b610883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f696e76616c69642074696d6500000000000000000000000000000000000000006044820152606401610257565b600255565b60008061089761010084610ae4565b905060006108a761010085610b56565b60009283526003602052604090922054600190921b9182169091149392505050565b6000826108d6858461091d565b14949350505050565b60006108ed61010083610ae4565b905060006108fd61010084610b56565b6000928352600360205260409092208054600190931b9092179091555050565b600081815b84518110156109e8576000858281518110610966577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508083116109a85760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506109d5565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806109e081610af8565b915050610922565b509392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a1457600080fd5b919050565b600060208284031215610a2a578081fd5b610a33826109f0565b9392505050565b600060208284031215610a4b578081fd5b5035919050565b600080600080600060808688031215610a69578081fd5b85359450610a79602087016109f0565b935060408601359250606086013567ffffffffffffffff80821115610a9c578283fd5b818801915088601f830112610aaf578283fd5b813581811115610abd578384fd5b8960208260051b8501011115610ad1578384fd5b9699959850939650602001949392505050565b600082610af357610af3610b6a565b500490565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b4f577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b5060010190565b600082610b6557610b65610b6a565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122026dceed7b2f4ad890a4c9b26e72ec0fcf72ceb02d056f944f6c135708c9ca07d64736f6c63430008040033";

type FaithMerkleAirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FaithMerkleAirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FaithMerkleAirdrop__factory extends ContractFactory {
  constructor(...args: FaithMerkleAirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FaithMerkleAirdrop";
  }

  deploy(
    _faith: string,
    _merkleRoot: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FaithMerkleAirdrop> {
    return super.deploy(
      _faith,
      _merkleRoot,
      overrides || {}
    ) as Promise<FaithMerkleAirdrop>;
  }
  getDeployTransaction(
    _faith: string,
    _merkleRoot: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_faith, _merkleRoot, overrides || {});
  }
  attach(address: string): FaithMerkleAirdrop {
    return super.attach(address) as FaithMerkleAirdrop;
  }
  connect(signer: Signer): FaithMerkleAirdrop__factory {
    return super.connect(signer) as FaithMerkleAirdrop__factory;
  }
  static readonly contractName: "FaithMerkleAirdrop";
  public readonly contractName: "FaithMerkleAirdrop";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaithMerkleAirdropInterface {
    return new utils.Interface(_abi) as FaithMerkleAirdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FaithMerkleAirdrop {
    return new Contract(address, _abi, signerOrProvider) as FaithMerkleAirdrop;
  }
}
