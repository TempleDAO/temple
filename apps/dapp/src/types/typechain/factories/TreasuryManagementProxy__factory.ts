/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TreasuryManagementProxy,
  TreasuryManagementProxyInterface,
} from "../TreasuryManagementProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract ITreasuryAllocation",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountStablec",
        type: "uint256",
      },
    ],
    name: "allocateTreasuryStablec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeHarvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITreasuryAllocation",
        name: "_contract",
        type: "address",
      },
    ],
    name: "ejectTreasuryAllocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestDistributionPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTemple",
        type: "uint256",
      },
    ],
    name: "mintAndAllocateTemple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "removePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetIV",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_harvestDistributionPercentage",
        type: "uint256",
      },
    ],
    name: "setHarvestDistributionPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleHarvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract TempleTreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "unallocateAndBurnUnusedMintedTemple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITreasuryAllocation",
        name: "_contract",
        type: "address",
      },
    ],
    name: "updateMarkToMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_poolHarvestShare",
        type: "uint96",
      },
    ],
    name: "upsertPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITreasuryAllocation",
        name: "_contract",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff60a01b1916600160a01b179055605060025534801561002857600080fd5b506040516110eb3803806110eb83398101604081905261004791610094565b600180546001600160a01b039384166001600160a01b031991821617909155600080549290931691161790556100c6565b80516001600160a01b038116811461008f57600080fd5b919050565b600080604083850312156100a6578182fd5b6100af83610078565b91506100bd60208401610078565b90509250929050565b611016806100d56000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063bf3abb2411610081578063e69948bc11610066578063e69948bc14610294578063e7b41733146102a7578063f2fde38b146102be57600080fd5b8063bf3abb2414610257578063d7d93b5a1461025f57600080fd5b80638da5cb5b146101fe5780639b4291081461021e578063a072dc3214610231578063b1bead991461024457600080fd5b80635b7244d41161010957806367c68202116100ee57806367c68202146101d05780637877eed2146101e357806379b3066b146101f657600080fd5b80635b7244d41461017357806361d027b31461018657600080fd5b806324c2ddec1461013b5780634641257d146101455780634ff92a4d1461014d57806351cff8d914610160575b600080fd5b6101436102d1565b005b6101436103d8565b61014361015b366004610edb565b610472565b61014361016e366004610edb565b61057c565b610143610181366004610edb565b610655565b6000546101a69073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101436101de366004610f83565b61072e565b6101436101f1366004610efe565b6107b4565b6101436108c6565b6001546101a69073ffffffffffffffffffffffffffffffffffffffff1681565b61014361022c366004610f9b565b6109ae565b61014361023f366004610f71565b610a8e565b610143610252366004610f29565b610b6e565b610143610c5b565b6000546102849074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016101c7565b6101436102a2366004610edb565b610d29565b6102b060025481565b6040519081526020016101c7565b6101436102cc366004610edb565b610e02565b60015473ffffffffffffffffffffffffffffffffffffffff163314610357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b60008054604080517f24c2ddec000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216926324c2ddec9260048084019382900301818387803b1580156103be57600080fd5b505af11580156103d2573d6000803e3d6000fd5b50505050565b60005474010000000000000000000000000000000000000000900460ff1615610470576000546002546040517fddc6326200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ddc63262916104569160040190815260200190565b600060405180830381600087803b1580156103be57600080fd5b565b60015473ffffffffffffffffffffffffffffffffffffffff1633146104f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161034e565b6000546040517f4ff92a4d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015290911690634ff92a4d906024015b600060405180830381600087803b15801561056157600080fd5b505af1158015610575573d6000803e3d6000fd5b5050505050565b60015473ffffffffffffffffffffffffffffffffffffffff1633146105fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161034e565b6000546040517f51cff8d900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152909116906351cff8d990602401610547565b60015473ffffffffffffffffffffffffffffffffffffffff1633146106d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161034e565b6000546040517f5b7244d400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015290911690635b7244d490602401610547565b60015473ffffffffffffffffffffffffffffffffffffffff1633146107af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161034e565b600255565b60015473ffffffffffffffffffffffffffffffffffffffff163314610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161034e565b6000546040517f7877eed200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820184905290911690637877eed2906044015b600060405180830381600087803b1580156108aa57600080fd5b505af11580156108be573d6000803e3d6000fd5b505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161034e565b60008054604080517f79b3066b000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216926379b3066b9260048084019382900301818387803b1580156103be57600080fd5b60015473ffffffffffffffffffffffffffffffffffffffff163314610a2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161034e565b6000546040517f9b4291080000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff838116602483015290911690639b42910890604401610890565b60015473ffffffffffffffffffffffffffffffffffffffff163314610b0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161034e565b6000546040517fa072dc3200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018490529091169063a072dc3290604401610890565b60015473ffffffffffffffffffffffffffffffffffffffff163314610bef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161034e565b6000546040517fb1bead9900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526bffffffffffffffffffffffff841660248301529091169063b1bead9990604401610890565b60015473ffffffffffffffffffffffffffffffffffffffff163314610cdc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161034e565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8116740100000000000000000000000000000000000000009182900460ff1615909102179055565b60015473ffffffffffffffffffffffffffffffffffffffff163314610daa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161034e565b6000546040517fe69948bc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301529091169063e69948bc90602401610547565b60015473ffffffffffffffffffffffffffffffffffffffff163314610e83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161034e565b6000546040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301529091169063f2fde38b90602401610547565b600060208284031215610eec578081fd5b8135610ef781610fbb565b9392505050565b60008060408385031215610f10578081fd5b8235610f1b81610fbb565b946020939093013593505050565b60008060408385031215610f3b578182fd5b8235610f4681610fbb565b915060208301356bffffffffffffffffffffffff81168114610f66578182fd5b809150509250929050565b60008060408385031215610f10578182fd5b600060208284031215610f94578081fd5b5035919050565b60008060408385031215610fad578182fd5b823591506020830135610f66815b73ffffffffffffffffffffffffffffffffffffffff81168114610fdd57600080fd5b5056fea2646970667358221220b595190802e3aa3fc838a7e1f654bd7c3723f0c12feeec72fc0d6c71c8dac54964736f6c63430008040033";

export class TreasuryManagementProxy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _owner: string,
    _treasury: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TreasuryManagementProxy> {
    return super.deploy(
      _owner,
      _treasury,
      overrides || {}
    ) as Promise<TreasuryManagementProxy>;
  }
  getDeployTransaction(
    _owner: string,
    _treasury: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _treasury, overrides || {});
  }
  attach(address: string): TreasuryManagementProxy {
    return super.attach(address) as TreasuryManagementProxy;
  }
  connect(signer: Signer): TreasuryManagementProxy__factory {
    return super.connect(signer) as TreasuryManagementProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryManagementProxyInterface {
    return new utils.Interface(_abi) as TreasuryManagementProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasuryManagementProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TreasuryManagementProxy;
  }
}
