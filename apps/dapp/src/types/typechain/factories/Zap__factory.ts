/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Zap, ZapInterface } from "../Zap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract OpeningCeremony",
        name: "_openingCeremonyContract",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_stablecToken",
        type: "address",
      },
      {
        internalType: "contract IUniswapRouter",
        name: "_uniswapRouter",
        type: "address",
      },
      {
        internalType: "contract IQuoter",
        name: "_quoter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "exchangeTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountExchangeToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountStablec",
        type: "uint256",
      },
    ],
    name: "ZapComplete",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountTokenInMaximum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fraxAmountOut",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
    ],
    name: "mintAndStakeZapsOC",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "openingCeremonyContract",
    outputs: [
      {
        internalType: "contract OpeningCeremony",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quoter",
    outputs: [
      {
        internalType: "contract IQuoter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouter",
    outputs: [
      {
        internalType: "contract IUniswapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200129b3803806200129b8339810160408190526200003491620000e3565b6200003f3362000093565b600180546001600160a01b039586166001600160a01b031991821617909155600280549486169482169490941790935560038054928516928416929092179091556004805491909316911617905562000163565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060008060808587031215620000f9578384fd5b845162000106816200014a565b602086015190945062000119816200014a565b60408601519093506200012c816200014a565b60608601519092506200013f816200014a565b939692955090935050565b6001600160a01b03811681146200016057600080fd5b50565b61112880620001736000396000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610138578063c6bbd5a714610163578063e8d93d4e14610190578063f2fde38b146101bd57600080fd5b8063140ad5971461008b5780631ffb7fb0146100e1578063715018a6146100f6578063735de9f71461010b57600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506002546100b89073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100f46100ef366004610e6e565b6101dd565b005b34801561010257600080fd5b506100f461067f565b34801561011757600080fd5b506003546100b89073ffffffffffffffffffffffffffffffffffffffff1681565b34801561014457600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166100b8565b34801561016f57600080fd5b506004546100b89073ffffffffffffffffffffffffffffffffffffffff1681565b34801561019c57600080fd5b506001546100b89073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101c957600080fd5b506100f46101d8366004610e1c565b61070c565b73ffffffffffffffffffffffffffffffffffffffff831615801590610200575034155b8061022a575073ffffffffffffffffffffffffffffffffffffffff831615801561022a5750600034115b6102bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f455448206f6e6c79206163636570746564206966207a617070696e672045544860448201527f2e0000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff8416156103115750836102e78433308461083c565b60035461030c90859073ffffffffffffffffffffffffffffffffffffffff168361091e565b610314565b50345b6040805160a0810182528381523060208201524281830152606081018590526080810183905260035491517ff28c0498000000000000000000000000000000000000000000000000000000008152909160009173ffffffffffffffffffffffffffffffffffffffff9091169063f28c0498903490610396908690600401610fd3565b6020604051808303818588803b1580156103af57600080fd5b505af11580156103c3573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906103e89190610e56565b6002546001549192506104159173ffffffffffffffffffffffffffffffffffffffff91821691168761091e565b6001546040517f8e7e49c70000000000000000000000000000000000000000000000000000000081523360048201526024810187905273ffffffffffffffffffffffffffffffffffffffff90911690638e7e49c790604401600060405180830381600087803b15801561048757600080fd5b505af115801561049b573d6000803e3d6000fd5b50505050828110156106195760006104b38285611051565b905073ffffffffffffffffffffffffffffffffffffffff8716156104e1576104dc873383610a2b565b610617565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312210e8a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561054b57600080fd5b505af115801561055f573d6000803e3d6000fd5b50506040516000925033915083908381818185875af1925050503d80600081146105a5576040519150601f19603f3d011682016040523d82523d6000602084013e6105aa565b606091505b5050905080610615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f526566756e64206f662065786365737320455448206661696c6564000000000060448201526064016102b2565b505b505b6040805133815273ffffffffffffffffffffffffffffffffffffffff88166020820152908101829052606081018690527f6035a74b9d6470434d4444275b17bed95c57a0b0cb4aed1c3e82f73976a241119060800160405180910390a150505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610700576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b2565b61070a6000610a86565b565b60005473ffffffffffffffffffffffffffffffffffffffff16331461078d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b2565b73ffffffffffffffffffffffffffffffffffffffff8116610830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102b2565b61083981610a86565b50565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526109189085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610afb565b50505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561099057600080fd5b505afa1580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c89190610e56565b6109d29190611039565b60405173ffffffffffffffffffffffffffffffffffffffff85166024820152604481018290529091506109189085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401610896565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610a819084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610896565b505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610b5d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610c079092919063ffffffff16565b805190915015610a815780806020019051810190610b7b9190610e36565b610a81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016102b2565b6060610c168484600085610c20565b90505b9392505050565b606082471015610cb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016102b2565b843b610d1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102b2565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610d439190610fa4565b60006040518083038185875af1925050503d8060008114610d80576040519150601f19603f3d011682016040523d82523d6000602084013e610d85565b606091505b5091509150610d95828286610da0565b979650505050505050565b60608315610daf575081610c19565b825115610dbf5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b29190610fc0565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e1757600080fd5b919050565b600060208284031215610e2d578081fd5b610c1982610df3565b600060208284031215610e47578081fd5b81518015158114610c19578182fd5b600060208284031215610e67578081fd5b5051919050565b60008060008060808587031215610e83578283fd5b84359350610e9360208601610df3565b925060408501359150606085013567ffffffffffffffff80821115610eb6578283fd5b818701915087601f830112610ec9578283fd5b813581811115610edb57610edb6110c3565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610f2157610f216110c3565b816040528281528a6020848701011115610f39578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008151808452610f72816020860160208601611068565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60008251610fb6818460208701611068565b9190910192915050565b602081526000610c196020830184610f5a565b602081526000825160a06020840152610fef60c0840182610f5a565b905073ffffffffffffffffffffffffffffffffffffffff60208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b6000821982111561104c5761104c611094565b500190565b60008282101561106357611063611094565b500390565b60005b8381101561108357818101518382015260200161106b565b838111156109185750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212207557bea114a5d890cc16858e35063bd6b41809b0bc0b692b5cd95b9e467ce8ac64736f6c63430008040033";

export class Zap__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _openingCeremonyContract: string,
    _stablecToken: string,
    _uniswapRouter: string,
    _quoter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Zap> {
    return super.deploy(
      _openingCeremonyContract,
      _stablecToken,
      _uniswapRouter,
      _quoter,
      overrides || {}
    ) as Promise<Zap>;
  }
  getDeployTransaction(
    _openingCeremonyContract: string,
    _stablecToken: string,
    _uniswapRouter: string,
    _quoter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _openingCeremonyContract,
      _stablecToken,
      _uniswapRouter,
      _quoter,
      overrides || {}
    );
  }
  attach(address: string): Zap {
    return super.attach(address) as Zap;
  }
  connect(signer: Signer): Zap__factory {
    return super.connect(signer) as Zap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZapInterface {
    return new utils.Interface(_abi) as ZapInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Zap {
    return new Contract(address, _abi, signerOrProvider) as Zap;
  }
}
