/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VaultedTemple, VaultedTempleInterface } from "../VaultedTemple";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_templeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_templeExposure",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "templeExposure",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "templeToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "toAccount",
        type: "address",
      },
    ],
    name: "toTemple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610c1c380380610c1c83398101604081905261002f916100a6565b61003833610056565b6001600160601b0319606092831b8116608052911b1660a0526100f7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100b8578182fd5b82516100c3816100df565b60208401519092506100d4816100df565b809150509250929050565b6001600160a01b03811681146100f457600080fd5b50565b60805160601c60a05160601c610aed61012f6000396000818160a40152610172015260008181610112015261024f0152610aed6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ef578063b1a9069c1461010d578063d9caed1214610134578063f2fde38b1461014757600080fd5b80634d4c23a814610082578063715018a6146100975780638bc1437b1461009f575b600080fd5b6100956100903660046109f3565b61015a565b005b610095610279565b6100c67f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60005473ffffffffffffffffffffffffffffffffffffffff166100c6565b6100c67f000000000000000000000000000000000000000000000000000000000000000081565b610095610142366004610998565b61028d565b61009561015536600461097e565b61040d565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461024a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f5661756c74656454656d706c653a204f6e6c792054656d70654578706f73757260448201527f652063616e2072656465656d2074656d706c65206f6e20626568616c66206f6660648201527f2061207661756c74000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6102757f000000000000000000000000000000000000000000000000000000000000000082846104c4565b5050565b610281610551565b61028b60006105d2565b565b610295610551565b73ffffffffffffffffffffffffffffffffffffffff8216610312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f746f2061646472657373207a65726f00000000000000000000000000000000006044820152606401610241565b73ffffffffffffffffffffffffffffffffffffffff83166103fd5760008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610387576040519150601f19603f3d011682016040523d82523d6000602084013e61038c565b606091505b50509050806103f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f73656e64206661696c65640000000000000000000000000000000000000000006044820152606401610241565b50505050565b6104088383836104c4565b505050565b610415610551565b73ffffffffffffffffffffffffffffffffffffffff81166104b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610241565b6104c1816105d2565b50565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610408908490610647565b60005473ffffffffffffffffffffffffffffffffffffffff16331461028b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610241565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006106a9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166107539092919063ffffffff16565b80519091501561040857808060200190518101906106c791906109d3565b610408576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610241565b6060610762848460008561076c565b90505b9392505050565b6060824710156107fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610241565b73ffffffffffffffffffffffffffffffffffffffff85163b61087c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610241565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516108a59190610a1e565b60006040518083038185875af1925050503d80600081146108e2576040519150601f19603f3d011682016040523d82523d6000602084013e6108e7565b606091505b50915091506108f7828286610902565b979650505050505050565b60608315610911575081610765565b8251156109215782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102419190610a3a565b803573ffffffffffffffffffffffffffffffffffffffff8116811461097957600080fd5b919050565b60006020828403121561098f578081fd5b61076582610955565b6000806000606084860312156109ac578182fd5b6109b584610955565b92506109c360208501610955565b9150604084013590509250925092565b6000602082840312156109e4578081fd5b81518015158114610765578182fd5b60008060408385031215610a05578182fd5b82359150610a1560208401610955565b90509250929050565b60008251610a30818460208701610a8b565b9190910192915050565b6020815260008251806020840152610a59816040850160208701610a8b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60005b83811015610aa6578181015183820152602001610a8e565b838111156103f7575050600091015256fea2646970667358221220df97290da5df45d87a29ad60961f69cea8d2ab0e411c86d42a4a22a53fdea38564736f6c63430008040033";

type VaultedTempleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultedTempleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultedTemple__factory extends ContractFactory {
  constructor(...args: VaultedTempleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "VaultedTemple";
  }

  deploy(
    _templeToken: string,
    _templeExposure: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VaultedTemple> {
    return super.deploy(
      _templeToken,
      _templeExposure,
      overrides || {}
    ) as Promise<VaultedTemple>;
  }
  getDeployTransaction(
    _templeToken: string,
    _templeExposure: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _templeToken,
      _templeExposure,
      overrides || {}
    );
  }
  attach(address: string): VaultedTemple {
    return super.attach(address) as VaultedTemple;
  }
  connect(signer: Signer): VaultedTemple__factory {
    return super.connect(signer) as VaultedTemple__factory;
  }
  static readonly contractName: "VaultedTemple";
  public readonly contractName: "VaultedTemple";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultedTempleInterface {
    return new utils.Interface(_abi) as VaultedTempleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultedTemple {
    return new Contract(address, _abi, signerOrProvider) as VaultedTemple;
  }
}
