/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TempleCashback,
  TempleCashbackInterface,
} from "../TempleCashback";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenQuantity",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "VERIFY_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenQuantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenQuantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "generateHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "usedNonces",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenQuantity",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040527fb91e21d5674662c9ff1f47ae598a02560a89eff14460e5335d2a8e947310b4af6101205234801561003657600080fd5b50604051611531380380611531833981016040819052610055916101aa565b604080518082018252600e81526d54656d706c65436173686261636b60901b60208083019182528351808501855260018152603160f81b908201529151902060c08181527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660e08190524660a081815286517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281890196909652606081019390935260808084019290925230838201528651808403909101815291909201909452835193909201929092209052610100526101353361015a565b600180546001600160a01b0319166001600160a01b03929092169190911790556101d8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156101bb578081fd5b81516001600160a01b03811681146101d1578182fd5b9392505050565b60805160a05160c05160e051610100516101205161130361022e6000396000818161020d01526106da01526000610b4c01526000610b9b01526000610b7601526000610afa01526000610b2301526113036000f3fe6080604052600436106100b15760003560e01c80637188813811610069578063cb6535b51161004e578063cb6535b5146101fb578063f2fde38b1461022f578063f3fef3a31461024f57600080fd5b806371888138146101a25780638da5cb5b146101d057600080fd5b80635437988d1161009a5780635437988d146101225780636a8a689414610142578063715018a61461018d57600080fd5b80632b7ac3f3146100b6578063432753d41461010d575b600080fd5b3480156100c257600080fd5b506001546100e39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61012061011b3660046111a9565b61026f565b005b34801561012e57600080fd5b5061012061013d3660046110fe565b61057f565b34801561014e57600080fd5b5061017d61015d366004611160565b600260209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610104565b34801561019957600080fd5b50610120610647565b3480156101ae57600080fd5b506101c26101bd36600461111f565b6106d4565b604051908152602001610104565b3480156101dc57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166100e3565b34801561020757600080fd5b506101c27f000000000000000000000000000000000000000000000000000000000000000081565b34801561023b57600080fd5b5061012061024a3660046110fe565b610761565b34801561025b57600080fd5b5061012061026a366004611160565b610891565b600082116102de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e6f2066756e647320616c6c6f6361746564000000000000000000000000000060448201526064015b60405180910390fd5b33600090815260026020908152604080832084845290915290205460ff1615610363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f486173682075736564000000000000000000000000000000000000000000000060448201526064016102d5565b61036d85856109bd565b6103d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016102d5565b846103e0843385856106d4565b14610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f48617368206661696c000000000000000000000000000000000000000000000060448201526064016102d5565b3360008181526002602090815260408083208584529091529081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517fa9059cbb00000000000000000000000000000000000000000000000000000000815260048101919091526024810183905273ffffffffffffffffffffffffffffffffffffffff84169063a9059cbb90604401602060405180830381600087803b1580156104fa57600080fd5b505af115801561050e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105329190611189565b506040518290339073ffffffffffffffffffffffffffffffffffffffff8616907f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639890600090a45050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610600576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d5565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d5565b6106d260006109ee565b565b604080517f0000000000000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff8087169282019290925290841660608201526080810183905260a081018290526000906107589060c00160405160208183030381529060405280519060200120610a63565b95945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d5565b73ffffffffffffffffffffffffffffffffffffffff8116610885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102d5565b61088e816109ee565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610912576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d5565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810182905273ffffffffffffffffffffffffffffffffffffffff83169063a9059cbb90604401602060405180830381600087803b15801561098057600080fd5b505af1158015610994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b89190611189565b505050565b60006109c98383610ad2565b60015473ffffffffffffffffffffffffffffffffffffffff9182169116149392505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610acc610a70610af6565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b6000806000610ae18585610be9565b91509150610aee81610c59565b509392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461415610b4557507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600080825160411415610c205760208301516040840151606085015160001a610c1487828585610f75565b94509450505050610c52565b825160401415610c4a5760208301516040840151610c3f86838361108d565b935093505050610c52565b506000905060025b9250929050565b6000816004811115610c94577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610c9d5750565b6001816004811115610cd8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610d40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016102d5565b6002816004811115610d7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610de3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016102d5565b6003816004811115610e1e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610eac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016102d5565b6004816004811115610ee7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561088e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016102d5565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610fac5750600090506003611084565b8460ff16601b14158015610fc457508460ff16601c14155b15610fd55750600090506004611084565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611029573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661107d57600060019250925050611084565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831660ff84901c601b016110c787828885610f75565b935093505050935093915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146110f957600080fd5b919050565b60006020828403121561110f578081fd5b611118826110d5565b9392505050565b60008060008060808587031215611134578283fd5b61113d856110d5565b935061114b602086016110d5565b93969395505050506040820135916060013590565b60008060408385031215611172578182fd5b61117b836110d5565b946020939093013593505050565b60006020828403121561119a578081fd5b81518015158114611118578182fd5b600080600080600060a086880312156111c0578081fd5b85359450602086013567ffffffffffffffff808211156111de578283fd5b818801915088601f8301126111f1578283fd5b8135818111156112035761120361129e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156112495761124961129e565b816040528281528b6020848701011115611261578586fd5b82602086016020830137918201602001859052509550611286915050604087016110d5565b94979396509394606081013594506080013592915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220b3fe2679c71161d0f38b93b5514f18f0503638a9d7b8202d20d342ec2277962864736f6c63430008040033";

export class TempleCashback__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _verifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TempleCashback> {
    return super.deploy(_verifier, overrides || {}) as Promise<TempleCashback>;
  }
  getDeployTransaction(
    _verifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_verifier, overrides || {});
  }
  attach(address: string): TempleCashback {
    return super.attach(address) as TempleCashback;
  }
  connect(signer: Signer): TempleCashback__factory {
    return super.connect(signer) as TempleCashback__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TempleCashbackInterface {
    return new utils.Interface(_abi) as TempleCashbackInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TempleCashback {
    return new Contract(address, _abi, signerOrProvider) as TempleCashback;
  }
}
