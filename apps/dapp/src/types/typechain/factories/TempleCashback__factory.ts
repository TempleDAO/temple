/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TempleCashback,
  TempleCashbackInterface,
} from "../TempleCashback";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenQuantity",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "VERIFY_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenQuantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenQuantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "generateHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "usedNonces",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenQuantity",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040527fb91e21d5674662c9ff1f47ae598a02560a89eff14460e5335d2a8e947310b4af6101405234801561003657600080fd5b506040516115a63803806115a6833981016040819052610055916101d0565b604080518082018252600e81526d54656d706c65436173686261636b60901b6020808301918252835180850190945260018452603160f81b908401528151902060e08190527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101388184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060601b60c052610120525061015b92506101569150503390565b610180565b600180546001600160a01b0319166001600160a01b03929092169190911790556101fe565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156101e1578081fd5b81516001600160a01b03811681146101f7578182fd5b9392505050565b60805160a05160c05160601c60e0516101005161012051610140516113446102626000396000818161020d01526106da01526000610b8d01526000610bdc01526000610bb701526000610b1001526000610b3a01526000610b6401526113446000f3fe6080604052600436106100b15760003560e01c80637188813811610069578063cb6535b51161004e578063cb6535b5146101fb578063f2fde38b1461022f578063f3fef3a31461024f57600080fd5b806371888138146101a25780638da5cb5b146101d057600080fd5b80635437988d1161009a5780635437988d146101225780636a8a689414610142578063715018a61461018d57600080fd5b80632b7ac3f3146100b6578063432753d41461010d575b600080fd5b3480156100c257600080fd5b506001546100e39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61012061011b3660046111ea565b61026f565b005b34801561012e57600080fd5b5061012061013d36600461113f565b61057f565b34801561014e57600080fd5b5061017d61015d3660046111a1565b600260209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610104565b34801561019957600080fd5b50610120610647565b3480156101ae57600080fd5b506101c26101bd366004611160565b6106d4565b604051908152602001610104565b3480156101dc57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166100e3565b34801561020757600080fd5b506101c27f000000000000000000000000000000000000000000000000000000000000000081565b34801561023b57600080fd5b5061012061024a36600461113f565b610761565b34801561025b57600080fd5b5061012061026a3660046111a1565b610891565b600082116102de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e6f2066756e647320616c6c6f6361746564000000000000000000000000000060448201526064015b60405180910390fd5b33600090815260026020908152604080832084845290915290205460ff1615610363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f486173682075736564000000000000000000000000000000000000000000000060448201526064016102d5565b61036d85856109bd565b6103d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016102d5565b846103e0843385856106d4565b14610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f48617368206661696c000000000000000000000000000000000000000000000060448201526064016102d5565b3360008181526002602090815260408083208584529091529081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517fa9059cbb00000000000000000000000000000000000000000000000000000000815260048101919091526024810183905273ffffffffffffffffffffffffffffffffffffffff84169063a9059cbb90604401602060405180830381600087803b1580156104fa57600080fd5b505af115801561050e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053291906111ca565b506040518290339073ffffffffffffffffffffffffffffffffffffffff8616907f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639890600090a45050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610600576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d5565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d5565b6106d260006109ee565b565b604080517f0000000000000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff8087169282019290925290841660608201526080810183905260a081018290526000906107589060c00160405160208183030381529060405280519060200120610a63565b95945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d5565b73ffffffffffffffffffffffffffffffffffffffff8116610885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102d5565b61088e816109ee565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610912576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d5565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810182905273ffffffffffffffffffffffffffffffffffffffff83169063a9059cbb90604401602060405180830381600087803b15801561098057600080fd5b505af1158015610994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b891906111ca565b505050565b60006109c98383610ad2565b60015473ffffffffffffffffffffffffffffffffffffffff9182169116149392505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610acc610a70610af6565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b6000806000610ae18585610c2a565b91509150610aee81610c9a565b509392505050565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148015610b5c57507f000000000000000000000000000000000000000000000000000000000000000046145b15610b8657507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600080825160411415610c615760208301516040840151606085015160001a610c5587828585610fb6565b94509450505050610c93565b825160401415610c8b5760208301516040840151610c808683836110ce565b935093505050610c93565b506000905060025b9250929050565b6000816004811115610cd5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610cde5750565b6001816004811115610d19577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610d81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016102d5565b6002816004811115610dbc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610e24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016102d5565b6003816004811115610e5f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610eed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016102d5565b6004816004811115610f28577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561088e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016102d5565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610fed57506000905060036110c5565b8460ff16601b1415801561100557508460ff16601c14155b1561101657506000905060046110c5565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561106a573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166110be576000600192509250506110c5565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831660ff84901c601b0161110887828885610fb6565b935093505050935093915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461113a57600080fd5b919050565b600060208284031215611150578081fd5b61115982611116565b9392505050565b60008060008060808587031215611175578283fd5b61117e85611116565b935061118c60208601611116565b93969395505050506040820135916060013590565b600080604083850312156111b3578182fd5b6111bc83611116565b946020939093013593505050565b6000602082840312156111db578081fd5b81518015158114611159578182fd5b600080600080600060a08688031215611201578081fd5b85359450602086013567ffffffffffffffff8082111561121f578283fd5b818801915088601f830112611232578283fd5b813581811115611244576112446112df565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561128a5761128a6112df565b816040528281528b60208487010111156112a2578586fd5b826020860160208301379182016020018590525095506112c791505060408701611116565b94979396509394606081013594506080013592915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212207fcf40a253036aae877d9bdc7cd0ddc2f5db72eff793e705a20e10ad340d84e464736f6c63430008040033";

export class TempleCashback__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _verifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TempleCashback> {
    return super.deploy(_verifier, overrides || {}) as Promise<TempleCashback>;
  }
  getDeployTransaction(
    _verifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_verifier, overrides || {});
  }
  attach(address: string): TempleCashback {
    return super.attach(address) as TempleCashback;
  }
  connect(signer: Signer): TempleCashback__factory {
    return super.connect(signer) as TempleCashback__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TempleCashbackInterface {
    return new utils.Interface(_abi) as TempleCashbackInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TempleCashback {
    return new Contract(address, _abi, signerOrProvider) as TempleCashback;
  }
}
