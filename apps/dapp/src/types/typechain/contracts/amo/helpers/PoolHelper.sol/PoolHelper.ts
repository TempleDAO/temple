/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../common";

export interface PoolHelperInterface extends utils.Interface {
  functions: {
    "TPF_PRECISION()": FunctionFragment;
    "amo()": FunctionFragment;
    "balancerPoolId()": FunctionFragment;
    "balancerVault()": FunctionFragment;
    "bptToken()": FunctionFragment;
    "exitPool(uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)": FunctionFragment;
    "getBalances()": FunctionFragment;
    "getSlippage(uint256)": FunctionFragment;
    "getSpotPriceScaled()": FunctionFragment;
    "getTempleStableBalances()": FunctionFragment;
    "isSpotPriceAboveTPF(uint256)": FunctionFragment;
    "isSpotPriceAboveTPF(uint256,uint256)": FunctionFragment;
    "isSpotPriceAboveTPFUpperBound(uint256,uint256)": FunctionFragment;
    "isSpotPriceBelowTPF(uint256)": FunctionFragment;
    "isSpotPriceBelowTPF(uint256,uint256)": FunctionFragment;
    "isSpotPriceBelowTPFLowerBound(uint256,uint256)": FunctionFragment;
    "joinPool(uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)": FunctionFragment;
    "stable()": FunctionFragment;
    "temple()": FunctionFragment;
    "templeIndexInBalancerPool()": FunctionFragment;
    "willExitTakePriceAboveTPFUpperBound(uint256,uint256,uint256)": FunctionFragment;
    "willJoinTakePriceBelowTPFLowerBound(uint256,uint256,uint256)": FunctionFragment;
    "willStableExitTakePriceBelowTPFLowerBound(uint256,uint256,uint256)": FunctionFragment;
    "willStableJoinTakePriceAboveTPFUpperBound(uint256,uint256,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "TPF_PRECISION"
      | "amo"
      | "balancerPoolId"
      | "balancerVault"
      | "bptToken"
      | "exitPool"
      | "getBalances"
      | "getSlippage"
      | "getSpotPriceScaled"
      | "getTempleStableBalances"
      | "isSpotPriceAboveTPF(uint256)"
      | "isSpotPriceAboveTPF(uint256,uint256)"
      | "isSpotPriceAboveTPFUpperBound"
      | "isSpotPriceBelowTPF(uint256)"
      | "isSpotPriceBelowTPF(uint256,uint256)"
      | "isSpotPriceBelowTPFLowerBound"
      | "joinPool"
      | "stable"
      | "temple"
      | "templeIndexInBalancerPool"
      | "willExitTakePriceAboveTPFUpperBound"
      | "willJoinTakePriceBelowTPFLowerBound"
      | "willStableExitTakePriceBelowTPFLowerBound"
      | "willStableJoinTakePriceAboveTPFUpperBound"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "TPF_PRECISION",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "amo", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "balancerPoolId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "balancerVault",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "bptToken", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "exitPool",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getBalances",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSlippage",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getSpotPriceScaled",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTempleStableBalances",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isSpotPriceAboveTPF(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isSpotPriceAboveTPF(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isSpotPriceAboveTPFUpperBound",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isSpotPriceBelowTPF(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isSpotPriceBelowTPF(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isSpotPriceBelowTPFLowerBound",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "joinPool",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(functionFragment: "stable", values?: undefined): string;
  encodeFunctionData(functionFragment: "temple", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "templeIndexInBalancerPool",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "willExitTakePriceAboveTPFUpperBound",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "willJoinTakePriceBelowTPFLowerBound",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "willStableExitTakePriceBelowTPFLowerBound",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "willStableJoinTakePriceAboveTPFUpperBound",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "TPF_PRECISION",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "amo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "balancerPoolId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balancerVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "bptToken", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "exitPool", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getBalances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSlippage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSpotPriceScaled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTempleStableBalances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isSpotPriceAboveTPF(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isSpotPriceAboveTPF(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isSpotPriceAboveTPFUpperBound",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isSpotPriceBelowTPF(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isSpotPriceBelowTPF(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isSpotPriceBelowTPFLowerBound",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "joinPool", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "stable", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "temple", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "templeIndexInBalancerPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "willExitTakePriceAboveTPFUpperBound",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "willJoinTakePriceBelowTPFLowerBound",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "willStableExitTakePriceBelowTPFLowerBound",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "willStableJoinTakePriceAboveTPFUpperBound",
    data: BytesLike
  ): Result;

  events: {};
}

export interface PoolHelper extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PoolHelperInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    TPF_PRECISION(overrides?: CallOverrides): Promise<[BigNumber]>;

    amo(overrides?: CallOverrides): Promise<[string]>;

    balancerPoolId(overrides?: CallOverrides): Promise<[string]>;

    balancerVault(overrides?: CallOverrides): Promise<[string]>;

    bptToken(overrides?: CallOverrides): Promise<[string]>;

    exitPool(
      bptAmountIn: PromiseOrValue<BigNumberish>,
      minAmountOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      postRebalanceSlippage: PromiseOrValue<BigNumberish>,
      exitTokenIndex: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      exitPoolToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getBalances(
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { balances: BigNumber[] }>;

    getSlippage(
      spotPriceBeforeScaled: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getSpotPriceScaled(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { spotPriceScaled: BigNumber }>;

    getTempleStableBalances(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        templeBalance: BigNumber;
        stableBalance: BigNumber;
      }
    >;

    "isSpotPriceAboveTPF(uint256)"(
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isSpotPriceAboveTPF(uint256,uint256)"(
      slippage: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isSpotPriceAboveTPFUpperBound(
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isSpotPriceBelowTPF(uint256)"(
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isSpotPriceBelowTPF(uint256,uint256)"(
      slippage: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isSpotPriceBelowTPFLowerBound(
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    joinPool(
      amountIn: PromiseOrValue<BigNumberish>,
      minBptOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      postRebalanceSlippage: PromiseOrValue<BigNumberish>,
      joinTokenIndex: PromiseOrValue<BigNumberish>,
      joinPoolToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    stable(overrides?: CallOverrides): Promise<[string]>;

    temple(overrides?: CallOverrides): Promise<[string]>;

    templeIndexInBalancerPool(overrides?: CallOverrides): Promise<[BigNumber]>;

    willExitTakePriceAboveTPFUpperBound(
      tokensOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    willJoinTakePriceBelowTPFLowerBound(
      tokensIn: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    willStableExitTakePriceBelowTPFLowerBound(
      tokensOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    willStableJoinTakePriceAboveTPFUpperBound(
      tokensIn: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  TPF_PRECISION(overrides?: CallOverrides): Promise<BigNumber>;

  amo(overrides?: CallOverrides): Promise<string>;

  balancerPoolId(overrides?: CallOverrides): Promise<string>;

  balancerVault(overrides?: CallOverrides): Promise<string>;

  bptToken(overrides?: CallOverrides): Promise<string>;

  exitPool(
    bptAmountIn: PromiseOrValue<BigNumberish>,
    minAmountOut: PromiseOrValue<BigNumberish>,
    rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
    rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
    postRebalanceSlippage: PromiseOrValue<BigNumberish>,
    exitTokenIndex: PromiseOrValue<BigNumberish>,
    templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
    exitPoolToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getBalances(overrides?: CallOverrides): Promise<BigNumber[]>;

  getSlippage(
    spotPriceBeforeScaled: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getSpotPriceScaled(overrides?: CallOverrides): Promise<BigNumber>;

  getTempleStableBalances(
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & {
      templeBalance: BigNumber;
      stableBalance: BigNumber;
    }
  >;

  "isSpotPriceAboveTPF(uint256)"(
    templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isSpotPriceAboveTPF(uint256,uint256)"(
    slippage: PromiseOrValue<BigNumberish>,
    templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isSpotPriceAboveTPFUpperBound(
    rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
    templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isSpotPriceBelowTPF(uint256)"(
    templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isSpotPriceBelowTPF(uint256,uint256)"(
    slippage: PromiseOrValue<BigNumberish>,
    templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isSpotPriceBelowTPFLowerBound(
    rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
    templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  joinPool(
    amountIn: PromiseOrValue<BigNumberish>,
    minBptOut: PromiseOrValue<BigNumberish>,
    rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
    rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
    templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
    postRebalanceSlippage: PromiseOrValue<BigNumberish>,
    joinTokenIndex: PromiseOrValue<BigNumberish>,
    joinPoolToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  stable(overrides?: CallOverrides): Promise<string>;

  temple(overrides?: CallOverrides): Promise<string>;

  templeIndexInBalancerPool(overrides?: CallOverrides): Promise<BigNumber>;

  willExitTakePriceAboveTPFUpperBound(
    tokensOut: PromiseOrValue<BigNumberish>,
    rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
    templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  willJoinTakePriceBelowTPFLowerBound(
    tokensIn: PromiseOrValue<BigNumberish>,
    rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
    templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  willStableExitTakePriceBelowTPFLowerBound(
    tokensOut: PromiseOrValue<BigNumberish>,
    rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
    templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  willStableJoinTakePriceAboveTPFUpperBound(
    tokensIn: PromiseOrValue<BigNumberish>,
    rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
    templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    TPF_PRECISION(overrides?: CallOverrides): Promise<BigNumber>;

    amo(overrides?: CallOverrides): Promise<string>;

    balancerPoolId(overrides?: CallOverrides): Promise<string>;

    balancerVault(overrides?: CallOverrides): Promise<string>;

    bptToken(overrides?: CallOverrides): Promise<string>;

    exitPool(
      bptAmountIn: PromiseOrValue<BigNumberish>,
      minAmountOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      postRebalanceSlippage: PromiseOrValue<BigNumberish>,
      exitTokenIndex: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      exitPoolToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBalances(overrides?: CallOverrides): Promise<BigNumber[]>;

    getSlippage(
      spotPriceBeforeScaled: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSpotPriceScaled(overrides?: CallOverrides): Promise<BigNumber>;

    getTempleStableBalances(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        templeBalance: BigNumber;
        stableBalance: BigNumber;
      }
    >;

    "isSpotPriceAboveTPF(uint256)"(
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isSpotPriceAboveTPF(uint256,uint256)"(
      slippage: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isSpotPriceAboveTPFUpperBound(
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isSpotPriceBelowTPF(uint256)"(
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isSpotPriceBelowTPF(uint256,uint256)"(
      slippage: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isSpotPriceBelowTPFLowerBound(
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    joinPool(
      amountIn: PromiseOrValue<BigNumberish>,
      minBptOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      postRebalanceSlippage: PromiseOrValue<BigNumberish>,
      joinTokenIndex: PromiseOrValue<BigNumberish>,
      joinPoolToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    stable(overrides?: CallOverrides): Promise<string>;

    temple(overrides?: CallOverrides): Promise<string>;

    templeIndexInBalancerPool(overrides?: CallOverrides): Promise<BigNumber>;

    willExitTakePriceAboveTPFUpperBound(
      tokensOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    willJoinTakePriceBelowTPFLowerBound(
      tokensIn: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    willStableExitTakePriceBelowTPFLowerBound(
      tokensOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    willStableJoinTakePriceAboveTPFUpperBound(
      tokensIn: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    TPF_PRECISION(overrides?: CallOverrides): Promise<BigNumber>;

    amo(overrides?: CallOverrides): Promise<BigNumber>;

    balancerPoolId(overrides?: CallOverrides): Promise<BigNumber>;

    balancerVault(overrides?: CallOverrides): Promise<BigNumber>;

    bptToken(overrides?: CallOverrides): Promise<BigNumber>;

    exitPool(
      bptAmountIn: PromiseOrValue<BigNumberish>,
      minAmountOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      postRebalanceSlippage: PromiseOrValue<BigNumberish>,
      exitTokenIndex: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      exitPoolToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getBalances(overrides?: CallOverrides): Promise<BigNumber>;

    getSlippage(
      spotPriceBeforeScaled: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSpotPriceScaled(overrides?: CallOverrides): Promise<BigNumber>;

    getTempleStableBalances(overrides?: CallOverrides): Promise<BigNumber>;

    "isSpotPriceAboveTPF(uint256)"(
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isSpotPriceAboveTPF(uint256,uint256)"(
      slippage: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isSpotPriceAboveTPFUpperBound(
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isSpotPriceBelowTPF(uint256)"(
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isSpotPriceBelowTPF(uint256,uint256)"(
      slippage: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isSpotPriceBelowTPFLowerBound(
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    joinPool(
      amountIn: PromiseOrValue<BigNumberish>,
      minBptOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      postRebalanceSlippage: PromiseOrValue<BigNumberish>,
      joinTokenIndex: PromiseOrValue<BigNumberish>,
      joinPoolToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    stable(overrides?: CallOverrides): Promise<BigNumber>;

    temple(overrides?: CallOverrides): Promise<BigNumber>;

    templeIndexInBalancerPool(overrides?: CallOverrides): Promise<BigNumber>;

    willExitTakePriceAboveTPFUpperBound(
      tokensOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    willJoinTakePriceBelowTPFLowerBound(
      tokensIn: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    willStableExitTakePriceBelowTPFLowerBound(
      tokensOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    willStableJoinTakePriceAboveTPFUpperBound(
      tokensIn: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    TPF_PRECISION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    amo(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    balancerPoolId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    balancerVault(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    bptToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    exitPool(
      bptAmountIn: PromiseOrValue<BigNumberish>,
      minAmountOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      postRebalanceSlippage: PromiseOrValue<BigNumberish>,
      exitTokenIndex: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      exitPoolToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getBalances(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getSlippage(
      spotPriceBeforeScaled: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSpotPriceScaled(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTempleStableBalances(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isSpotPriceAboveTPF(uint256)"(
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isSpotPriceAboveTPF(uint256,uint256)"(
      slippage: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isSpotPriceAboveTPFUpperBound(
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isSpotPriceBelowTPF(uint256)"(
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isSpotPriceBelowTPF(uint256,uint256)"(
      slippage: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isSpotPriceBelowTPFLowerBound(
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    joinPool(
      amountIn: PromiseOrValue<BigNumberish>,
      minBptOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      postRebalanceSlippage: PromiseOrValue<BigNumberish>,
      joinTokenIndex: PromiseOrValue<BigNumberish>,
      joinPoolToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    stable(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    temple(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    templeIndexInBalancerPool(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    willExitTakePriceAboveTPFUpperBound(
      tokensOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    willJoinTakePriceBelowTPFLowerBound(
      tokensIn: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    willStableExitTakePriceBelowTPFLowerBound(
      tokensOut: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundLow: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    willStableJoinTakePriceAboveTPFUpperBound(
      tokensIn: PromiseOrValue<BigNumberish>,
      rebalancePercentageBoundUp: PromiseOrValue<BigNumberish>,
      templePriceFloorNumerator: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
