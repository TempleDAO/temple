type Metric @entity {
  id: ID!
  timestamp: BigInt!
  volume: BigDecimal!
  volumeUSD: BigDecimal!
  tvl: BigDecimal!
  tvlUSD: BigDecimal!
  vaultCount: BigInt!
  exposureCount: BigInt!
  tfrCount: BigInt!
  tokenCount: BigInt!
  userCount: BigInt!
  vaultGroupCount: BigInt!
}

type MetricDayData @entity {
  id: ID!
  timestamp: BigInt!
  metric: Metric!
  volume: BigDecimal!
  volumeUSD: BigDecimal!
  tvl: BigDecimal!
  tvlUSD: BigDecimal!
  vaultCount: BigInt!
  exposureCount: BigInt!
  tfrCount: BigInt!
  tokenCount: BigInt!
  userCount: BigInt!
  vaultGroupCount: BigInt!
}

type OpsManager @entity {
  id: ID!
  timestamp: BigInt!
  vaultGroups: [VaultGroup!]!
  exposures: [Exposure!]!
  treasuryFarmingRevenues: [TreasuryFarmingRevenue!]!
}

type Exposure @entity {
  id: ID!
  timestamp: BigInt!
  name: String!
  symbol: String!
  revalToken: String!
  reval: BigInt!
  mintManager: String!
  liquidator: String!
  opsManager: OpsManager!
}

type TreasuryFarmingRevenue @entity {
  id: ID!
  timestamp: BigInt!
  exposure: Exposure!
  totalShares: BigInt!
  lifetimeAccRevenueScaledByShare: BigInt!
  opsManager: OpsManager!
}

type VaultGroup @entity {
  id: ID!
  timestamp: BigInt!
  tvl: BigDecimal!
  opsManager: OpsManager!
  vaultGroupDayDatas: [VaultGroupDayData!]! @derivedFrom(field: "vaultGroup")
}

type VaultGroupDayData @entity {
  id: ID!
  timestamp: BigInt!
  vaultGroup: VaultGroup!
  tvl: BigDecimal!
  opsManager: OpsManager!
}

type Vault @entity {
  id: ID!
  timestamp: BigInt!
  name: String!
  symbol: String!
  templeToken: String!
  periodDuration: BigInt!
  enterExitWindowDuration: BigInt!
  shareBoostFactor: BigDecimal!
  joiningFee: String!
  firstPeriodStartTimestamp: BigInt!
  users: [User!]!
  tvl: BigDecimal!
  vaultGroup: VaultGroup!
  vaultHourDatas: [VaultHourData!]! @derivedFrom(field: "vault")
}

type VaultHourData @entity {
  id: ID!
  timestamp: BigInt!
  vault: Vault!
  name: String!
  symbol: String!
  templeToken: String!
  periodDuration: BigInt!
  enterExitWindowDuration: BigInt!
  shareBoostFactor: BigDecimal!
  joiningFee: String!
  firstPeriodStartTimestamp: BigInt!
  users: [User!]!
  tvl: BigDecimal!
  vaultGroup: VaultGroup!
}

type User @entity {
  id: ID!
  timestamp: BigInt!
  vaultUserBalances: [VaultUserBalance!]! @derivedFrom(field: "user")
  deposits: [Deposit!]! @derivedFrom(field: "user")
  withdraws: [Withdraw!]! @derivedFrom(field: "user")
  userDayDatas: [UserDayData!]! @derivedFrom(field: "user")
  depositsBalance: BigDecimal!
  withdrawsBalance: BigDecimal!
  totalBalance: BigDecimal!
}

type UserDayData @entity {
  id: ID!
  timestamp: BigInt!
  user: User!
  depositsBalance: BigDecimal!
  withdrawsBalance: BigDecimal!
  totalBalance: BigDecimal!
}

type VaultUserBalance @entity {
  id: ID!
  timestamp: BigInt!
  vault: Vault!
  user: User!
  token: Token!
  amount: BigDecimal!
  staked: BigDecimal!
  value: BigDecimal!
}

type Deposit @entity {
  id: ID!
  timestamp: BigInt!
  vault: Vault!
  user: User!
  token: Token!
  amount: BigDecimal!
  staked: BigDecimal!
  value: BigDecimal!
}

type Withdraw @entity {
  id: ID!
  timestamp: BigInt!
  vault: Vault!
  user: User!
  token: Token!
  amount: BigDecimal!
  value: BigDecimal!
}

type Token @entity {
  id: ID!
  timestamp: BigInt!
}
