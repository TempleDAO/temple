type Metric @entity {
  id: ID!
  timestamp: BigInt!
  volumeETH: BigDecimal!
  volumeUSD: BigDecimal!
  tvlETH: BigDecimal!
  tvlUSD: BigDecimal!
  vaultCount: BigInt!
  exposureCount: BigInt!
  tfrCount: BigInt!
  tokenCount: BigInt!
  userCount: BigInt!
}

type MetricDayData @entity {
  id: ID!
  timestamp: BigInt!
  metric: Metric!
  volumeETH: BigDecimal!
  volumeUSD: BigDecimal!
  tvlETH: BigDecimal!
  tvlUSD: BigDecimal!
  vaultCount: BigInt!
  exposureCount: BigInt!
  tfrCount: BigInt!
  tokenCount: BigInt!
  userCount: BigInt!
}

type Exposure @entity {
  id: ID!
  timestamp: BigInt!
  name: String!
  symbol: String!
  revalToken: String!
  reval: BigInt!
  mintManager: String!
  liquidator: String!
}

type TreasuryFarmingRevenue @entity {
  id: ID!
  timestamp: BigInt!
  exposure: Exposure!
  totalShares: BigInt!
  lifetimeAccRevenueScaledByShare: BigInt!
}

type Vault @entity {
  id: ID!
  timestamp: BigInt!
  name: String!
  symbol: String!
  templeToken: String!
  periodDuration: BigInt!
  enterExitWindowDuration: BigInt!
  shareBoostFactor: BigDecimal!
  joiningFee: String!
  firstPeriodStartTimestamp: BigInt!
  vaultHourDatas: [VaultHourData!]! @derivedFrom(field: "vault")
}

type VaultHourData @entity {
  id: ID!
  timestamp: BigInt!
  vault: Vault!
  name: String!
  symbol: String!
  templeToken: String!
  periodDuration: BigInt!
  enterExitWindowDuration: BigInt!
  shareBoostFactor: BigDecimal!
  joiningFee: String!
  firstPeriodStartTimestamp: BigInt!
}
